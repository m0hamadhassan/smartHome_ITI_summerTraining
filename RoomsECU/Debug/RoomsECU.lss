
RoomsECU.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002864  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00002864  000028f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800068  00800068  00002900  2**0
                  ALLOC
  3 .stab         00001e18  00000000  00000000  00002900  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000db7  00000000  00000000  00004718  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000140  00000000  00000000  000054cf  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000170  00000000  00000000  0000560f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001c49  00000000  00000000  0000577f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000eeb  00000000  00000000  000073c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000dad  00000000  00000000  000082b3  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000160  00000000  00000000  00009060  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000028d  00000000  00000000  000091c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007ce  00000000  00000000  0000944d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  00009c1b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 37 06 	jmp	0xc6e	; 0xc6e <__vector_12>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a8 e6       	ldi	r26, 0x68	; 104
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
      68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
      6a:	a9 36       	cpi	r26, 0x69	; 105
      6c:	b1 07       	cpc	r27, r17
      6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>

00000070 <__do_copy_data>:
      70:	10 e0       	ldi	r17, 0x00	; 0
      72:	a0 e6       	ldi	r26, 0x60	; 96
      74:	b0 e0       	ldi	r27, 0x00	; 0
      76:	e4 e6       	ldi	r30, 0x64	; 100
      78:	f8 e2       	ldi	r31, 0x28	; 40
      7a:	02 c0       	rjmp	.+4      	; 0x80 <.do_copy_data_start>

0000007c <.do_copy_data_loop>:
      7c:	05 90       	lpm	r0, Z+
      7e:	0d 92       	st	X+, r0

00000080 <.do_copy_data_start>:
      80:	a8 36       	cpi	r26, 0x68	; 104
      82:	b1 07       	cpc	r27, r17
      84:	d9 f7       	brne	.-10     	; 0x7c <.do_copy_data_loop>
      86:	0e 94 25 09 	call	0x124a	; 0x124a <main>
      8a:	0c 94 30 14 	jmp	0x2860	; 0x2860 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 f9 13 	jmp	0x27f2	; 0x27f2 <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a0 e6       	ldi	r26, 0x60	; 96
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 15 14 	jmp	0x282a	; 0x282a <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 05 14 	jmp	0x280a	; 0x280a <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 21 14 	jmp	0x2842	; 0x2842 <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 05 14 	jmp	0x280a	; 0x280a <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 21 14 	jmp	0x2842	; 0x2842 <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 f9 13 	jmp	0x27f2	; 0x27f2 <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	80 e6       	ldi	r24, 0x60	; 96
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 15 14 	jmp	0x282a	; 0x282a <__epilogue_restores__>

00000632 <__gtsf2>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 05 14 	jmp	0x280a	; 0x280a <__prologue_saves__+0x18>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	89 e0       	ldi	r24, 0x09	; 9
     650:	e8 2e       	mov	r14, r24
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     672:	89 85       	ldd	r24, Y+9	; 0x09
     674:	82 30       	cpi	r24, 0x02	; 2
     676:	40 f0       	brcs	.+16     	; 0x688 <__gtsf2+0x56>
     678:	89 89       	ldd	r24, Y+17	; 0x11
     67a:	82 30       	cpi	r24, 0x02	; 2
     67c:	28 f0       	brcs	.+10     	; 0x688 <__gtsf2+0x56>
     67e:	c7 01       	movw	r24, r14
     680:	b8 01       	movw	r22, r16
     682:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     686:	01 c0       	rjmp	.+2      	; 0x68a <__gtsf2+0x58>
     688:	8f ef       	ldi	r24, 0xFF	; 255
     68a:	68 96       	adiw	r28, 0x18	; 24
     68c:	e6 e0       	ldi	r30, 0x06	; 6
     68e:	0c 94 21 14 	jmp	0x2842	; 0x2842 <__epilogue_restores__+0x18>

00000692 <__gesf2>:
     692:	a8 e1       	ldi	r26, 0x18	; 24
     694:	b0 e0       	ldi	r27, 0x00	; 0
     696:	ef e4       	ldi	r30, 0x4F	; 79
     698:	f3 e0       	ldi	r31, 0x03	; 3
     69a:	0c 94 05 14 	jmp	0x280a	; 0x280a <__prologue_saves__+0x18>
     69e:	69 83       	std	Y+1, r22	; 0x01
     6a0:	7a 83       	std	Y+2, r23	; 0x02
     6a2:	8b 83       	std	Y+3, r24	; 0x03
     6a4:	9c 83       	std	Y+4, r25	; 0x04
     6a6:	2d 83       	std	Y+5, r18	; 0x05
     6a8:	3e 83       	std	Y+6, r19	; 0x06
     6aa:	4f 83       	std	Y+7, r20	; 0x07
     6ac:	58 87       	std	Y+8, r21	; 0x08
     6ae:	89 e0       	ldi	r24, 0x09	; 9
     6b0:	e8 2e       	mov	r14, r24
     6b2:	f1 2c       	mov	r15, r1
     6b4:	ec 0e       	add	r14, r28
     6b6:	fd 1e       	adc	r15, r29
     6b8:	ce 01       	movw	r24, r28
     6ba:	01 96       	adiw	r24, 0x01	; 1
     6bc:	b7 01       	movw	r22, r14
     6be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6c2:	8e 01       	movw	r16, r28
     6c4:	0f 5e       	subi	r16, 0xEF	; 239
     6c6:	1f 4f       	sbci	r17, 0xFF	; 255
     6c8:	ce 01       	movw	r24, r28
     6ca:	05 96       	adiw	r24, 0x05	; 5
     6cc:	b8 01       	movw	r22, r16
     6ce:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6d2:	89 85       	ldd	r24, Y+9	; 0x09
     6d4:	82 30       	cpi	r24, 0x02	; 2
     6d6:	40 f0       	brcs	.+16     	; 0x6e8 <__gesf2+0x56>
     6d8:	89 89       	ldd	r24, Y+17	; 0x11
     6da:	82 30       	cpi	r24, 0x02	; 2
     6dc:	28 f0       	brcs	.+10     	; 0x6e8 <__gesf2+0x56>
     6de:	c7 01       	movw	r24, r14
     6e0:	b8 01       	movw	r22, r16
     6e2:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     6e6:	01 c0       	rjmp	.+2      	; 0x6ea <__gesf2+0x58>
     6e8:	8f ef       	ldi	r24, 0xFF	; 255
     6ea:	68 96       	adiw	r28, 0x18	; 24
     6ec:	e6 e0       	ldi	r30, 0x06	; 6
     6ee:	0c 94 21 14 	jmp	0x2842	; 0x2842 <__epilogue_restores__+0x18>

000006f2 <__ltsf2>:
     6f2:	a8 e1       	ldi	r26, 0x18	; 24
     6f4:	b0 e0       	ldi	r27, 0x00	; 0
     6f6:	ef e7       	ldi	r30, 0x7F	; 127
     6f8:	f3 e0       	ldi	r31, 0x03	; 3
     6fa:	0c 94 05 14 	jmp	0x280a	; 0x280a <__prologue_saves__+0x18>
     6fe:	69 83       	std	Y+1, r22	; 0x01
     700:	7a 83       	std	Y+2, r23	; 0x02
     702:	8b 83       	std	Y+3, r24	; 0x03
     704:	9c 83       	std	Y+4, r25	; 0x04
     706:	2d 83       	std	Y+5, r18	; 0x05
     708:	3e 83       	std	Y+6, r19	; 0x06
     70a:	4f 83       	std	Y+7, r20	; 0x07
     70c:	58 87       	std	Y+8, r21	; 0x08
     70e:	89 e0       	ldi	r24, 0x09	; 9
     710:	e8 2e       	mov	r14, r24
     712:	f1 2c       	mov	r15, r1
     714:	ec 0e       	add	r14, r28
     716:	fd 1e       	adc	r15, r29
     718:	ce 01       	movw	r24, r28
     71a:	01 96       	adiw	r24, 0x01	; 1
     71c:	b7 01       	movw	r22, r14
     71e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     722:	8e 01       	movw	r16, r28
     724:	0f 5e       	subi	r16, 0xEF	; 239
     726:	1f 4f       	sbci	r17, 0xFF	; 255
     728:	ce 01       	movw	r24, r28
     72a:	05 96       	adiw	r24, 0x05	; 5
     72c:	b8 01       	movw	r22, r16
     72e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     732:	89 85       	ldd	r24, Y+9	; 0x09
     734:	82 30       	cpi	r24, 0x02	; 2
     736:	40 f0       	brcs	.+16     	; 0x748 <__ltsf2+0x56>
     738:	89 89       	ldd	r24, Y+17	; 0x11
     73a:	82 30       	cpi	r24, 0x02	; 2
     73c:	28 f0       	brcs	.+10     	; 0x748 <__ltsf2+0x56>
     73e:	c7 01       	movw	r24, r14
     740:	b8 01       	movw	r22, r16
     742:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     746:	01 c0       	rjmp	.+2      	; 0x74a <__ltsf2+0x58>
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	68 96       	adiw	r28, 0x18	; 24
     74c:	e6 e0       	ldi	r30, 0x06	; 6
     74e:	0c 94 21 14 	jmp	0x2842	; 0x2842 <__epilogue_restores__+0x18>

00000752 <__fixsfsi>:
     752:	ac e0       	ldi	r26, 0x0C	; 12
     754:	b0 e0       	ldi	r27, 0x00	; 0
     756:	ef ea       	ldi	r30, 0xAF	; 175
     758:	f3 e0       	ldi	r31, 0x03	; 3
     75a:	0c 94 09 14 	jmp	0x2812	; 0x2812 <__prologue_saves__+0x20>
     75e:	69 83       	std	Y+1, r22	; 0x01
     760:	7a 83       	std	Y+2, r23	; 0x02
     762:	8b 83       	std	Y+3, r24	; 0x03
     764:	9c 83       	std	Y+4, r25	; 0x04
     766:	ce 01       	movw	r24, r28
     768:	01 96       	adiw	r24, 0x01	; 1
     76a:	be 01       	movw	r22, r28
     76c:	6b 5f       	subi	r22, 0xFB	; 251
     76e:	7f 4f       	sbci	r23, 0xFF	; 255
     770:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     774:	8d 81       	ldd	r24, Y+5	; 0x05
     776:	82 30       	cpi	r24, 0x02	; 2
     778:	61 f1       	breq	.+88     	; 0x7d2 <__fixsfsi+0x80>
     77a:	82 30       	cpi	r24, 0x02	; 2
     77c:	50 f1       	brcs	.+84     	; 0x7d2 <__fixsfsi+0x80>
     77e:	84 30       	cpi	r24, 0x04	; 4
     780:	21 f4       	brne	.+8      	; 0x78a <__fixsfsi+0x38>
     782:	8e 81       	ldd	r24, Y+6	; 0x06
     784:	88 23       	and	r24, r24
     786:	51 f1       	breq	.+84     	; 0x7dc <__fixsfsi+0x8a>
     788:	2e c0       	rjmp	.+92     	; 0x7e6 <__fixsfsi+0x94>
     78a:	2f 81       	ldd	r18, Y+7	; 0x07
     78c:	38 85       	ldd	r19, Y+8	; 0x08
     78e:	37 fd       	sbrc	r19, 7
     790:	20 c0       	rjmp	.+64     	; 0x7d2 <__fixsfsi+0x80>
     792:	6e 81       	ldd	r22, Y+6	; 0x06
     794:	2f 31       	cpi	r18, 0x1F	; 31
     796:	31 05       	cpc	r19, r1
     798:	1c f0       	brlt	.+6      	; 0x7a0 <__fixsfsi+0x4e>
     79a:	66 23       	and	r22, r22
     79c:	f9 f0       	breq	.+62     	; 0x7dc <__fixsfsi+0x8a>
     79e:	23 c0       	rjmp	.+70     	; 0x7e6 <__fixsfsi+0x94>
     7a0:	8e e1       	ldi	r24, 0x1E	; 30
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	82 1b       	sub	r24, r18
     7a6:	93 0b       	sbc	r25, r19
     7a8:	29 85       	ldd	r18, Y+9	; 0x09
     7aa:	3a 85       	ldd	r19, Y+10	; 0x0a
     7ac:	4b 85       	ldd	r20, Y+11	; 0x0b
     7ae:	5c 85       	ldd	r21, Y+12	; 0x0c
     7b0:	04 c0       	rjmp	.+8      	; 0x7ba <__fixsfsi+0x68>
     7b2:	56 95       	lsr	r21
     7b4:	47 95       	ror	r20
     7b6:	37 95       	ror	r19
     7b8:	27 95       	ror	r18
     7ba:	8a 95       	dec	r24
     7bc:	d2 f7       	brpl	.-12     	; 0x7b2 <__fixsfsi+0x60>
     7be:	66 23       	and	r22, r22
     7c0:	b1 f0       	breq	.+44     	; 0x7ee <__fixsfsi+0x9c>
     7c2:	50 95       	com	r21
     7c4:	40 95       	com	r20
     7c6:	30 95       	com	r19
     7c8:	21 95       	neg	r18
     7ca:	3f 4f       	sbci	r19, 0xFF	; 255
     7cc:	4f 4f       	sbci	r20, 0xFF	; 255
     7ce:	5f 4f       	sbci	r21, 0xFF	; 255
     7d0:	0e c0       	rjmp	.+28     	; 0x7ee <__fixsfsi+0x9c>
     7d2:	20 e0       	ldi	r18, 0x00	; 0
     7d4:	30 e0       	ldi	r19, 0x00	; 0
     7d6:	40 e0       	ldi	r20, 0x00	; 0
     7d8:	50 e0       	ldi	r21, 0x00	; 0
     7da:	09 c0       	rjmp	.+18     	; 0x7ee <__fixsfsi+0x9c>
     7dc:	2f ef       	ldi	r18, 0xFF	; 255
     7de:	3f ef       	ldi	r19, 0xFF	; 255
     7e0:	4f ef       	ldi	r20, 0xFF	; 255
     7e2:	5f e7       	ldi	r21, 0x7F	; 127
     7e4:	04 c0       	rjmp	.+8      	; 0x7ee <__fixsfsi+0x9c>
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e0       	ldi	r20, 0x00	; 0
     7ec:	50 e8       	ldi	r21, 0x80	; 128
     7ee:	b9 01       	movw	r22, r18
     7f0:	ca 01       	movw	r24, r20
     7f2:	2c 96       	adiw	r28, 0x0c	; 12
     7f4:	e2 e0       	ldi	r30, 0x02	; 2
     7f6:	0c 94 25 14 	jmp	0x284a	; 0x284a <__epilogue_restores__+0x20>

000007fa <__pack_f>:
     7fa:	df 92       	push	r13
     7fc:	ef 92       	push	r14
     7fe:	ff 92       	push	r15
     800:	0f 93       	push	r16
     802:	1f 93       	push	r17
     804:	fc 01       	movw	r30, r24
     806:	e4 80       	ldd	r14, Z+4	; 0x04
     808:	f5 80       	ldd	r15, Z+5	; 0x05
     80a:	06 81       	ldd	r16, Z+6	; 0x06
     80c:	17 81       	ldd	r17, Z+7	; 0x07
     80e:	d1 80       	ldd	r13, Z+1	; 0x01
     810:	80 81       	ld	r24, Z
     812:	82 30       	cpi	r24, 0x02	; 2
     814:	48 f4       	brcc	.+18     	; 0x828 <__pack_f+0x2e>
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	a0 e1       	ldi	r26, 0x10	; 16
     81c:	b0 e0       	ldi	r27, 0x00	; 0
     81e:	e8 2a       	or	r14, r24
     820:	f9 2a       	or	r15, r25
     822:	0a 2b       	or	r16, r26
     824:	1b 2b       	or	r17, r27
     826:	a5 c0       	rjmp	.+330    	; 0x972 <__stack+0x113>
     828:	84 30       	cpi	r24, 0x04	; 4
     82a:	09 f4       	brne	.+2      	; 0x82e <__pack_f+0x34>
     82c:	9f c0       	rjmp	.+318    	; 0x96c <__stack+0x10d>
     82e:	82 30       	cpi	r24, 0x02	; 2
     830:	21 f4       	brne	.+8      	; 0x83a <__pack_f+0x40>
     832:	ee 24       	eor	r14, r14
     834:	ff 24       	eor	r15, r15
     836:	87 01       	movw	r16, r14
     838:	05 c0       	rjmp	.+10     	; 0x844 <__pack_f+0x4a>
     83a:	e1 14       	cp	r14, r1
     83c:	f1 04       	cpc	r15, r1
     83e:	01 05       	cpc	r16, r1
     840:	11 05       	cpc	r17, r1
     842:	19 f4       	brne	.+6      	; 0x84a <__pack_f+0x50>
     844:	e0 e0       	ldi	r30, 0x00	; 0
     846:	f0 e0       	ldi	r31, 0x00	; 0
     848:	96 c0       	rjmp	.+300    	; 0x976 <__stack+0x117>
     84a:	62 81       	ldd	r22, Z+2	; 0x02
     84c:	73 81       	ldd	r23, Z+3	; 0x03
     84e:	9f ef       	ldi	r25, 0xFF	; 255
     850:	62 38       	cpi	r22, 0x82	; 130
     852:	79 07       	cpc	r23, r25
     854:	0c f0       	brlt	.+2      	; 0x858 <__pack_f+0x5e>
     856:	5b c0       	rjmp	.+182    	; 0x90e <__stack+0xaf>
     858:	22 e8       	ldi	r18, 0x82	; 130
     85a:	3f ef       	ldi	r19, 0xFF	; 255
     85c:	26 1b       	sub	r18, r22
     85e:	37 0b       	sbc	r19, r23
     860:	2a 31       	cpi	r18, 0x1A	; 26
     862:	31 05       	cpc	r19, r1
     864:	2c f0       	brlt	.+10     	; 0x870 <__stack+0x11>
     866:	20 e0       	ldi	r18, 0x00	; 0
     868:	30 e0       	ldi	r19, 0x00	; 0
     86a:	40 e0       	ldi	r20, 0x00	; 0
     86c:	50 e0       	ldi	r21, 0x00	; 0
     86e:	2a c0       	rjmp	.+84     	; 0x8c4 <__stack+0x65>
     870:	b8 01       	movw	r22, r16
     872:	a7 01       	movw	r20, r14
     874:	02 2e       	mov	r0, r18
     876:	04 c0       	rjmp	.+8      	; 0x880 <__stack+0x21>
     878:	76 95       	lsr	r23
     87a:	67 95       	ror	r22
     87c:	57 95       	ror	r21
     87e:	47 95       	ror	r20
     880:	0a 94       	dec	r0
     882:	d2 f7       	brpl	.-12     	; 0x878 <__stack+0x19>
     884:	81 e0       	ldi	r24, 0x01	; 1
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	a0 e0       	ldi	r26, 0x00	; 0
     88a:	b0 e0       	ldi	r27, 0x00	; 0
     88c:	04 c0       	rjmp	.+8      	; 0x896 <__stack+0x37>
     88e:	88 0f       	add	r24, r24
     890:	99 1f       	adc	r25, r25
     892:	aa 1f       	adc	r26, r26
     894:	bb 1f       	adc	r27, r27
     896:	2a 95       	dec	r18
     898:	d2 f7       	brpl	.-12     	; 0x88e <__stack+0x2f>
     89a:	01 97       	sbiw	r24, 0x01	; 1
     89c:	a1 09       	sbc	r26, r1
     89e:	b1 09       	sbc	r27, r1
     8a0:	8e 21       	and	r24, r14
     8a2:	9f 21       	and	r25, r15
     8a4:	a0 23       	and	r26, r16
     8a6:	b1 23       	and	r27, r17
     8a8:	00 97       	sbiw	r24, 0x00	; 0
     8aa:	a1 05       	cpc	r26, r1
     8ac:	b1 05       	cpc	r27, r1
     8ae:	21 f0       	breq	.+8      	; 0x8b8 <__stack+0x59>
     8b0:	81 e0       	ldi	r24, 0x01	; 1
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	a0 e0       	ldi	r26, 0x00	; 0
     8b6:	b0 e0       	ldi	r27, 0x00	; 0
     8b8:	9a 01       	movw	r18, r20
     8ba:	ab 01       	movw	r20, r22
     8bc:	28 2b       	or	r18, r24
     8be:	39 2b       	or	r19, r25
     8c0:	4a 2b       	or	r20, r26
     8c2:	5b 2b       	or	r21, r27
     8c4:	da 01       	movw	r26, r20
     8c6:	c9 01       	movw	r24, r18
     8c8:	8f 77       	andi	r24, 0x7F	; 127
     8ca:	90 70       	andi	r25, 0x00	; 0
     8cc:	a0 70       	andi	r26, 0x00	; 0
     8ce:	b0 70       	andi	r27, 0x00	; 0
     8d0:	80 34       	cpi	r24, 0x40	; 64
     8d2:	91 05       	cpc	r25, r1
     8d4:	a1 05       	cpc	r26, r1
     8d6:	b1 05       	cpc	r27, r1
     8d8:	39 f4       	brne	.+14     	; 0x8e8 <__stack+0x89>
     8da:	27 ff       	sbrs	r18, 7
     8dc:	09 c0       	rjmp	.+18     	; 0x8f0 <__stack+0x91>
     8de:	20 5c       	subi	r18, 0xC0	; 192
     8e0:	3f 4f       	sbci	r19, 0xFF	; 255
     8e2:	4f 4f       	sbci	r20, 0xFF	; 255
     8e4:	5f 4f       	sbci	r21, 0xFF	; 255
     8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <__stack+0x91>
     8e8:	21 5c       	subi	r18, 0xC1	; 193
     8ea:	3f 4f       	sbci	r19, 0xFF	; 255
     8ec:	4f 4f       	sbci	r20, 0xFF	; 255
     8ee:	5f 4f       	sbci	r21, 0xFF	; 255
     8f0:	e0 e0       	ldi	r30, 0x00	; 0
     8f2:	f0 e0       	ldi	r31, 0x00	; 0
     8f4:	20 30       	cpi	r18, 0x00	; 0
     8f6:	a0 e0       	ldi	r26, 0x00	; 0
     8f8:	3a 07       	cpc	r19, r26
     8fa:	a0 e0       	ldi	r26, 0x00	; 0
     8fc:	4a 07       	cpc	r20, r26
     8fe:	a0 e4       	ldi	r26, 0x40	; 64
     900:	5a 07       	cpc	r21, r26
     902:	10 f0       	brcs	.+4      	; 0x908 <__stack+0xa9>
     904:	e1 e0       	ldi	r30, 0x01	; 1
     906:	f0 e0       	ldi	r31, 0x00	; 0
     908:	79 01       	movw	r14, r18
     90a:	8a 01       	movw	r16, r20
     90c:	27 c0       	rjmp	.+78     	; 0x95c <__stack+0xfd>
     90e:	60 38       	cpi	r22, 0x80	; 128
     910:	71 05       	cpc	r23, r1
     912:	64 f5       	brge	.+88     	; 0x96c <__stack+0x10d>
     914:	fb 01       	movw	r30, r22
     916:	e1 58       	subi	r30, 0x81	; 129
     918:	ff 4f       	sbci	r31, 0xFF	; 255
     91a:	d8 01       	movw	r26, r16
     91c:	c7 01       	movw	r24, r14
     91e:	8f 77       	andi	r24, 0x7F	; 127
     920:	90 70       	andi	r25, 0x00	; 0
     922:	a0 70       	andi	r26, 0x00	; 0
     924:	b0 70       	andi	r27, 0x00	; 0
     926:	80 34       	cpi	r24, 0x40	; 64
     928:	91 05       	cpc	r25, r1
     92a:	a1 05       	cpc	r26, r1
     92c:	b1 05       	cpc	r27, r1
     92e:	39 f4       	brne	.+14     	; 0x93e <__stack+0xdf>
     930:	e7 fe       	sbrs	r14, 7
     932:	0d c0       	rjmp	.+26     	; 0x94e <__stack+0xef>
     934:	80 e4       	ldi	r24, 0x40	; 64
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	a0 e0       	ldi	r26, 0x00	; 0
     93a:	b0 e0       	ldi	r27, 0x00	; 0
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__stack+0xe7>
     93e:	8f e3       	ldi	r24, 0x3F	; 63
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	a0 e0       	ldi	r26, 0x00	; 0
     944:	b0 e0       	ldi	r27, 0x00	; 0
     946:	e8 0e       	add	r14, r24
     948:	f9 1e       	adc	r15, r25
     94a:	0a 1f       	adc	r16, r26
     94c:	1b 1f       	adc	r17, r27
     94e:	17 ff       	sbrs	r17, 7
     950:	05 c0       	rjmp	.+10     	; 0x95c <__stack+0xfd>
     952:	16 95       	lsr	r17
     954:	07 95       	ror	r16
     956:	f7 94       	ror	r15
     958:	e7 94       	ror	r14
     95a:	31 96       	adiw	r30, 0x01	; 1
     95c:	87 e0       	ldi	r24, 0x07	; 7
     95e:	16 95       	lsr	r17
     960:	07 95       	ror	r16
     962:	f7 94       	ror	r15
     964:	e7 94       	ror	r14
     966:	8a 95       	dec	r24
     968:	d1 f7       	brne	.-12     	; 0x95e <__stack+0xff>
     96a:	05 c0       	rjmp	.+10     	; 0x976 <__stack+0x117>
     96c:	ee 24       	eor	r14, r14
     96e:	ff 24       	eor	r15, r15
     970:	87 01       	movw	r16, r14
     972:	ef ef       	ldi	r30, 0xFF	; 255
     974:	f0 e0       	ldi	r31, 0x00	; 0
     976:	6e 2f       	mov	r22, r30
     978:	67 95       	ror	r22
     97a:	66 27       	eor	r22, r22
     97c:	67 95       	ror	r22
     97e:	90 2f       	mov	r25, r16
     980:	9f 77       	andi	r25, 0x7F	; 127
     982:	d7 94       	ror	r13
     984:	dd 24       	eor	r13, r13
     986:	d7 94       	ror	r13
     988:	8e 2f       	mov	r24, r30
     98a:	86 95       	lsr	r24
     98c:	49 2f       	mov	r20, r25
     98e:	46 2b       	or	r20, r22
     990:	58 2f       	mov	r21, r24
     992:	5d 29       	or	r21, r13
     994:	b7 01       	movw	r22, r14
     996:	ca 01       	movw	r24, r20
     998:	1f 91       	pop	r17
     99a:	0f 91       	pop	r16
     99c:	ff 90       	pop	r15
     99e:	ef 90       	pop	r14
     9a0:	df 90       	pop	r13
     9a2:	08 95       	ret

000009a4 <__unpack_f>:
     9a4:	fc 01       	movw	r30, r24
     9a6:	db 01       	movw	r26, r22
     9a8:	40 81       	ld	r20, Z
     9aa:	51 81       	ldd	r21, Z+1	; 0x01
     9ac:	22 81       	ldd	r18, Z+2	; 0x02
     9ae:	62 2f       	mov	r22, r18
     9b0:	6f 77       	andi	r22, 0x7F	; 127
     9b2:	70 e0       	ldi	r23, 0x00	; 0
     9b4:	22 1f       	adc	r18, r18
     9b6:	22 27       	eor	r18, r18
     9b8:	22 1f       	adc	r18, r18
     9ba:	93 81       	ldd	r25, Z+3	; 0x03
     9bc:	89 2f       	mov	r24, r25
     9be:	88 0f       	add	r24, r24
     9c0:	82 2b       	or	r24, r18
     9c2:	28 2f       	mov	r18, r24
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	99 1f       	adc	r25, r25
     9c8:	99 27       	eor	r25, r25
     9ca:	99 1f       	adc	r25, r25
     9cc:	11 96       	adiw	r26, 0x01	; 1
     9ce:	9c 93       	st	X, r25
     9d0:	11 97       	sbiw	r26, 0x01	; 1
     9d2:	21 15       	cp	r18, r1
     9d4:	31 05       	cpc	r19, r1
     9d6:	a9 f5       	brne	.+106    	; 0xa42 <__unpack_f+0x9e>
     9d8:	41 15       	cp	r20, r1
     9da:	51 05       	cpc	r21, r1
     9dc:	61 05       	cpc	r22, r1
     9de:	71 05       	cpc	r23, r1
     9e0:	11 f4       	brne	.+4      	; 0x9e6 <__unpack_f+0x42>
     9e2:	82 e0       	ldi	r24, 0x02	; 2
     9e4:	37 c0       	rjmp	.+110    	; 0xa54 <__unpack_f+0xb0>
     9e6:	82 e8       	ldi	r24, 0x82	; 130
     9e8:	9f ef       	ldi	r25, 0xFF	; 255
     9ea:	13 96       	adiw	r26, 0x03	; 3
     9ec:	9c 93       	st	X, r25
     9ee:	8e 93       	st	-X, r24
     9f0:	12 97       	sbiw	r26, 0x02	; 2
     9f2:	9a 01       	movw	r18, r20
     9f4:	ab 01       	movw	r20, r22
     9f6:	67 e0       	ldi	r22, 0x07	; 7
     9f8:	22 0f       	add	r18, r18
     9fa:	33 1f       	adc	r19, r19
     9fc:	44 1f       	adc	r20, r20
     9fe:	55 1f       	adc	r21, r21
     a00:	6a 95       	dec	r22
     a02:	d1 f7       	brne	.-12     	; 0x9f8 <__unpack_f+0x54>
     a04:	83 e0       	ldi	r24, 0x03	; 3
     a06:	8c 93       	st	X, r24
     a08:	0d c0       	rjmp	.+26     	; 0xa24 <__unpack_f+0x80>
     a0a:	22 0f       	add	r18, r18
     a0c:	33 1f       	adc	r19, r19
     a0e:	44 1f       	adc	r20, r20
     a10:	55 1f       	adc	r21, r21
     a12:	12 96       	adiw	r26, 0x02	; 2
     a14:	8d 91       	ld	r24, X+
     a16:	9c 91       	ld	r25, X
     a18:	13 97       	sbiw	r26, 0x03	; 3
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	13 96       	adiw	r26, 0x03	; 3
     a1e:	9c 93       	st	X, r25
     a20:	8e 93       	st	-X, r24
     a22:	12 97       	sbiw	r26, 0x02	; 2
     a24:	20 30       	cpi	r18, 0x00	; 0
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	38 07       	cpc	r19, r24
     a2a:	80 e0       	ldi	r24, 0x00	; 0
     a2c:	48 07       	cpc	r20, r24
     a2e:	80 e4       	ldi	r24, 0x40	; 64
     a30:	58 07       	cpc	r21, r24
     a32:	58 f3       	brcs	.-42     	; 0xa0a <__unpack_f+0x66>
     a34:	14 96       	adiw	r26, 0x04	; 4
     a36:	2d 93       	st	X+, r18
     a38:	3d 93       	st	X+, r19
     a3a:	4d 93       	st	X+, r20
     a3c:	5c 93       	st	X, r21
     a3e:	17 97       	sbiw	r26, 0x07	; 7
     a40:	08 95       	ret
     a42:	2f 3f       	cpi	r18, 0xFF	; 255
     a44:	31 05       	cpc	r19, r1
     a46:	79 f4       	brne	.+30     	; 0xa66 <__unpack_f+0xc2>
     a48:	41 15       	cp	r20, r1
     a4a:	51 05       	cpc	r21, r1
     a4c:	61 05       	cpc	r22, r1
     a4e:	71 05       	cpc	r23, r1
     a50:	19 f4       	brne	.+6      	; 0xa58 <__unpack_f+0xb4>
     a52:	84 e0       	ldi	r24, 0x04	; 4
     a54:	8c 93       	st	X, r24
     a56:	08 95       	ret
     a58:	64 ff       	sbrs	r22, 4
     a5a:	03 c0       	rjmp	.+6      	; 0xa62 <__unpack_f+0xbe>
     a5c:	81 e0       	ldi	r24, 0x01	; 1
     a5e:	8c 93       	st	X, r24
     a60:	12 c0       	rjmp	.+36     	; 0xa86 <__unpack_f+0xe2>
     a62:	1c 92       	st	X, r1
     a64:	10 c0       	rjmp	.+32     	; 0xa86 <__unpack_f+0xe2>
     a66:	2f 57       	subi	r18, 0x7F	; 127
     a68:	30 40       	sbci	r19, 0x00	; 0
     a6a:	13 96       	adiw	r26, 0x03	; 3
     a6c:	3c 93       	st	X, r19
     a6e:	2e 93       	st	-X, r18
     a70:	12 97       	sbiw	r26, 0x02	; 2
     a72:	83 e0       	ldi	r24, 0x03	; 3
     a74:	8c 93       	st	X, r24
     a76:	87 e0       	ldi	r24, 0x07	; 7
     a78:	44 0f       	add	r20, r20
     a7a:	55 1f       	adc	r21, r21
     a7c:	66 1f       	adc	r22, r22
     a7e:	77 1f       	adc	r23, r23
     a80:	8a 95       	dec	r24
     a82:	d1 f7       	brne	.-12     	; 0xa78 <__unpack_f+0xd4>
     a84:	70 64       	ori	r23, 0x40	; 64
     a86:	14 96       	adiw	r26, 0x04	; 4
     a88:	4d 93       	st	X+, r20
     a8a:	5d 93       	st	X+, r21
     a8c:	6d 93       	st	X+, r22
     a8e:	7c 93       	st	X, r23
     a90:	17 97       	sbiw	r26, 0x07	; 7
     a92:	08 95       	ret

00000a94 <__fpcmp_parts_f>:
     a94:	1f 93       	push	r17
     a96:	dc 01       	movw	r26, r24
     a98:	fb 01       	movw	r30, r22
     a9a:	9c 91       	ld	r25, X
     a9c:	92 30       	cpi	r25, 0x02	; 2
     a9e:	08 f4       	brcc	.+2      	; 0xaa2 <__fpcmp_parts_f+0xe>
     aa0:	47 c0       	rjmp	.+142    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aa2:	80 81       	ld	r24, Z
     aa4:	82 30       	cpi	r24, 0x02	; 2
     aa6:	08 f4       	brcc	.+2      	; 0xaaa <__fpcmp_parts_f+0x16>
     aa8:	43 c0       	rjmp	.+134    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aaa:	94 30       	cpi	r25, 0x04	; 4
     aac:	51 f4       	brne	.+20     	; 0xac2 <__fpcmp_parts_f+0x2e>
     aae:	11 96       	adiw	r26, 0x01	; 1
     ab0:	1c 91       	ld	r17, X
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	99 f5       	brne	.+102    	; 0xb1c <__fpcmp_parts_f+0x88>
     ab6:	81 81       	ldd	r24, Z+1	; 0x01
     ab8:	68 2f       	mov	r22, r24
     aba:	70 e0       	ldi	r23, 0x00	; 0
     abc:	61 1b       	sub	r22, r17
     abe:	71 09       	sbc	r23, r1
     ac0:	3f c0       	rjmp	.+126    	; 0xb40 <__fpcmp_parts_f+0xac>
     ac2:	84 30       	cpi	r24, 0x04	; 4
     ac4:	21 f0       	breq	.+8      	; 0xace <__fpcmp_parts_f+0x3a>
     ac6:	92 30       	cpi	r25, 0x02	; 2
     ac8:	31 f4       	brne	.+12     	; 0xad6 <__fpcmp_parts_f+0x42>
     aca:	82 30       	cpi	r24, 0x02	; 2
     acc:	b9 f1       	breq	.+110    	; 0xb3c <__fpcmp_parts_f+0xa8>
     ace:	81 81       	ldd	r24, Z+1	; 0x01
     ad0:	88 23       	and	r24, r24
     ad2:	89 f1       	breq	.+98     	; 0xb36 <__fpcmp_parts_f+0xa2>
     ad4:	2d c0       	rjmp	.+90     	; 0xb30 <__fpcmp_parts_f+0x9c>
     ad6:	11 96       	adiw	r26, 0x01	; 1
     ad8:	1c 91       	ld	r17, X
     ada:	11 97       	sbiw	r26, 0x01	; 1
     adc:	82 30       	cpi	r24, 0x02	; 2
     ade:	f1 f0       	breq	.+60     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae0:	81 81       	ldd	r24, Z+1	; 0x01
     ae2:	18 17       	cp	r17, r24
     ae4:	d9 f4       	brne	.+54     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae6:	12 96       	adiw	r26, 0x02	; 2
     ae8:	2d 91       	ld	r18, X+
     aea:	3c 91       	ld	r19, X
     aec:	13 97       	sbiw	r26, 0x03	; 3
     aee:	82 81       	ldd	r24, Z+2	; 0x02
     af0:	93 81       	ldd	r25, Z+3	; 0x03
     af2:	82 17       	cp	r24, r18
     af4:	93 07       	cpc	r25, r19
     af6:	94 f0       	brlt	.+36     	; 0xb1c <__fpcmp_parts_f+0x88>
     af8:	28 17       	cp	r18, r24
     afa:	39 07       	cpc	r19, r25
     afc:	bc f0       	brlt	.+46     	; 0xb2c <__fpcmp_parts_f+0x98>
     afe:	14 96       	adiw	r26, 0x04	; 4
     b00:	8d 91       	ld	r24, X+
     b02:	9d 91       	ld	r25, X+
     b04:	0d 90       	ld	r0, X+
     b06:	bc 91       	ld	r27, X
     b08:	a0 2d       	mov	r26, r0
     b0a:	24 81       	ldd	r18, Z+4	; 0x04
     b0c:	35 81       	ldd	r19, Z+5	; 0x05
     b0e:	46 81       	ldd	r20, Z+6	; 0x06
     b10:	57 81       	ldd	r21, Z+7	; 0x07
     b12:	28 17       	cp	r18, r24
     b14:	39 07       	cpc	r19, r25
     b16:	4a 07       	cpc	r20, r26
     b18:	5b 07       	cpc	r21, r27
     b1a:	18 f4       	brcc	.+6      	; 0xb22 <__fpcmp_parts_f+0x8e>
     b1c:	11 23       	and	r17, r17
     b1e:	41 f0       	breq	.+16     	; 0xb30 <__fpcmp_parts_f+0x9c>
     b20:	0a c0       	rjmp	.+20     	; 0xb36 <__fpcmp_parts_f+0xa2>
     b22:	82 17       	cp	r24, r18
     b24:	93 07       	cpc	r25, r19
     b26:	a4 07       	cpc	r26, r20
     b28:	b5 07       	cpc	r27, r21
     b2a:	40 f4       	brcc	.+16     	; 0xb3c <__fpcmp_parts_f+0xa8>
     b2c:	11 23       	and	r17, r17
     b2e:	19 f0       	breq	.+6      	; 0xb36 <__fpcmp_parts_f+0xa2>
     b30:	61 e0       	ldi	r22, 0x01	; 1
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	05 c0       	rjmp	.+10     	; 0xb40 <__fpcmp_parts_f+0xac>
     b36:	6f ef       	ldi	r22, 0xFF	; 255
     b38:	7f ef       	ldi	r23, 0xFF	; 255
     b3a:	02 c0       	rjmp	.+4      	; 0xb40 <__fpcmp_parts_f+0xac>
     b3c:	60 e0       	ldi	r22, 0x00	; 0
     b3e:	70 e0       	ldi	r23, 0x00	; 0
     b40:	cb 01       	movw	r24, r22
     b42:	1f 91       	pop	r17
     b44:	08 95       	ret

00000b46 <SPI_vidInit>:

#include<util/delay.h>
u8 Global_u8Value=0;

void SPI_vidInit(SPI_tenuModeSelect Copy_enuSPIMode)
{
     b46:	df 93       	push	r29
     b48:	cf 93       	push	r28
     b4a:	0f 92       	push	r0
     b4c:	cd b7       	in	r28, 0x3d	; 61
     b4e:	de b7       	in	r29, 0x3e	; 62
     b50:	89 83       	std	Y+1, r24	; 0x01
	
	
	/*1- choose wether master or slave*/
	ASSIGN_BIT(SPI_u8_SPCR_REG,SPI_u8_SPCR_MSTR_PIN,Copy_enuSPIMode);
     b52:	ad e2       	ldi	r26, 0x2D	; 45
     b54:	b0 e0       	ldi	r27, 0x00	; 0
     b56:	ed e2       	ldi	r30, 0x2D	; 45
     b58:	f0 e0       	ldi	r31, 0x00	; 0
     b5a:	80 81       	ld	r24, Z
     b5c:	28 2f       	mov	r18, r24
     b5e:	89 81       	ldd	r24, Y+1	; 0x01
     b60:	88 2f       	mov	r24, r24
     b62:	90 e0       	ldi	r25, 0x00	; 0
     b64:	82 95       	swap	r24
     b66:	92 95       	swap	r25
     b68:	90 7f       	andi	r25, 0xF0	; 240
     b6a:	98 27       	eor	r25, r24
     b6c:	80 7f       	andi	r24, 0xF0	; 240
     b6e:	98 27       	eor	r25, r24
     b70:	82 2b       	or	r24, r18
     b72:	8c 93       	st	X, r24
	
	/*2- enable SPI interrupt and global interrupt*/
	SET_BIT(SPI_u8_SPCR_REG,SPI_u8_SPCR_SPIE_PIN);
     b74:	ad e2       	ldi	r26, 0x2D	; 45
     b76:	b0 e0       	ldi	r27, 0x00	; 0
     b78:	ed e2       	ldi	r30, 0x2D	; 45
     b7a:	f0 e0       	ldi	r31, 0x00	; 0
     b7c:	80 81       	ld	r24, Z
     b7e:	80 68       	ori	r24, 0x80	; 128
     b80:	8c 93       	st	X, r24
	G_INT_vidEnable();
     b82:	0e 94 52 06 	call	0xca4	; 0xca4 <G_INT_vidEnable>
	/*3- choose data order  */
	
	ASSIGN_BIT(SPI_u8_SPCR_REG,SPI_u8_SPCR_DORTD_PIN,SPI_u8_DATA_ORDER);
     b86:	ad e2       	ldi	r26, 0x2D	; 45
     b88:	b0 e0       	ldi	r27, 0x00	; 0
     b8a:	ed e2       	ldi	r30, 0x2D	; 45
     b8c:	f0 e0       	ldi	r31, 0x00	; 0
     b8e:	80 81       	ld	r24, Z
     b90:	80 62       	ori	r24, 0x20	; 32
     b92:	8c 93       	st	X, r24
	/*4- choose data mode*/
	ASSIGN_REG(SPI_u8_SPCR_REG,(SPI_u8_DATA_MODE<<2) );
     b94:	ad e2       	ldi	r26, 0x2D	; 45
     b96:	b0 e0       	ldi	r27, 0x00	; 0
     b98:	ed e2       	ldi	r30, 0x2D	; 45
     b9a:	f0 e0       	ldi	r31, 0x00	; 0
     b9c:	80 81       	ld	r24, Z
     b9e:	8c 93       	st	X, r24
	/*5- choose prescaler and speed bit*/
	ASSIGN_REG(SPI_u8_SPCR_REG,(SPI_u8_SCK_FREQUENCY&0x03));
     ba0:	ad e2       	ldi	r26, 0x2D	; 45
     ba2:	b0 e0       	ldi	r27, 0x00	; 0
     ba4:	ed e2       	ldi	r30, 0x2D	; 45
     ba6:	f0 e0       	ldi	r31, 0x00	; 0
     ba8:	80 81       	ld	r24, Z
     baa:	83 60       	ori	r24, 0x03	; 3
     bac:	8c 93       	st	X, r24
	ASSIGN_BIT(SPI_u8_SPSR_REG,SPI_u8_SPSR_SPI2X_PIN,0);
     bae:	ae e2       	ldi	r26, 0x2E	; 46
     bb0:	b0 e0       	ldi	r27, 0x00	; 0
     bb2:	ee e2       	ldi	r30, 0x2E	; 46
     bb4:	f0 e0       	ldi	r31, 0x00	; 0
     bb6:	80 81       	ld	r24, Z
     bb8:	8c 93       	st	X, r24
	/*6- activate SPI enable*/
		SET_BIT(SPI_u8_SPCR_REG,SPI_u8_SPCR_SPE_PIN);
     bba:	ad e2       	ldi	r26, 0x2D	; 45
     bbc:	b0 e0       	ldi	r27, 0x00	; 0
     bbe:	ed e2       	ldi	r30, 0x2D	; 45
     bc0:	f0 e0       	ldi	r31, 0x00	; 0
     bc2:	80 81       	ld	r24, Z
     bc4:	80 64       	ori	r24, 0x40	; 64
     bc6:	8c 93       	st	X, r24

}
     bc8:	0f 90       	pop	r0
     bca:	cf 91       	pop	r28
     bcc:	df 91       	pop	r29
     bce:	08 95       	ret

00000bd0 <SPI_enuTranscieveAsynch>:
SPI_tenuErrorStatus SPI_enuTranscieveAsynch(u8* Copy_pu8Value)
{
     bd0:	df 93       	push	r29
     bd2:	cf 93       	push	r28
     bd4:	00 d0       	rcall	.+0      	; 0xbd6 <SPI_enuTranscieveAsynch+0x6>
     bd6:	0f 92       	push	r0
     bd8:	cd b7       	in	r28, 0x3d	; 61
     bda:	de b7       	in	r29, 0x3e	; 62
     bdc:	9a 83       	std	Y+2, r25	; 0x02
     bde:	89 83       	std	Y+1, r24	; 0x01
	
	SET_BIT(SPI_u8_SPCR_REG,SPI_u8_SPCR_SPIE_PIN);
     be0:	ad e2       	ldi	r26, 0x2D	; 45
     be2:	b0 e0       	ldi	r27, 0x00	; 0
     be4:	ed e2       	ldi	r30, 0x2D	; 45
     be6:	f0 e0       	ldi	r31, 0x00	; 0
     be8:	80 81       	ld	r24, Z
     bea:	80 68       	ori	r24, 0x80	; 128
     bec:	8c 93       	st	X, r24
	SPI_u8_SPDR_REG = (*Copy_pu8Value);
     bee:	af e2       	ldi	r26, 0x2F	; 47
     bf0:	b0 e0       	ldi	r27, 0x00	; 0
     bf2:	e9 81       	ldd	r30, Y+1	; 0x01
     bf4:	fa 81       	ldd	r31, Y+2	; 0x02
     bf6:	80 81       	ld	r24, Z
     bf8:	8c 93       	st	X, r24

}
     bfa:	0f 90       	pop	r0
     bfc:	0f 90       	pop	r0
     bfe:	0f 90       	pop	r0
     c00:	cf 91       	pop	r28
     c02:	df 91       	pop	r29
     c04:	08 95       	ret

00000c06 <SPI_enuTranscieveSynch>:

u8 SPI_enuTranscieveSynch(u8 Copy_pu8Value)
{
     c06:	df 93       	push	r29
     c08:	cf 93       	push	r28
     c0a:	0f 92       	push	r0
     c0c:	cd b7       	in	r28, 0x3d	; 61
     c0e:	de b7       	in	r29, 0x3e	; 62
     c10:	89 83       	std	Y+1, r24	; 0x01
	CLR_BIT(SPI_u8_SPCR_REG,SPI_u8_SPCR_SPIE_PIN);
     c12:	ad e2       	ldi	r26, 0x2D	; 45
     c14:	b0 e0       	ldi	r27, 0x00	; 0
     c16:	ed e2       	ldi	r30, 0x2D	; 45
     c18:	f0 e0       	ldi	r31, 0x00	; 0
     c1a:	80 81       	ld	r24, Z
     c1c:	8f 77       	andi	r24, 0x7F	; 127
     c1e:	8c 93       	st	X, r24
	SPI_u8_SPDR_REG = Copy_pu8Value;
     c20:	ef e2       	ldi	r30, 0x2F	; 47
     c22:	f0 e0       	ldi	r31, 0x00	; 0
     c24:	89 81       	ldd	r24, Y+1	; 0x01
     c26:	80 83       	st	Z, r24
	while(GET_BIT(SPI_u8_SPSR_REG,SPI_u8_SPSR_SPIF_PIN)==0);
     c28:	ee e2       	ldi	r30, 0x2E	; 46
     c2a:	f0 e0       	ldi	r31, 0x00	; 0
     c2c:	80 81       	ld	r24, Z
     c2e:	88 23       	and	r24, r24
     c30:	dc f7       	brge	.-10     	; 0xc28 <SPI_enuTranscieveSynch+0x22>
	return SPI_u8_SPDR_REG;
     c32:	ef e2       	ldi	r30, 0x2F	; 47
     c34:	f0 e0       	ldi	r31, 0x00	; 0
     c36:	80 81       	ld	r24, Z
}
     c38:	0f 90       	pop	r0
     c3a:	cf 91       	pop	r28
     c3c:	df 91       	pop	r29
     c3e:	08 95       	ret

00000c40 <SPI_u8RecievedValue>:

u8 SPI_u8RecievedValue(void)
{
     c40:	df 93       	push	r29
     c42:	cf 93       	push	r28
     c44:	cd b7       	in	r28, 0x3d	; 61
     c46:	de b7       	in	r29, 0x3e	; 62
	return Global_u8Value;
     c48:	80 91 68 00 	lds	r24, 0x0068
}
     c4c:	cf 91       	pop	r28
     c4e:	df 91       	pop	r29
     c50:	08 95       	ret

00000c52 <SPI_vidStopConnection>:
void SPI_vidStopConnection(void)
{
     c52:	df 93       	push	r29
     c54:	cf 93       	push	r28
     c56:	cd b7       	in	r28, 0x3d	; 61
     c58:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(SPI_u8_SPCR_REG,SPI_u8_SPCR_SPE_PIN);
     c5a:	ad e2       	ldi	r26, 0x2D	; 45
     c5c:	b0 e0       	ldi	r27, 0x00	; 0
     c5e:	ed e2       	ldi	r30, 0x2D	; 45
     c60:	f0 e0       	ldi	r31, 0x00	; 0
     c62:	80 81       	ld	r24, Z
     c64:	8f 7b       	andi	r24, 0xBF	; 191
     c66:	8c 93       	st	X, r24
}
     c68:	cf 91       	pop	r28
     c6a:	df 91       	pop	r29
     c6c:	08 95       	ret

00000c6e <__vector_12>:

void __vector_12(void)  __attribute((signal,used));
void __vector_12(void)
{
     c6e:	1f 92       	push	r1
     c70:	0f 92       	push	r0
     c72:	0f b6       	in	r0, 0x3f	; 63
     c74:	0f 92       	push	r0
     c76:	11 24       	eor	r1, r1
     c78:	8f 93       	push	r24
     c7a:	ef 93       	push	r30
     c7c:	ff 93       	push	r31
     c7e:	df 93       	push	r29
     c80:	cf 93       	push	r28
     c82:	cd b7       	in	r28, 0x3d	; 61
     c84:	de b7       	in	r29, 0x3e	; 62

	Global_u8Value=SPI_u8_SPDR_REG;
     c86:	ef e2       	ldi	r30, 0x2F	; 47
     c88:	f0 e0       	ldi	r31, 0x00	; 0
     c8a:	80 81       	ld	r24, Z
     c8c:	80 93 68 00 	sts	0x0068, r24
}
     c90:	cf 91       	pop	r28
     c92:	df 91       	pop	r29
     c94:	ff 91       	pop	r31
     c96:	ef 91       	pop	r30
     c98:	8f 91       	pop	r24
     c9a:	0f 90       	pop	r0
     c9c:	0f be       	out	0x3f, r0	; 63
     c9e:	0f 90       	pop	r0
     ca0:	1f 90       	pop	r1
     ca2:	18 95       	reti

00000ca4 <G_INT_vidEnable>:
 */

#include"G_INT_prv.h"

void G_INT_vidEnable(void)
{
     ca4:	df 93       	push	r29
     ca6:	cf 93       	push	r28
     ca8:	cd b7       	in	r28, 0x3d	; 61
     caa:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(G_INT_u8_SREG_REG, G_INT_u8_SREG_I_PIN);
     cac:	af e5       	ldi	r26, 0x5F	; 95
     cae:	b0 e0       	ldi	r27, 0x00	; 0
     cb0:	ef e5       	ldi	r30, 0x5F	; 95
     cb2:	f0 e0       	ldi	r31, 0x00	; 0
     cb4:	80 81       	ld	r24, Z
     cb6:	80 68       	ori	r24, 0x80	; 128
     cb8:	8c 93       	st	X, r24
}
     cba:	cf 91       	pop	r28
     cbc:	df 91       	pop	r29
     cbe:	08 95       	ret

00000cc0 <G_INT_vidDisable>:
void G_INT_vidDisable(void)
{
     cc0:	df 93       	push	r29
     cc2:	cf 93       	push	r28
     cc4:	cd b7       	in	r28, 0x3d	; 61
     cc6:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(G_INT_u8_SREG_REG, G_INT_u8_SREG_I_PIN);
     cc8:	af e5       	ldi	r26, 0x5F	; 95
     cca:	b0 e0       	ldi	r27, 0x00	; 0
     ccc:	ef e5       	ldi	r30, 0x5F	; 95
     cce:	f0 e0       	ldi	r31, 0x00	; 0
     cd0:	80 81       	ld	r24, Z
     cd2:	8f 77       	andi	r24, 0x7F	; 127
     cd4:	8c 93       	st	X, r24
}
     cd6:	cf 91       	pop	r28
     cd8:	df 91       	pop	r29
     cda:	08 95       	ret

00000cdc <DIO_vidInit>:
 * Description: Initialize all MCU Pins
 * Arguments: 	vid
 * Return :	  	vid
 * */
void DIO_vidInit(void)
{
     cdc:	df 93       	push	r29
     cde:	cf 93       	push	r28
     ce0:	cd b7       	in	r28, 0x3d	; 61
     ce2:	de b7       	in	r29, 0x3e	; 62
	#define DIO_u8_INPUT_FLOATING	0
	#define DIO_u8_INPUT_PULLUP		0
	
	/*our beautiful way :) */
	//Set DDR Values
	DIO_u8_DDRA_REG=CONC(DIO_u8_PORTA_PIN7,DIO_u8_PORTA_PIN6
     ce4:	ea e3       	ldi	r30, 0x3A	; 58
     ce6:	f0 e0       	ldi	r31, 0x00	; 0
     ce8:	8e e7       	ldi	r24, 0x7E	; 126
     cea:	80 83       	st	Z, r24
						,DIO_u8_PORTA_PIN5,DIO_u8_PORTA_PIN4
						,DIO_u8_PORTA_PIN3,DIO_u8_PORTA_PIN2
						,DIO_u8_PORTA_PIN1,DIO_u8_PORTA_PIN0);
	
	DIO_u8_DDRB_REG=CONC(DIO_u8_PORTB_PIN7,DIO_u8_PORTB_PIN6
     cec:	e7 e3       	ldi	r30, 0x37	; 55
     cee:	f0 e0       	ldi	r31, 0x00	; 0
     cf0:	8f e4       	ldi	r24, 0x4F	; 79
     cf2:	80 83       	st	Z, r24
						,DIO_u8_PORTB_PIN5,DIO_u8_PORTB_PIN4
						,DIO_u8_PORTB_PIN3,DIO_u8_PORTB_PIN2
						,DIO_u8_PORTB_PIN1,DIO_u8_PORTB_PIN0);
	
	DIO_u8_DDRC_REG=CONC(DIO_u8_PORTC_PIN7,DIO_u8_PORTC_PIN6
     cf4:	e4 e3       	ldi	r30, 0x34	; 52
     cf6:	f0 e0       	ldi	r31, 0x00	; 0
     cf8:	8f ed       	ldi	r24, 0xDF	; 223
     cfa:	80 83       	st	Z, r24
						,DIO_u8_PORTC_PIN5,DIO_u8_PORTC_PIN4
						,DIO_u8_PORTC_PIN3,DIO_u8_PORTC_PIN2
						,DIO_u8_PORTC_PIN1,DIO_u8_PORTC_PIN0);
		
	DIO_u8_DDRD_REG=CONC(DIO_u8_PORTD_PIN7,DIO_u8_PORTD_PIN6
     cfc:	e1 e3       	ldi	r30, 0x31	; 49
     cfe:	f0 e0       	ldi	r31, 0x00	; 0
     d00:	89 ef       	ldi	r24, 0xF9	; 249
     d02:	80 83       	st	Z, r24
	#define DIO_u8_OUTPUT_HIGH		1
	#define DIO_u8_INPUT_FLOATING	0
	#define DIO_u8_INPUT_PULLUP		1
	

	DIO_u8_PORTA_REG=CONC(DIO_u8_PORTA_PIN7,DIO_u8_PORTA_PIN6
     d04:	eb e3       	ldi	r30, 0x3B	; 59
     d06:	f0 e0       	ldi	r31, 0x00	; 0
     d08:	10 82       	st	Z, r1
						,DIO_u8_PORTA_PIN5,DIO_u8_PORTA_PIN4
						,DIO_u8_PORTA_PIN3,DIO_u8_PORTA_PIN2
						,DIO_u8_PORTA_PIN1,DIO_u8_PORTA_PIN0);
	
	DIO_u8_PORTB_REG=CONC(DIO_u8_PORTB_PIN7,DIO_u8_PORTB_PIN6
     d0a:	e8 e3       	ldi	r30, 0x38	; 56
     d0c:	f0 e0       	ldi	r31, 0x00	; 0
     d0e:	10 82       	st	Z, r1
						,DIO_u8_PORTB_PIN5,DIO_u8_PORTB_PIN4
						,DIO_u8_PORTB_PIN3,DIO_u8_PORTB_PIN2
						,DIO_u8_PORTB_PIN1,DIO_u8_PORTB_PIN0);
	
	DIO_u8_PORTC_REG=CONC(DIO_u8_PORTC_PIN7,DIO_u8_PORTC_PIN6
     d10:	e5 e3       	ldi	r30, 0x35	; 53
     d12:	f0 e0       	ldi	r31, 0x00	; 0
     d14:	80 e2       	ldi	r24, 0x20	; 32
     d16:	80 83       	st	Z, r24
						,DIO_u8_PORTC_PIN5,DIO_u8_PORTC_PIN4
						,DIO_u8_PORTC_PIN3,DIO_u8_PORTC_PIN2
						,DIO_u8_PORTC_PIN1,DIO_u8_PORTC_PIN0);
		
	DIO_u8_PORTD_REG=CONC(DIO_u8_PORTD_PIN7,DIO_u8_PORTD_PIN6
     d18:	e2 e3       	ldi	r30, 0x32	; 50
     d1a:	f0 e0       	ldi	r31, 0x00	; 0
     d1c:	86 e0       	ldi	r24, 0x06	; 6
     d1e:	80 83       	st	Z, r24
	#define DIO_u8_OUTPUT_HIGH		1
	#define DIO_u8_INPUT_FLOATING	2
	#define DIO_u8_INPUT_PULLUP		3
	

}
     d20:	cf 91       	pop	r28
     d22:	df 91       	pop	r29
     d24:	08 95       	ret

00000d26 <DIO_enuSetPinValue>:
 * 			    Second Argument : Copy_u8Pin,     options(from DIO_u8_PIN0 to DIO_u8_PIN7)
 * 			    Third  Argument : Copy_u8Value,   options()
 * Return :		Error Status --> DIO_OK , DIO_NOK
 * */
DIO_tenuErrorStatus DIO_enuSetPinValue(u8 Copy_u8Port,u8 Copy_u8Pin,u8 Copy_u8Value	)
{
     d26:	df 93       	push	r29
     d28:	cf 93       	push	r28
     d2a:	cd b7       	in	r28, 0x3d	; 61
     d2c:	de b7       	in	r29, 0x3e	; 62
     d2e:	2e 97       	sbiw	r28, 0x0e	; 14
     d30:	0f b6       	in	r0, 0x3f	; 63
     d32:	f8 94       	cli
     d34:	de bf       	out	0x3e, r29	; 62
     d36:	0f be       	out	0x3f, r0	; 63
     d38:	cd bf       	out	0x3d, r28	; 61
     d3a:	8a 83       	std	Y+2, r24	; 0x02
     d3c:	6b 83       	std	Y+3, r22	; 0x03
     d3e:	4c 83       	std	Y+4, r20	; 0x04
	DIO_tenuErrorStatus Local_enuErrorStatus=DIO_OK;
     d40:	19 82       	std	Y+1, r1	; 0x01
	/*Check Args*/
	
	if ((Copy_u8Port>DIO_u8_PORTD) || (Copy_u8Pin>DIO_u8_PIN7) ||(Copy_u8Value>DIO_u8_HIGH))
     d42:	8a 81       	ldd	r24, Y+2	; 0x02
     d44:	84 30       	cpi	r24, 0x04	; 4
     d46:	30 f4       	brcc	.+12     	; 0xd54 <DIO_enuSetPinValue+0x2e>
     d48:	8b 81       	ldd	r24, Y+3	; 0x03
     d4a:	88 30       	cpi	r24, 0x08	; 8
     d4c:	18 f4       	brcc	.+6      	; 0xd54 <DIO_enuSetPinValue+0x2e>
     d4e:	8c 81       	ldd	r24, Y+4	; 0x04
     d50:	82 30       	cpi	r24, 0x02	; 2
     d52:	18 f0       	brcs	.+6      	; 0xd5a <DIO_enuSetPinValue+0x34>
	{
		Local_enuErrorStatus=DIO_NOK;
     d54:	81 e0       	ldi	r24, 0x01	; 1
     d56:	89 83       	std	Y+1, r24	; 0x01
     d58:	d7 c0       	rjmp	.+430    	; 0xf08 <DIO_enuSetPinValue+0x1e2>
	}
	else
	{
		/*Implementation*/
		
		switch (Copy_u8Port)
     d5a:	8a 81       	ldd	r24, Y+2	; 0x02
     d5c:	28 2f       	mov	r18, r24
     d5e:	30 e0       	ldi	r19, 0x00	; 0
     d60:	3e 87       	std	Y+14, r19	; 0x0e
     d62:	2d 87       	std	Y+13, r18	; 0x0d
     d64:	8d 85       	ldd	r24, Y+13	; 0x0d
     d66:	9e 85       	ldd	r25, Y+14	; 0x0e
     d68:	81 30       	cpi	r24, 0x01	; 1
     d6a:	91 05       	cpc	r25, r1
     d6c:	09 f4       	brne	.+2      	; 0xd70 <DIO_enuSetPinValue+0x4a>
     d6e:	44 c0       	rjmp	.+136    	; 0xdf8 <DIO_enuSetPinValue+0xd2>
     d70:	2d 85       	ldd	r18, Y+13	; 0x0d
     d72:	3e 85       	ldd	r19, Y+14	; 0x0e
     d74:	22 30       	cpi	r18, 0x02	; 2
     d76:	31 05       	cpc	r19, r1
     d78:	2c f4       	brge	.+10     	; 0xd84 <DIO_enuSetPinValue+0x5e>
     d7a:	8d 85       	ldd	r24, Y+13	; 0x0d
     d7c:	9e 85       	ldd	r25, Y+14	; 0x0e
     d7e:	00 97       	sbiw	r24, 0x00	; 0
     d80:	71 f0       	breq	.+28     	; 0xd9e <DIO_enuSetPinValue+0x78>
     d82:	c2 c0       	rjmp	.+388    	; 0xf08 <DIO_enuSetPinValue+0x1e2>
     d84:	2d 85       	ldd	r18, Y+13	; 0x0d
     d86:	3e 85       	ldd	r19, Y+14	; 0x0e
     d88:	22 30       	cpi	r18, 0x02	; 2
     d8a:	31 05       	cpc	r19, r1
     d8c:	09 f4       	brne	.+2      	; 0xd90 <DIO_enuSetPinValue+0x6a>
     d8e:	62 c0       	rjmp	.+196    	; 0xe54 <DIO_enuSetPinValue+0x12e>
     d90:	8d 85       	ldd	r24, Y+13	; 0x0d
     d92:	9e 85       	ldd	r25, Y+14	; 0x0e
     d94:	83 30       	cpi	r24, 0x03	; 3
     d96:	91 05       	cpc	r25, r1
     d98:	09 f4       	brne	.+2      	; 0xd9c <DIO_enuSetPinValue+0x76>
     d9a:	89 c0       	rjmp	.+274    	; 0xeae <DIO_enuSetPinValue+0x188>
     d9c:	b5 c0       	rjmp	.+362    	; 0xf08 <DIO_enuSetPinValue+0x1e2>
		{
		case DIO_u8_PORTA:
			(Copy_u8Value==DIO_u8_HIGH)? (DIO_u8_PORTA_REG |= (1<<Copy_u8Pin)):(DIO_u8_PORTA_REG &= ~(1<<Copy_u8Pin));
     d9e:	8c 81       	ldd	r24, Y+4	; 0x04
     da0:	81 30       	cpi	r24, 0x01	; 1
     da2:	a9 f4       	brne	.+42     	; 0xdce <DIO_enuSetPinValue+0xa8>
     da4:	ab e3       	ldi	r26, 0x3B	; 59
     da6:	b0 e0       	ldi	r27, 0x00	; 0
     da8:	eb e3       	ldi	r30, 0x3B	; 59
     daa:	f0 e0       	ldi	r31, 0x00	; 0
     dac:	80 81       	ld	r24, Z
     dae:	48 2f       	mov	r20, r24
     db0:	8b 81       	ldd	r24, Y+3	; 0x03
     db2:	28 2f       	mov	r18, r24
     db4:	30 e0       	ldi	r19, 0x00	; 0
     db6:	81 e0       	ldi	r24, 0x01	; 1
     db8:	90 e0       	ldi	r25, 0x00	; 0
     dba:	02 2e       	mov	r0, r18
     dbc:	02 c0       	rjmp	.+4      	; 0xdc2 <DIO_enuSetPinValue+0x9c>
     dbe:	88 0f       	add	r24, r24
     dc0:	99 1f       	adc	r25, r25
     dc2:	0a 94       	dec	r0
     dc4:	e2 f7       	brpl	.-8      	; 0xdbe <DIO_enuSetPinValue+0x98>
     dc6:	84 2b       	or	r24, r20
     dc8:	8c 93       	st	X, r24
     dca:	9c 91       	ld	r25, X
     dcc:	9d c0       	rjmp	.+314    	; 0xf08 <DIO_enuSetPinValue+0x1e2>
     dce:	ab e3       	ldi	r26, 0x3B	; 59
     dd0:	b0 e0       	ldi	r27, 0x00	; 0
     dd2:	eb e3       	ldi	r30, 0x3B	; 59
     dd4:	f0 e0       	ldi	r31, 0x00	; 0
     dd6:	80 81       	ld	r24, Z
     dd8:	48 2f       	mov	r20, r24
     dda:	8b 81       	ldd	r24, Y+3	; 0x03
     ddc:	28 2f       	mov	r18, r24
     dde:	30 e0       	ldi	r19, 0x00	; 0
     de0:	81 e0       	ldi	r24, 0x01	; 1
     de2:	90 e0       	ldi	r25, 0x00	; 0
     de4:	02 c0       	rjmp	.+4      	; 0xdea <DIO_enuSetPinValue+0xc4>
     de6:	88 0f       	add	r24, r24
     de8:	99 1f       	adc	r25, r25
     dea:	2a 95       	dec	r18
     dec:	e2 f7       	brpl	.-8      	; 0xde6 <DIO_enuSetPinValue+0xc0>
     dee:	80 95       	com	r24
     df0:	84 23       	and	r24, r20
     df2:	8c 93       	st	X, r24
     df4:	2c 91       	ld	r18, X
     df6:	88 c0       	rjmp	.+272    	; 0xf08 <DIO_enuSetPinValue+0x1e2>
			break;
		
		case DIO_u8_PORTB:
			(Copy_u8Value==DIO_u8_HIGH)? (DIO_u8_PORTB_REG |= (1<<Copy_u8Pin)):(DIO_u8_PORTB_REG &= ~(1<<Copy_u8Pin));
     df8:	8c 81       	ldd	r24, Y+4	; 0x04
     dfa:	81 30       	cpi	r24, 0x01	; 1
     dfc:	a9 f4       	brne	.+42     	; 0xe28 <DIO_enuSetPinValue+0x102>
     dfe:	a8 e3       	ldi	r26, 0x38	; 56
     e00:	b0 e0       	ldi	r27, 0x00	; 0
     e02:	e8 e3       	ldi	r30, 0x38	; 56
     e04:	f0 e0       	ldi	r31, 0x00	; 0
     e06:	80 81       	ld	r24, Z
     e08:	48 2f       	mov	r20, r24
     e0a:	8b 81       	ldd	r24, Y+3	; 0x03
     e0c:	28 2f       	mov	r18, r24
     e0e:	30 e0       	ldi	r19, 0x00	; 0
     e10:	81 e0       	ldi	r24, 0x01	; 1
     e12:	90 e0       	ldi	r25, 0x00	; 0
     e14:	02 2e       	mov	r0, r18
     e16:	02 c0       	rjmp	.+4      	; 0xe1c <DIO_enuSetPinValue+0xf6>
     e18:	88 0f       	add	r24, r24
     e1a:	99 1f       	adc	r25, r25
     e1c:	0a 94       	dec	r0
     e1e:	e2 f7       	brpl	.-8      	; 0xe18 <DIO_enuSetPinValue+0xf2>
     e20:	84 2b       	or	r24, r20
     e22:	8c 93       	st	X, r24
     e24:	3c 91       	ld	r19, X
     e26:	70 c0       	rjmp	.+224    	; 0xf08 <DIO_enuSetPinValue+0x1e2>
     e28:	a8 e3       	ldi	r26, 0x38	; 56
     e2a:	b0 e0       	ldi	r27, 0x00	; 0
     e2c:	e8 e3       	ldi	r30, 0x38	; 56
     e2e:	f0 e0       	ldi	r31, 0x00	; 0
     e30:	80 81       	ld	r24, Z
     e32:	48 2f       	mov	r20, r24
     e34:	8b 81       	ldd	r24, Y+3	; 0x03
     e36:	28 2f       	mov	r18, r24
     e38:	30 e0       	ldi	r19, 0x00	; 0
     e3a:	81 e0       	ldi	r24, 0x01	; 1
     e3c:	90 e0       	ldi	r25, 0x00	; 0
     e3e:	02 2e       	mov	r0, r18
     e40:	02 c0       	rjmp	.+4      	; 0xe46 <DIO_enuSetPinValue+0x120>
     e42:	88 0f       	add	r24, r24
     e44:	99 1f       	adc	r25, r25
     e46:	0a 94       	dec	r0
     e48:	e2 f7       	brpl	.-8      	; 0xe42 <DIO_enuSetPinValue+0x11c>
     e4a:	80 95       	com	r24
     e4c:	84 23       	and	r24, r20
     e4e:	8c 93       	st	X, r24
     e50:	8c 91       	ld	r24, X
     e52:	5a c0       	rjmp	.+180    	; 0xf08 <DIO_enuSetPinValue+0x1e2>

			break;
		
		case DIO_u8_PORTC:
			(Copy_u8Value==DIO_u8_HIGH)? (DIO_u8_PORTC_REG |= (1<<Copy_u8Pin)):(DIO_u8_PORTC_REG &= ~(1<<Copy_u8Pin));
     e54:	8c 81       	ldd	r24, Y+4	; 0x04
     e56:	81 30       	cpi	r24, 0x01	; 1
     e58:	a9 f4       	brne	.+42     	; 0xe84 <DIO_enuSetPinValue+0x15e>
     e5a:	a5 e3       	ldi	r26, 0x35	; 53
     e5c:	b0 e0       	ldi	r27, 0x00	; 0
     e5e:	e5 e3       	ldi	r30, 0x35	; 53
     e60:	f0 e0       	ldi	r31, 0x00	; 0
     e62:	80 81       	ld	r24, Z
     e64:	48 2f       	mov	r20, r24
     e66:	8b 81       	ldd	r24, Y+3	; 0x03
     e68:	28 2f       	mov	r18, r24
     e6a:	30 e0       	ldi	r19, 0x00	; 0
     e6c:	81 e0       	ldi	r24, 0x01	; 1
     e6e:	90 e0       	ldi	r25, 0x00	; 0
     e70:	02 2e       	mov	r0, r18
     e72:	02 c0       	rjmp	.+4      	; 0xe78 <DIO_enuSetPinValue+0x152>
     e74:	88 0f       	add	r24, r24
     e76:	99 1f       	adc	r25, r25
     e78:	0a 94       	dec	r0
     e7a:	e2 f7       	brpl	.-8      	; 0xe74 <DIO_enuSetPinValue+0x14e>
     e7c:	84 2b       	or	r24, r20
     e7e:	8c 93       	st	X, r24
     e80:	9c 91       	ld	r25, X
     e82:	42 c0       	rjmp	.+132    	; 0xf08 <DIO_enuSetPinValue+0x1e2>
     e84:	a5 e3       	ldi	r26, 0x35	; 53
     e86:	b0 e0       	ldi	r27, 0x00	; 0
     e88:	e5 e3       	ldi	r30, 0x35	; 53
     e8a:	f0 e0       	ldi	r31, 0x00	; 0
     e8c:	80 81       	ld	r24, Z
     e8e:	48 2f       	mov	r20, r24
     e90:	8b 81       	ldd	r24, Y+3	; 0x03
     e92:	28 2f       	mov	r18, r24
     e94:	30 e0       	ldi	r19, 0x00	; 0
     e96:	81 e0       	ldi	r24, 0x01	; 1
     e98:	90 e0       	ldi	r25, 0x00	; 0
     e9a:	02 c0       	rjmp	.+4      	; 0xea0 <DIO_enuSetPinValue+0x17a>
     e9c:	88 0f       	add	r24, r24
     e9e:	99 1f       	adc	r25, r25
     ea0:	2a 95       	dec	r18
     ea2:	e2 f7       	brpl	.-8      	; 0xe9c <DIO_enuSetPinValue+0x176>
     ea4:	80 95       	com	r24
     ea6:	84 23       	and	r24, r20
     ea8:	8c 93       	st	X, r24
     eaa:	2c 91       	ld	r18, X
     eac:	2d c0       	rjmp	.+90     	; 0xf08 <DIO_enuSetPinValue+0x1e2>

			break;
		
		case DIO_u8_PORTD:
			(Copy_u8Value==DIO_u8_HIGH)? (DIO_u8_PORTD_REG |= (1<<Copy_u8Pin)):(DIO_u8_PORTD_REG &= ~(1<<Copy_u8Pin));
     eae:	8c 81       	ldd	r24, Y+4	; 0x04
     eb0:	81 30       	cpi	r24, 0x01	; 1
     eb2:	a9 f4       	brne	.+42     	; 0xede <DIO_enuSetPinValue+0x1b8>
     eb4:	a2 e3       	ldi	r26, 0x32	; 50
     eb6:	b0 e0       	ldi	r27, 0x00	; 0
     eb8:	e2 e3       	ldi	r30, 0x32	; 50
     eba:	f0 e0       	ldi	r31, 0x00	; 0
     ebc:	80 81       	ld	r24, Z
     ebe:	48 2f       	mov	r20, r24
     ec0:	8b 81       	ldd	r24, Y+3	; 0x03
     ec2:	28 2f       	mov	r18, r24
     ec4:	30 e0       	ldi	r19, 0x00	; 0
     ec6:	81 e0       	ldi	r24, 0x01	; 1
     ec8:	90 e0       	ldi	r25, 0x00	; 0
     eca:	02 2e       	mov	r0, r18
     ecc:	02 c0       	rjmp	.+4      	; 0xed2 <DIO_enuSetPinValue+0x1ac>
     ece:	88 0f       	add	r24, r24
     ed0:	99 1f       	adc	r25, r25
     ed2:	0a 94       	dec	r0
     ed4:	e2 f7       	brpl	.-8      	; 0xece <DIO_enuSetPinValue+0x1a8>
     ed6:	84 2b       	or	r24, r20
     ed8:	8c 93       	st	X, r24
     eda:	3c 91       	ld	r19, X
     edc:	15 c0       	rjmp	.+42     	; 0xf08 <DIO_enuSetPinValue+0x1e2>
     ede:	a2 e3       	ldi	r26, 0x32	; 50
     ee0:	b0 e0       	ldi	r27, 0x00	; 0
     ee2:	e2 e3       	ldi	r30, 0x32	; 50
     ee4:	f0 e0       	ldi	r31, 0x00	; 0
     ee6:	80 81       	ld	r24, Z
     ee8:	48 2f       	mov	r20, r24
     eea:	8b 81       	ldd	r24, Y+3	; 0x03
     eec:	28 2f       	mov	r18, r24
     eee:	30 e0       	ldi	r19, 0x00	; 0
     ef0:	81 e0       	ldi	r24, 0x01	; 1
     ef2:	90 e0       	ldi	r25, 0x00	; 0
     ef4:	02 2e       	mov	r0, r18
     ef6:	02 c0       	rjmp	.+4      	; 0xefc <DIO_enuSetPinValue+0x1d6>
     ef8:	88 0f       	add	r24, r24
     efa:	99 1f       	adc	r25, r25
     efc:	0a 94       	dec	r0
     efe:	e2 f7       	brpl	.-8      	; 0xef8 <DIO_enuSetPinValue+0x1d2>
     f00:	80 95       	com	r24
     f02:	84 23       	and	r24, r20
     f04:	8c 93       	st	X, r24
     f06:	8c 91       	ld	r24, X
		
		/*empty*/
		//asm("NOP");
		
	}
	return Local_enuErrorStatus;
     f08:	89 81       	ldd	r24, Y+1	; 0x01
	
}
     f0a:	2e 96       	adiw	r28, 0x0e	; 14
     f0c:	0f b6       	in	r0, 0x3f	; 63
     f0e:	f8 94       	cli
     f10:	de bf       	out	0x3e, r29	; 62
     f12:	0f be       	out	0x3f, r0	; 63
     f14:	cd bf       	out	0x3d, r28	; 61
     f16:	cf 91       	pop	r28
     f18:	df 91       	pop	r29
     f1a:	08 95       	ret

00000f1c <DIO_enuGetPinValue>:
 * 			    Second Argument : Copy_u8Pin,     options(from DIO_u8_PIN0 to DIO_u8_PIN7)
 * 			    Third  Argument : Add_pu8PinValue,   Variable Address to store pin value
 * Return :		Error Status --> DIO_OK , DIO_NOK
 * */
DIO_tenuErrorStatus DIO_enuGetPinValue(u8 Copy_u8Port,u8 Copy_u8Pin,u8* Add_pu8PinValue)
{
     f1c:	df 93       	push	r29
     f1e:	cf 93       	push	r28
     f20:	cd b7       	in	r28, 0x3d	; 61
     f22:	de b7       	in	r29, 0x3e	; 62
     f24:	27 97       	sbiw	r28, 0x07	; 7
     f26:	0f b6       	in	r0, 0x3f	; 63
     f28:	f8 94       	cli
     f2a:	de bf       	out	0x3e, r29	; 62
     f2c:	0f be       	out	0x3f, r0	; 63
     f2e:	cd bf       	out	0x3d, r28	; 61
     f30:	8a 83       	std	Y+2, r24	; 0x02
     f32:	6b 83       	std	Y+3, r22	; 0x03
     f34:	5d 83       	std	Y+5, r21	; 0x05
     f36:	4c 83       	std	Y+4, r20	; 0x04
	DIO_tenuErrorStatus Local_enuErrorStatus=DIO_OK;
     f38:	19 82       	std	Y+1, r1	; 0x01
		/*Check Args*/
	
	if ((Copy_u8Port>DIO_u8_PORTD) || (Copy_u8Pin>DIO_u8_PIN7) ||(Add_pu8PinValue== NULL))
     f3a:	8a 81       	ldd	r24, Y+2	; 0x02
     f3c:	84 30       	cpi	r24, 0x04	; 4
     f3e:	38 f4       	brcc	.+14     	; 0xf4e <DIO_enuGetPinValue+0x32>
     f40:	8b 81       	ldd	r24, Y+3	; 0x03
     f42:	88 30       	cpi	r24, 0x08	; 8
     f44:	20 f4       	brcc	.+8      	; 0xf4e <DIO_enuGetPinValue+0x32>
     f46:	8c 81       	ldd	r24, Y+4	; 0x04
     f48:	9d 81       	ldd	r25, Y+5	; 0x05
     f4a:	00 97       	sbiw	r24, 0x00	; 0
     f4c:	19 f4       	brne	.+6      	; 0xf54 <DIO_enuGetPinValue+0x38>
	{
		Local_enuErrorStatus=DIO_NOK;
     f4e:	81 e0       	ldi	r24, 0x01	; 1
     f50:	89 83       	std	Y+1, r24	; 0x01
     f52:	70 c0       	rjmp	.+224    	; 0x1034 <DIO_enuGetPinValue+0x118>
	}
	else
	{
		/*Implementation*/
		
		switch (Copy_u8Port)
     f54:	8a 81       	ldd	r24, Y+2	; 0x02
     f56:	28 2f       	mov	r18, r24
     f58:	30 e0       	ldi	r19, 0x00	; 0
     f5a:	3f 83       	std	Y+7, r19	; 0x07
     f5c:	2e 83       	std	Y+6, r18	; 0x06
     f5e:	4e 81       	ldd	r20, Y+6	; 0x06
     f60:	5f 81       	ldd	r21, Y+7	; 0x07
     f62:	41 30       	cpi	r20, 0x01	; 1
     f64:	51 05       	cpc	r21, r1
     f66:	59 f1       	breq	.+86     	; 0xfbe <DIO_enuGetPinValue+0xa2>
     f68:	8e 81       	ldd	r24, Y+6	; 0x06
     f6a:	9f 81       	ldd	r25, Y+7	; 0x07
     f6c:	82 30       	cpi	r24, 0x02	; 2
     f6e:	91 05       	cpc	r25, r1
     f70:	34 f4       	brge	.+12     	; 0xf7e <DIO_enuGetPinValue+0x62>
     f72:	2e 81       	ldd	r18, Y+6	; 0x06
     f74:	3f 81       	ldd	r19, Y+7	; 0x07
     f76:	21 15       	cp	r18, r1
     f78:	31 05       	cpc	r19, r1
     f7a:	69 f0       	breq	.+26     	; 0xf96 <DIO_enuGetPinValue+0x7a>
     f7c:	5b c0       	rjmp	.+182    	; 0x1034 <DIO_enuGetPinValue+0x118>
     f7e:	4e 81       	ldd	r20, Y+6	; 0x06
     f80:	5f 81       	ldd	r21, Y+7	; 0x07
     f82:	42 30       	cpi	r20, 0x02	; 2
     f84:	51 05       	cpc	r21, r1
     f86:	79 f1       	breq	.+94     	; 0xfe6 <DIO_enuGetPinValue+0xca>
     f88:	8e 81       	ldd	r24, Y+6	; 0x06
     f8a:	9f 81       	ldd	r25, Y+7	; 0x07
     f8c:	83 30       	cpi	r24, 0x03	; 3
     f8e:	91 05       	cpc	r25, r1
     f90:	09 f4       	brne	.+2      	; 0xf94 <DIO_enuGetPinValue+0x78>
     f92:	3d c0       	rjmp	.+122    	; 0x100e <DIO_enuGetPinValue+0xf2>
     f94:	4f c0       	rjmp	.+158    	; 0x1034 <DIO_enuGetPinValue+0x118>
		{
		case DIO_u8_PORTA:
			*Add_pu8PinValue=(DIO_u8_PINA_REG>>Copy_u8Pin)&0x01;
     f96:	e9 e3       	ldi	r30, 0x39	; 57
     f98:	f0 e0       	ldi	r31, 0x00	; 0
     f9a:	80 81       	ld	r24, Z
     f9c:	28 2f       	mov	r18, r24
     f9e:	30 e0       	ldi	r19, 0x00	; 0
     fa0:	8b 81       	ldd	r24, Y+3	; 0x03
     fa2:	88 2f       	mov	r24, r24
     fa4:	90 e0       	ldi	r25, 0x00	; 0
     fa6:	a9 01       	movw	r20, r18
     fa8:	02 c0       	rjmp	.+4      	; 0xfae <DIO_enuGetPinValue+0x92>
     faa:	55 95       	asr	r21
     fac:	47 95       	ror	r20
     fae:	8a 95       	dec	r24
     fb0:	e2 f7       	brpl	.-8      	; 0xfaa <DIO_enuGetPinValue+0x8e>
     fb2:	ca 01       	movw	r24, r20
     fb4:	81 70       	andi	r24, 0x01	; 1
     fb6:	ec 81       	ldd	r30, Y+4	; 0x04
     fb8:	fd 81       	ldd	r31, Y+5	; 0x05
     fba:	80 83       	st	Z, r24
     fbc:	3b c0       	rjmp	.+118    	; 0x1034 <DIO_enuGetPinValue+0x118>
			break;
		
		case DIO_u8_PORTB:
			*Add_pu8PinValue=(DIO_u8_PINB_REG>>Copy_u8Pin)&0x01;
     fbe:	e6 e3       	ldi	r30, 0x36	; 54
     fc0:	f0 e0       	ldi	r31, 0x00	; 0
     fc2:	80 81       	ld	r24, Z
     fc4:	28 2f       	mov	r18, r24
     fc6:	30 e0       	ldi	r19, 0x00	; 0
     fc8:	8b 81       	ldd	r24, Y+3	; 0x03
     fca:	88 2f       	mov	r24, r24
     fcc:	90 e0       	ldi	r25, 0x00	; 0
     fce:	a9 01       	movw	r20, r18
     fd0:	02 c0       	rjmp	.+4      	; 0xfd6 <DIO_enuGetPinValue+0xba>
     fd2:	55 95       	asr	r21
     fd4:	47 95       	ror	r20
     fd6:	8a 95       	dec	r24
     fd8:	e2 f7       	brpl	.-8      	; 0xfd2 <DIO_enuGetPinValue+0xb6>
     fda:	ca 01       	movw	r24, r20
     fdc:	81 70       	andi	r24, 0x01	; 1
     fde:	ec 81       	ldd	r30, Y+4	; 0x04
     fe0:	fd 81       	ldd	r31, Y+5	; 0x05
     fe2:	80 83       	st	Z, r24
     fe4:	27 c0       	rjmp	.+78     	; 0x1034 <DIO_enuGetPinValue+0x118>
			break;
		
		case DIO_u8_PORTC:
			*Add_pu8PinValue=(DIO_u8_PINC_REG>>Copy_u8Pin)&0x01;
     fe6:	e3 e3       	ldi	r30, 0x33	; 51
     fe8:	f0 e0       	ldi	r31, 0x00	; 0
     fea:	80 81       	ld	r24, Z
     fec:	28 2f       	mov	r18, r24
     fee:	30 e0       	ldi	r19, 0x00	; 0
     ff0:	8b 81       	ldd	r24, Y+3	; 0x03
     ff2:	88 2f       	mov	r24, r24
     ff4:	90 e0       	ldi	r25, 0x00	; 0
     ff6:	a9 01       	movw	r20, r18
     ff8:	02 c0       	rjmp	.+4      	; 0xffe <DIO_enuGetPinValue+0xe2>
     ffa:	55 95       	asr	r21
     ffc:	47 95       	ror	r20
     ffe:	8a 95       	dec	r24
    1000:	e2 f7       	brpl	.-8      	; 0xffa <DIO_enuGetPinValue+0xde>
    1002:	ca 01       	movw	r24, r20
    1004:	81 70       	andi	r24, 0x01	; 1
    1006:	ec 81       	ldd	r30, Y+4	; 0x04
    1008:	fd 81       	ldd	r31, Y+5	; 0x05
    100a:	80 83       	st	Z, r24
    100c:	13 c0       	rjmp	.+38     	; 0x1034 <DIO_enuGetPinValue+0x118>
			break;
		
		case DIO_u8_PORTD:
			*Add_pu8PinValue=(DIO_u8_PIND_REG>>Copy_u8Pin)&0x01 ;
    100e:	e0 e3       	ldi	r30, 0x30	; 48
    1010:	f0 e0       	ldi	r31, 0x00	; 0
    1012:	80 81       	ld	r24, Z
    1014:	28 2f       	mov	r18, r24
    1016:	30 e0       	ldi	r19, 0x00	; 0
    1018:	8b 81       	ldd	r24, Y+3	; 0x03
    101a:	88 2f       	mov	r24, r24
    101c:	90 e0       	ldi	r25, 0x00	; 0
    101e:	a9 01       	movw	r20, r18
    1020:	02 c0       	rjmp	.+4      	; 0x1026 <DIO_enuGetPinValue+0x10a>
    1022:	55 95       	asr	r21
    1024:	47 95       	ror	r20
    1026:	8a 95       	dec	r24
    1028:	e2 f7       	brpl	.-8      	; 0x1022 <DIO_enuGetPinValue+0x106>
    102a:	ca 01       	movw	r24, r20
    102c:	81 70       	andi	r24, 0x01	; 1
    102e:	ec 81       	ldd	r30, Y+4	; 0x04
    1030:	fd 81       	ldd	r31, Y+5	; 0x05
    1032:	80 83       	st	Z, r24
		
		/*empty*/
		//asm("NOP");
		
	}
	return Local_enuErrorStatus;
    1034:	89 81       	ldd	r24, Y+1	; 0x01
}
    1036:	27 96       	adiw	r28, 0x07	; 7
    1038:	0f b6       	in	r0, 0x3f	; 63
    103a:	f8 94       	cli
    103c:	de bf       	out	0x3e, r29	; 62
    103e:	0f be       	out	0x3f, r0	; 63
    1040:	cd bf       	out	0x3d, r28	; 61
    1042:	cf 91       	pop	r28
    1044:	df 91       	pop	r29
    1046:	08 95       	ret

00001048 <DIO_enuGetPortValue>:
 * 			    Third  Argument : Add_pu8PortValue	Variable Address to store port value
 * Return :		Error Status --> DIO_OK , DIO_NOK
 * */

DIO_tenuErrorStatus DIO_enuGetPortValue(u8 Copy_u8Port,u8* Add_pu8PortValue)
{
    1048:	df 93       	push	r29
    104a:	cf 93       	push	r28
    104c:	00 d0       	rcall	.+0      	; 0x104e <DIO_enuGetPortValue+0x6>
    104e:	00 d0       	rcall	.+0      	; 0x1050 <DIO_enuGetPortValue+0x8>
    1050:	00 d0       	rcall	.+0      	; 0x1052 <DIO_enuGetPortValue+0xa>
    1052:	cd b7       	in	r28, 0x3d	; 61
    1054:	de b7       	in	r29, 0x3e	; 62
    1056:	8a 83       	std	Y+2, r24	; 0x02
    1058:	7c 83       	std	Y+4, r23	; 0x04
    105a:	6b 83       	std	Y+3, r22	; 0x03
	
	DIO_tenuErrorStatus Local_enuErrorStatus=DIO_OK;
    105c:	19 82       	std	Y+1, r1	; 0x01
			/*Check Args*/
	if ((Copy_u8Port>DIO_u8_PORTD) ||(Add_pu8PortValue== NULL))
    105e:	8a 81       	ldd	r24, Y+2	; 0x02
    1060:	84 30       	cpi	r24, 0x04	; 4
    1062:	20 f4       	brcc	.+8      	; 0x106c <DIO_enuGetPortValue+0x24>
    1064:	8b 81       	ldd	r24, Y+3	; 0x03
    1066:	9c 81       	ldd	r25, Y+4	; 0x04
    1068:	00 97       	sbiw	r24, 0x00	; 0
    106a:	19 f4       	brne	.+6      	; 0x1072 <DIO_enuGetPortValue+0x2a>
		{
			Local_enuErrorStatus=DIO_NOK;
    106c:	81 e0       	ldi	r24, 0x01	; 1
    106e:	89 83       	std	Y+1, r24	; 0x01
    1070:	3a c0       	rjmp	.+116    	; 0x10e6 <DIO_enuGetPortValue+0x9e>
		else
		{
			/*Implementation*/
			

			switch (Copy_u8Port)
    1072:	8a 81       	ldd	r24, Y+2	; 0x02
    1074:	28 2f       	mov	r18, r24
    1076:	30 e0       	ldi	r19, 0x00	; 0
    1078:	3e 83       	std	Y+6, r19	; 0x06
    107a:	2d 83       	std	Y+5, r18	; 0x05
    107c:	8d 81       	ldd	r24, Y+5	; 0x05
    107e:	9e 81       	ldd	r25, Y+6	; 0x06
    1080:	81 30       	cpi	r24, 0x01	; 1
    1082:	91 05       	cpc	r25, r1
    1084:	e1 f0       	breq	.+56     	; 0x10be <DIO_enuGetPortValue+0x76>
    1086:	2d 81       	ldd	r18, Y+5	; 0x05
    1088:	3e 81       	ldd	r19, Y+6	; 0x06
    108a:	22 30       	cpi	r18, 0x02	; 2
    108c:	31 05       	cpc	r19, r1
    108e:	2c f4       	brge	.+10     	; 0x109a <DIO_enuGetPortValue+0x52>
    1090:	8d 81       	ldd	r24, Y+5	; 0x05
    1092:	9e 81       	ldd	r25, Y+6	; 0x06
    1094:	00 97       	sbiw	r24, 0x00	; 0
    1096:	61 f0       	breq	.+24     	; 0x10b0 <DIO_enuGetPortValue+0x68>
    1098:	26 c0       	rjmp	.+76     	; 0x10e6 <DIO_enuGetPortValue+0x9e>
    109a:	2d 81       	ldd	r18, Y+5	; 0x05
    109c:	3e 81       	ldd	r19, Y+6	; 0x06
    109e:	22 30       	cpi	r18, 0x02	; 2
    10a0:	31 05       	cpc	r19, r1
    10a2:	a1 f0       	breq	.+40     	; 0x10cc <DIO_enuGetPortValue+0x84>
    10a4:	8d 81       	ldd	r24, Y+5	; 0x05
    10a6:	9e 81       	ldd	r25, Y+6	; 0x06
    10a8:	83 30       	cpi	r24, 0x03	; 3
    10aa:	91 05       	cpc	r25, r1
    10ac:	b1 f0       	breq	.+44     	; 0x10da <DIO_enuGetPortValue+0x92>
    10ae:	1b c0       	rjmp	.+54     	; 0x10e6 <DIO_enuGetPortValue+0x9e>
			{
			case DIO_u8_PORTA:
				*Add_pu8PortValue=DIO_u8_PINA_REG;
    10b0:	e9 e3       	ldi	r30, 0x39	; 57
    10b2:	f0 e0       	ldi	r31, 0x00	; 0
    10b4:	80 81       	ld	r24, Z
    10b6:	eb 81       	ldd	r30, Y+3	; 0x03
    10b8:	fc 81       	ldd	r31, Y+4	; 0x04
    10ba:	80 83       	st	Z, r24
    10bc:	14 c0       	rjmp	.+40     	; 0x10e6 <DIO_enuGetPortValue+0x9e>
				break;
			
			case DIO_u8_PORTB:
				*Add_pu8PortValue=DIO_u8_PINB_REG;
    10be:	e6 e3       	ldi	r30, 0x36	; 54
    10c0:	f0 e0       	ldi	r31, 0x00	; 0
    10c2:	80 81       	ld	r24, Z
    10c4:	eb 81       	ldd	r30, Y+3	; 0x03
    10c6:	fc 81       	ldd	r31, Y+4	; 0x04
    10c8:	80 83       	st	Z, r24
    10ca:	0d c0       	rjmp	.+26     	; 0x10e6 <DIO_enuGetPortValue+0x9e>
				break;
			
			case DIO_u8_PORTC:
				*Add_pu8PortValue=DIO_u8_PINC_REG;
    10cc:	e3 e3       	ldi	r30, 0x33	; 51
    10ce:	f0 e0       	ldi	r31, 0x00	; 0
    10d0:	80 81       	ld	r24, Z
    10d2:	eb 81       	ldd	r30, Y+3	; 0x03
    10d4:	fc 81       	ldd	r31, Y+4	; 0x04
    10d6:	80 83       	st	Z, r24
    10d8:	06 c0       	rjmp	.+12     	; 0x10e6 <DIO_enuGetPortValue+0x9e>
				break;
			
			case DIO_u8_PORTD:
				*Add_pu8PortValue=DIO_u8_PIND_REG;
    10da:	e0 e3       	ldi	r30, 0x30	; 48
    10dc:	f0 e0       	ldi	r31, 0x00	; 0
    10de:	80 81       	ld	r24, Z
    10e0:	eb 81       	ldd	r30, Y+3	; 0x03
    10e2:	fc 81       	ldd	r31, Y+4	; 0x04
    10e4:	80 83       	st	Z, r24

			/*empty*/
			//asm("NOP");
			
		}
		return Local_enuErrorStatus;
    10e6:	89 81       	ldd	r24, Y+1	; 0x01

	
}
    10e8:	26 96       	adiw	r28, 0x06	; 6
    10ea:	0f b6       	in	r0, 0x3f	; 63
    10ec:	f8 94       	cli
    10ee:	de bf       	out	0x3e, r29	; 62
    10f0:	0f be       	out	0x3f, r0	; 63
    10f2:	cd bf       	out	0x3d, r28	; 61
    10f4:	cf 91       	pop	r28
    10f6:	df 91       	pop	r29
    10f8:	08 95       	ret

000010fa <DIO_enuSetPortValue>:
 * 			    Second Argument : Copy_u8Value,     variable to the value to be se to port
 * Return :		Error Status --> DIO_OK , DIO_NOK
 * */

DIO_tenuErrorStatus DIO_enuSetPortValue(u8 Copy_u8Port,u8 Copy_u8Value)
{
    10fa:	df 93       	push	r29
    10fc:	cf 93       	push	r28
    10fe:	00 d0       	rcall	.+0      	; 0x1100 <DIO_enuSetPortValue+0x6>
    1100:	00 d0       	rcall	.+0      	; 0x1102 <DIO_enuSetPortValue+0x8>
    1102:	0f 92       	push	r0
    1104:	cd b7       	in	r28, 0x3d	; 61
    1106:	de b7       	in	r29, 0x3e	; 62
    1108:	8a 83       	std	Y+2, r24	; 0x02
    110a:	6b 83       	std	Y+3, r22	; 0x03

	DIO_tenuErrorStatus Local_enuErrorStatus=DIO_OK;
    110c:	19 82       	std	Y+1, r1	; 0x01
	/*Check Args*/
	
	if ((Copy_u8Port>DIO_u8_PORTD))
    110e:	8a 81       	ldd	r24, Y+2	; 0x02
    1110:	84 30       	cpi	r24, 0x04	; 4
    1112:	18 f0       	brcs	.+6      	; 0x111a <DIO_enuSetPortValue+0x20>
	{
		Local_enuErrorStatus=DIO_NOK;
    1114:	81 e0       	ldi	r24, 0x01	; 1
    1116:	89 83       	std	Y+1, r24	; 0x01
    1118:	32 c0       	rjmp	.+100    	; 0x117e <DIO_enuSetPortValue+0x84>
	}
	else
	{
		/*Implementation*/
		
		switch (Copy_u8Port)
    111a:	8a 81       	ldd	r24, Y+2	; 0x02
    111c:	28 2f       	mov	r18, r24
    111e:	30 e0       	ldi	r19, 0x00	; 0
    1120:	3d 83       	std	Y+5, r19	; 0x05
    1122:	2c 83       	std	Y+4, r18	; 0x04
    1124:	8c 81       	ldd	r24, Y+4	; 0x04
    1126:	9d 81       	ldd	r25, Y+5	; 0x05
    1128:	81 30       	cpi	r24, 0x01	; 1
    112a:	91 05       	cpc	r25, r1
    112c:	d1 f0       	breq	.+52     	; 0x1162 <DIO_enuSetPortValue+0x68>
    112e:	2c 81       	ldd	r18, Y+4	; 0x04
    1130:	3d 81       	ldd	r19, Y+5	; 0x05
    1132:	22 30       	cpi	r18, 0x02	; 2
    1134:	31 05       	cpc	r19, r1
    1136:	2c f4       	brge	.+10     	; 0x1142 <DIO_enuSetPortValue+0x48>
    1138:	8c 81       	ldd	r24, Y+4	; 0x04
    113a:	9d 81       	ldd	r25, Y+5	; 0x05
    113c:	00 97       	sbiw	r24, 0x00	; 0
    113e:	61 f0       	breq	.+24     	; 0x1158 <DIO_enuSetPortValue+0x5e>
    1140:	1e c0       	rjmp	.+60     	; 0x117e <DIO_enuSetPortValue+0x84>
    1142:	2c 81       	ldd	r18, Y+4	; 0x04
    1144:	3d 81       	ldd	r19, Y+5	; 0x05
    1146:	22 30       	cpi	r18, 0x02	; 2
    1148:	31 05       	cpc	r19, r1
    114a:	81 f0       	breq	.+32     	; 0x116c <DIO_enuSetPortValue+0x72>
    114c:	8c 81       	ldd	r24, Y+4	; 0x04
    114e:	9d 81       	ldd	r25, Y+5	; 0x05
    1150:	83 30       	cpi	r24, 0x03	; 3
    1152:	91 05       	cpc	r25, r1
    1154:	81 f0       	breq	.+32     	; 0x1176 <DIO_enuSetPortValue+0x7c>
    1156:	13 c0       	rjmp	.+38     	; 0x117e <DIO_enuSetPortValue+0x84>
		{
		case DIO_u8_PORTA:
			DIO_u8_PORTA_REG =Copy_u8Value;
    1158:	eb e3       	ldi	r30, 0x3B	; 59
    115a:	f0 e0       	ldi	r31, 0x00	; 0
    115c:	8b 81       	ldd	r24, Y+3	; 0x03
    115e:	80 83       	st	Z, r24
    1160:	0e c0       	rjmp	.+28     	; 0x117e <DIO_enuSetPortValue+0x84>
			break;
		
		case DIO_u8_PORTB:
			DIO_u8_PORTB_REG =Copy_u8Value;
    1162:	e8 e3       	ldi	r30, 0x38	; 56
    1164:	f0 e0       	ldi	r31, 0x00	; 0
    1166:	8b 81       	ldd	r24, Y+3	; 0x03
    1168:	80 83       	st	Z, r24
    116a:	09 c0       	rjmp	.+18     	; 0x117e <DIO_enuSetPortValue+0x84>

			break;
		
		case DIO_u8_PORTC:
			DIO_u8_PORTC_REG =Copy_u8Value;
    116c:	e5 e3       	ldi	r30, 0x35	; 53
    116e:	f0 e0       	ldi	r31, 0x00	; 0
    1170:	8b 81       	ldd	r24, Y+3	; 0x03
    1172:	80 83       	st	Z, r24
    1174:	04 c0       	rjmp	.+8      	; 0x117e <DIO_enuSetPortValue+0x84>

			break;
		
		case DIO_u8_PORTD:
			DIO_u8_PORTD_REG =Copy_u8Value;
    1176:	e2 e3       	ldi	r30, 0x32	; 50
    1178:	f0 e0       	ldi	r31, 0x00	; 0
    117a:	8b 81       	ldd	r24, Y+3	; 0x03
    117c:	80 83       	st	Z, r24
		
		/*empty*/
		//asm("NOP");
		
	}
	return Local_enuErrorStatus;
    117e:	89 81       	ldd	r24, Y+1	; 0x01

}
    1180:	0f 90       	pop	r0
    1182:	0f 90       	pop	r0
    1184:	0f 90       	pop	r0
    1186:	0f 90       	pop	r0
    1188:	0f 90       	pop	r0
    118a:	cf 91       	pop	r28
    118c:	df 91       	pop	r29
    118e:	08 95       	ret

00001190 <ADC_vidInit>:
#include"ADC_prv.h"
#include"ADC_cfg.h"
#include"../../LIB/BIT_Utils.h"
#include<util/delay.h>
void ADC_vidInit(void)
{
    1190:	df 93       	push	r29
    1192:	cf 93       	push	r28
    1194:	cd b7       	in	r28, 0x3d	; 61
    1196:	de b7       	in	r29, 0x3e	; 62
	
	/*1- choose  Vref and selected channel and whether adjust right or left*/
	ASSIGN_REG(ADC_u8_ADMUX_REG,ADC_INPUT_CHANNEL);
    1198:	a7 e2       	ldi	r26, 0x27	; 39
    119a:	b0 e0       	ldi	r27, 0x00	; 0
    119c:	e7 e2       	ldi	r30, 0x27	; 39
    119e:	f0 e0       	ldi	r31, 0x00	; 0
    11a0:	80 81       	ld	r24, Z
    11a2:	8c 93       	st	X, r24
	ASSIGN_REG(ADC_u8_ADMUX_REG,(ADC_V_REFERENCE_SELECTION<<ADC_u8_ADMUX_REFS0_BIT));
    11a4:	a7 e2       	ldi	r26, 0x27	; 39
    11a6:	b0 e0       	ldi	r27, 0x00	; 0
    11a8:	e7 e2       	ldi	r30, 0x27	; 39
    11aa:	f0 e0       	ldi	r31, 0x00	; 0
    11ac:	80 81       	ld	r24, Z
    11ae:	8c 93       	st	X, r24
	ASSIGN_BIT(ADC_u8_ADMUX_REG,ADC_u8_ADMUX_ADLAR_BIT,ADC_LEFT_ADJUST_SELECTION);
    11b0:	a7 e2       	ldi	r26, 0x27	; 39
    11b2:	b0 e0       	ldi	r27, 0x00	; 0
    11b4:	e7 e2       	ldi	r30, 0x27	; 39
    11b6:	f0 e0       	ldi	r31, 0x00	; 0
    11b8:	80 81       	ld	r24, Z
    11ba:	8c 93       	st	X, r24
	
	/*2-choose prescaler */
	ASSIGN_REG(ADC_u8_ADCSRA_REG,ADC_PRESCALER_SELECTION);
    11bc:	a6 e2       	ldi	r26, 0x26	; 38
    11be:	b0 e0       	ldi	r27, 0x00	; 0
    11c0:	e6 e2       	ldi	r30, 0x26	; 38
    11c2:	f0 e0       	ldi	r31, 0x00	; 0
    11c4:	80 81       	ld	r24, Z
    11c6:	86 60       	ori	r24, 0x06	; 6
    11c8:	8c 93       	st	X, r24
	/*3- enable ADC*/
	SET_BIT(ADC_u8_ADCSRA_REG,ADC_u8_ADCSRA_ADEN_BIT);
    11ca:	a6 e2       	ldi	r26, 0x26	; 38
    11cc:	b0 e0       	ldi	r27, 0x00	; 0
    11ce:	e6 e2       	ldi	r30, 0x26	; 38
    11d0:	f0 e0       	ldi	r31, 0x00	; 0
    11d2:	80 81       	ld	r24, Z
    11d4:	80 68       	ori	r24, 0x80	; 128
    11d6:	8c 93       	st	X, r24
	


}
    11d8:	cf 91       	pop	r28
    11da:	df 91       	pop	r29
    11dc:	08 95       	ret

000011de <ADC_enuReadValuePolling>:
ADC_tenuErrorStatus ADC_enuReadValuePolling(u16* Local_pu16DigitalValue)
{
    11de:	df 93       	push	r29
    11e0:	cf 93       	push	r28
    11e2:	00 d0       	rcall	.+0      	; 0x11e4 <ADC_enuReadValuePolling+0x6>
    11e4:	0f 92       	push	r0
    11e6:	cd b7       	in	r28, 0x3d	; 61
    11e8:	de b7       	in	r29, 0x3e	; 62
    11ea:	9b 83       	std	Y+3, r25	; 0x03
    11ec:	8a 83       	std	Y+2, r24	; 0x02
	ADC_tenuErrorStatus Local_enuErrorStatus=ADC_OK;
    11ee:	19 82       	std	Y+1, r1	; 0x01
		if(*Local_pu16DigitalValue==0)
		{
//			_delay_ms(500);
		}
		/*1-start conversion*/
		SET_BIT(ADC_u8_ADCSRA_REG,ADC_u8_ADCSRA_ADSC_BIT);
    11f0:	a6 e2       	ldi	r26, 0x26	; 38
    11f2:	b0 e0       	ldi	r27, 0x00	; 0
    11f4:	e6 e2       	ldi	r30, 0x26	; 38
    11f6:	f0 e0       	ldi	r31, 0x00	; 0
    11f8:	80 81       	ld	r24, Z
    11fa:	80 64       	ori	r24, 0x40	; 64
    11fc:	8c 93       	st	X, r24
		/*2- polling on ADSC bit*/
		while(GET_BIT(ADC_u8_ADCSRA_REG,ADC_u8_ADCSRA_ADSC_BIT));
    11fe:	e6 e2       	ldi	r30, 0x26	; 38
    1200:	f0 e0       	ldi	r31, 0x00	; 0
    1202:	80 81       	ld	r24, Z
    1204:	82 95       	swap	r24
    1206:	86 95       	lsr	r24
    1208:	86 95       	lsr	r24
    120a:	83 70       	andi	r24, 0x03	; 3
    120c:	88 2f       	mov	r24, r24
    120e:	90 e0       	ldi	r25, 0x00	; 0
    1210:	81 70       	andi	r24, 0x01	; 1
    1212:	90 70       	andi	r25, 0x00	; 0
    1214:	88 23       	and	r24, r24
    1216:	99 f7       	brne	.-26     	; 0x11fe <ADC_enuReadValuePolling+0x20>
		/*3- assign digital value value */
		*Local_pu16DigitalValue=(u16) (ADC_u8_ADCL_REG)|(ADC_u8_ADCH_REG<<8);
    1218:	e4 e2       	ldi	r30, 0x24	; 36
    121a:	f0 e0       	ldi	r31, 0x00	; 0
    121c:	80 81       	ld	r24, Z
    121e:	28 2f       	mov	r18, r24
    1220:	30 e0       	ldi	r19, 0x00	; 0
    1222:	e5 e2       	ldi	r30, 0x25	; 37
    1224:	f0 e0       	ldi	r31, 0x00	; 0
    1226:	80 81       	ld	r24, Z
    1228:	88 2f       	mov	r24, r24
    122a:	90 e0       	ldi	r25, 0x00	; 0
    122c:	98 2f       	mov	r25, r24
    122e:	88 27       	eor	r24, r24
    1230:	82 2b       	or	r24, r18
    1232:	93 2b       	or	r25, r19
    1234:	ea 81       	ldd	r30, Y+2	; 0x02
    1236:	fb 81       	ldd	r31, Y+3	; 0x03
    1238:	91 83       	std	Z+1, r25	; 0x01
    123a:	80 83       	st	Z, r24
	}
	return Local_enuErrorStatus;
    123c:	89 81       	ldd	r24, Y+1	; 0x01
}
    123e:	0f 90       	pop	r0
    1240:	0f 90       	pop	r0
    1242:	0f 90       	pop	r0
    1244:	cf 91       	pop	r28
    1246:	df 91       	pop	r29
    1248:	08 95       	ret

0000124a <main>:
#include "../MCAL/SPI/SPI_int.h"
#include "../MCAL/ADC/ADC_int.h"
#include <util/delay.h>

void main()
{
    124a:	0f 93       	push	r16
    124c:	1f 93       	push	r17
    124e:	df 93       	push	r29
    1250:	cf 93       	push	r28
    1252:	cd b7       	in	r28, 0x3d	; 61
    1254:	de b7       	in	r29, 0x3e	; 62
    1256:	c0 5c       	subi	r28, 0xC0	; 192
    1258:	d0 40       	sbci	r29, 0x00	; 0
    125a:	0f b6       	in	r0, 0x3f	; 63
    125c:	f8 94       	cli
    125e:	de bf       	out	0x3e, r29	; 62
    1260:	0f be       	out	0x3f, r0	; 63
    1262:	cd bf       	out	0x3d, r28	; 61
	u8 Local_u8SPI_PREVIOUSMessege;
	u8 Local_u8PinValue;
	u8 Local_u8PinValue1;
	u8 Local_u8PinValue2;
	u16 Local_u16ADCReadValue;
	u8 Local_u8ExitFlag = 0;	//for oven and coffee timers
    1264:	fe 01       	movw	r30, r28
    1266:	e9 54       	subi	r30, 0x49	; 73
    1268:	ff 4f       	sbci	r31, 0xFF	; 255
    126a:	10 82       	st	Z, r1
	DIO_vidInit();
    126c:	0e 94 6e 06 	call	0xcdc	; 0xcdc <DIO_vidInit>
	ADC_vidInit();
    1270:	0e 94 c8 08 	call	0x1190	; 0x1190 <ADC_vidInit>
	SPI_vidInit(SPI_Slave);
    1274:	80 e0       	ldi	r24, 0x00	; 0
    1276:	0e 94 a3 05 	call	0xb46	; 0xb46 <SPI_vidInit>
	// super loop
	while (TRUE)
	{
		//===========================================================================================================
		// check sensor for bathroom lights
		DIO_enuGetPinValue(DIO_u8_PORTC, DIO_u8_PIN5, &Local_u8PinValue);
    127a:	9e 01       	movw	r18, r28
    127c:	25 54       	subi	r18, 0x45	; 69
    127e:	3f 4f       	sbci	r19, 0xFF	; 255
    1280:	82 e0       	ldi	r24, 0x02	; 2
    1282:	65 e0       	ldi	r22, 0x05	; 5
    1284:	a9 01       	movw	r20, r18
    1286:	0e 94 8e 07 	call	0xf1c	; 0xf1c <DIO_enuGetPinValue>
		if (Local_u8PinValue == 0)
    128a:	fe 01       	movw	r30, r28
    128c:	e5 54       	subi	r30, 0x45	; 69
    128e:	ff 4f       	sbci	r31, 0xFF	; 255
    1290:	80 81       	ld	r24, Z
    1292:	88 23       	and	r24, r24
    1294:	31 f4       	brne	.+12     	; 0x12a2 <main+0x58>
		{
			DIO_enuSetPinValue(DIO_u8_PORTC, DIO_u8_PIN4, DIO_u8_HIGH);
    1296:	82 e0       	ldi	r24, 0x02	; 2
    1298:	64 e0       	ldi	r22, 0x04	; 4
    129a:	41 e0       	ldi	r20, 0x01	; 1
    129c:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    12a0:	b8 c0       	rjmp	.+368    	; 0x1412 <main+0x1c8>
    12a2:	fe 01       	movw	r30, r28
    12a4:	ed 54       	subi	r30, 0x4D	; 77
    12a6:	ff 4f       	sbci	r31, 0xFF	; 255
    12a8:	80 e0       	ldi	r24, 0x00	; 0
    12aa:	90 e0       	ldi	r25, 0x00	; 0
    12ac:	aa e7       	ldi	r26, 0x7A	; 122
    12ae:	b4 e4       	ldi	r27, 0x44	; 68
    12b0:	80 83       	st	Z, r24
    12b2:	91 83       	std	Z+1, r25	; 0x01
    12b4:	a2 83       	std	Z+2, r26	; 0x02
    12b6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    12b8:	8e 01       	movw	r16, r28
    12ba:	01 55       	subi	r16, 0x51	; 81
    12bc:	1f 4f       	sbci	r17, 0xFF	; 255
    12be:	fe 01       	movw	r30, r28
    12c0:	ed 54       	subi	r30, 0x4D	; 77
    12c2:	ff 4f       	sbci	r31, 0xFF	; 255
    12c4:	60 81       	ld	r22, Z
    12c6:	71 81       	ldd	r23, Z+1	; 0x01
    12c8:	82 81       	ldd	r24, Z+2	; 0x02
    12ca:	93 81       	ldd	r25, Z+3	; 0x03
    12cc:	20 e0       	ldi	r18, 0x00	; 0
    12ce:	30 e0       	ldi	r19, 0x00	; 0
    12d0:	4a e7       	ldi	r20, 0x7A	; 122
    12d2:	55 e4       	ldi	r21, 0x45	; 69
    12d4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    12d8:	dc 01       	movw	r26, r24
    12da:	cb 01       	movw	r24, r22
    12dc:	f8 01       	movw	r30, r16
    12de:	80 83       	st	Z, r24
    12e0:	91 83       	std	Z+1, r25	; 0x01
    12e2:	a2 83       	std	Z+2, r26	; 0x02
    12e4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    12e6:	fe 01       	movw	r30, r28
    12e8:	e1 55       	subi	r30, 0x51	; 81
    12ea:	ff 4f       	sbci	r31, 0xFF	; 255
    12ec:	60 81       	ld	r22, Z
    12ee:	71 81       	ldd	r23, Z+1	; 0x01
    12f0:	82 81       	ldd	r24, Z+2	; 0x02
    12f2:	93 81       	ldd	r25, Z+3	; 0x03
    12f4:	20 e0       	ldi	r18, 0x00	; 0
    12f6:	30 e0       	ldi	r19, 0x00	; 0
    12f8:	40 e8       	ldi	r20, 0x80	; 128
    12fa:	5f e3       	ldi	r21, 0x3F	; 63
    12fc:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1300:	88 23       	and	r24, r24
    1302:	44 f4       	brge	.+16     	; 0x1314 <main+0xca>
		__ticks = 1;
    1304:	fe 01       	movw	r30, r28
    1306:	e3 55       	subi	r30, 0x53	; 83
    1308:	ff 4f       	sbci	r31, 0xFF	; 255
    130a:	81 e0       	ldi	r24, 0x01	; 1
    130c:	90 e0       	ldi	r25, 0x00	; 0
    130e:	91 83       	std	Z+1, r25	; 0x01
    1310:	80 83       	st	Z, r24
    1312:	64 c0       	rjmp	.+200    	; 0x13dc <main+0x192>
	else if (__tmp > 65535)
    1314:	fe 01       	movw	r30, r28
    1316:	e1 55       	subi	r30, 0x51	; 81
    1318:	ff 4f       	sbci	r31, 0xFF	; 255
    131a:	60 81       	ld	r22, Z
    131c:	71 81       	ldd	r23, Z+1	; 0x01
    131e:	82 81       	ldd	r24, Z+2	; 0x02
    1320:	93 81       	ldd	r25, Z+3	; 0x03
    1322:	20 e0       	ldi	r18, 0x00	; 0
    1324:	3f ef       	ldi	r19, 0xFF	; 255
    1326:	4f e7       	ldi	r20, 0x7F	; 127
    1328:	57 e4       	ldi	r21, 0x47	; 71
    132a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    132e:	18 16       	cp	r1, r24
    1330:	0c f0       	brlt	.+2      	; 0x1334 <main+0xea>
    1332:	43 c0       	rjmp	.+134    	; 0x13ba <main+0x170>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1334:	fe 01       	movw	r30, r28
    1336:	ed 54       	subi	r30, 0x4D	; 77
    1338:	ff 4f       	sbci	r31, 0xFF	; 255
    133a:	60 81       	ld	r22, Z
    133c:	71 81       	ldd	r23, Z+1	; 0x01
    133e:	82 81       	ldd	r24, Z+2	; 0x02
    1340:	93 81       	ldd	r25, Z+3	; 0x03
    1342:	20 e0       	ldi	r18, 0x00	; 0
    1344:	30 e0       	ldi	r19, 0x00	; 0
    1346:	40 e2       	ldi	r20, 0x20	; 32
    1348:	51 e4       	ldi	r21, 0x41	; 65
    134a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    134e:	dc 01       	movw	r26, r24
    1350:	cb 01       	movw	r24, r22
    1352:	8e 01       	movw	r16, r28
    1354:	03 55       	subi	r16, 0x53	; 83
    1356:	1f 4f       	sbci	r17, 0xFF	; 255
    1358:	bc 01       	movw	r22, r24
    135a:	cd 01       	movw	r24, r26
    135c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1360:	dc 01       	movw	r26, r24
    1362:	cb 01       	movw	r24, r22
    1364:	f8 01       	movw	r30, r16
    1366:	91 83       	std	Z+1, r25	; 0x01
    1368:	80 83       	st	Z, r24
    136a:	1f c0       	rjmp	.+62     	; 0x13aa <main+0x160>
    136c:	fe 01       	movw	r30, r28
    136e:	e5 55       	subi	r30, 0x55	; 85
    1370:	ff 4f       	sbci	r31, 0xFF	; 255
    1372:	80 e9       	ldi	r24, 0x90	; 144
    1374:	91 e0       	ldi	r25, 0x01	; 1
    1376:	91 83       	std	Z+1, r25	; 0x01
    1378:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    137a:	fe 01       	movw	r30, r28
    137c:	e5 55       	subi	r30, 0x55	; 85
    137e:	ff 4f       	sbci	r31, 0xFF	; 255
    1380:	80 81       	ld	r24, Z
    1382:	91 81       	ldd	r25, Z+1	; 0x01
    1384:	01 97       	sbiw	r24, 0x01	; 1
    1386:	f1 f7       	brne	.-4      	; 0x1384 <main+0x13a>
    1388:	fe 01       	movw	r30, r28
    138a:	e5 55       	subi	r30, 0x55	; 85
    138c:	ff 4f       	sbci	r31, 0xFF	; 255
    138e:	91 83       	std	Z+1, r25	; 0x01
    1390:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1392:	de 01       	movw	r26, r28
    1394:	a3 55       	subi	r26, 0x53	; 83
    1396:	bf 4f       	sbci	r27, 0xFF	; 255
    1398:	fe 01       	movw	r30, r28
    139a:	e3 55       	subi	r30, 0x53	; 83
    139c:	ff 4f       	sbci	r31, 0xFF	; 255
    139e:	80 81       	ld	r24, Z
    13a0:	91 81       	ldd	r25, Z+1	; 0x01
    13a2:	01 97       	sbiw	r24, 0x01	; 1
    13a4:	11 96       	adiw	r26, 0x01	; 1
    13a6:	9c 93       	st	X, r25
    13a8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    13aa:	fe 01       	movw	r30, r28
    13ac:	e3 55       	subi	r30, 0x53	; 83
    13ae:	ff 4f       	sbci	r31, 0xFF	; 255
    13b0:	80 81       	ld	r24, Z
    13b2:	91 81       	ldd	r25, Z+1	; 0x01
    13b4:	00 97       	sbiw	r24, 0x00	; 0
    13b6:	d1 f6       	brne	.-76     	; 0x136c <main+0x122>
    13b8:	27 c0       	rjmp	.+78     	; 0x1408 <main+0x1be>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    13ba:	8e 01       	movw	r16, r28
    13bc:	03 55       	subi	r16, 0x53	; 83
    13be:	1f 4f       	sbci	r17, 0xFF	; 255
    13c0:	fe 01       	movw	r30, r28
    13c2:	e1 55       	subi	r30, 0x51	; 81
    13c4:	ff 4f       	sbci	r31, 0xFF	; 255
    13c6:	60 81       	ld	r22, Z
    13c8:	71 81       	ldd	r23, Z+1	; 0x01
    13ca:	82 81       	ldd	r24, Z+2	; 0x02
    13cc:	93 81       	ldd	r25, Z+3	; 0x03
    13ce:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    13d2:	dc 01       	movw	r26, r24
    13d4:	cb 01       	movw	r24, r22
    13d6:	f8 01       	movw	r30, r16
    13d8:	91 83       	std	Z+1, r25	; 0x01
    13da:	80 83       	st	Z, r24
    13dc:	de 01       	movw	r26, r28
    13de:	a7 55       	subi	r26, 0x57	; 87
    13e0:	bf 4f       	sbci	r27, 0xFF	; 255
    13e2:	fe 01       	movw	r30, r28
    13e4:	e3 55       	subi	r30, 0x53	; 83
    13e6:	ff 4f       	sbci	r31, 0xFF	; 255
    13e8:	80 81       	ld	r24, Z
    13ea:	91 81       	ldd	r25, Z+1	; 0x01
    13ec:	8d 93       	st	X+, r24
    13ee:	9c 93       	st	X, r25
    13f0:	fe 01       	movw	r30, r28
    13f2:	e7 55       	subi	r30, 0x57	; 87
    13f4:	ff 4f       	sbci	r31, 0xFF	; 255
    13f6:	80 81       	ld	r24, Z
    13f8:	91 81       	ldd	r25, Z+1	; 0x01
    13fa:	01 97       	sbiw	r24, 0x01	; 1
    13fc:	f1 f7       	brne	.-4      	; 0x13fa <main+0x1b0>
    13fe:	fe 01       	movw	r30, r28
    1400:	e7 55       	subi	r30, 0x57	; 87
    1402:	ff 4f       	sbci	r31, 0xFF	; 255
    1404:	91 83       	std	Z+1, r25	; 0x01
    1406:	80 83       	st	Z, r24
		}
		else
		{
			_delay_ms(1000);
			DIO_enuSetPinValue(DIO_u8_PORTC, DIO_u8_PIN4, DIO_u8_LOW);
    1408:	82 e0       	ldi	r24, 0x02	; 2
    140a:	64 e0       	ldi	r22, 0x04	; 4
    140c:	40 e0       	ldi	r20, 0x00	; 0
    140e:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
		}
		//===========================================================================================================
		// check LDR for entrance lights control
		ADC_enuReadValuePolling(&Local_u16ADCReadValue);
    1412:	ce 01       	movw	r24, r28
    1414:	83 54       	subi	r24, 0x43	; 67
    1416:	9f 4f       	sbci	r25, 0xFF	; 255
    1418:	0e 94 ef 08 	call	0x11de	; 0x11de <ADC_enuReadValuePolling>
		if (Local_u16ADCReadValue > 200)
    141c:	fe 01       	movw	r30, r28
    141e:	e3 54       	subi	r30, 0x43	; 67
    1420:	ff 4f       	sbci	r31, 0xFF	; 255
    1422:	80 81       	ld	r24, Z
    1424:	91 81       	ldd	r25, Z+1	; 0x01
    1426:	89 3c       	cpi	r24, 0xC9	; 201
    1428:	91 05       	cpc	r25, r1
    142a:	30 f0       	brcs	.+12     	; 0x1438 <main+0x1ee>
		{
			DIO_enuSetPinValue(DIO_u8_PORTC, DIO_u8_PIN6, DIO_u8_HIGH);
    142c:	82 e0       	ldi	r24, 0x02	; 2
    142e:	66 e0       	ldi	r22, 0x06	; 6
    1430:	41 e0       	ldi	r20, 0x01	; 1
    1432:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    1436:	05 c0       	rjmp	.+10     	; 0x1442 <main+0x1f8>
		}
		else
		{
			DIO_enuSetPinValue(DIO_u8_PORTC, DIO_u8_PIN6, DIO_u8_LOW);
    1438:	82 e0       	ldi	r24, 0x02	; 2
    143a:	66 e0       	ldi	r22, 0x06	; 6
    143c:	40 e0       	ldi	r20, 0x00	; 0
    143e:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
		}
		//===========================================================================================================
		// Recieve instruction from master
		SPI_enuTranscieveAsynch(&Local_u8SPI_Messege);
    1442:	ce 01       	movw	r24, r28
    1444:	86 54       	subi	r24, 0x46	; 70
    1446:	9f 4f       	sbci	r25, 0xFF	; 255
    1448:	0e 94 e8 05 	call	0xbd0	; 0xbd0 <SPI_enuTranscieveAsynch>
		// CHECK FOR NEW INSTRUCTIONS
		if (SPI_u8RecievedValue() != Local_u8SPI_PREVIOUSMessege)
    144c:	0e 94 20 06 	call	0xc40	; 0xc40 <SPI_u8RecievedValue>
    1450:	98 2f       	mov	r25, r24
    1452:	fe 01       	movw	r30, r28
    1454:	e7 54       	subi	r30, 0x47	; 71
    1456:	ff 4f       	sbci	r31, 0xFF	; 255
    1458:	80 81       	ld	r24, Z
    145a:	98 17       	cp	r25, r24
    145c:	09 f4       	brne	.+2      	; 0x1460 <main+0x216>
    145e:	0d cf       	rjmp	.-486    	; 0x127a <main+0x30>
		{
			// CHECK FOR COMING INSTRUCTION AND EXCUTE IT
			switch (SPI_u8RecievedValue())
    1460:	0e 94 20 06 	call	0xc40	; 0xc40 <SPI_u8RecievedValue>
    1464:	28 2f       	mov	r18, r24
    1466:	30 e0       	ldi	r19, 0x00	; 0
    1468:	c1 54       	subi	r28, 0x41	; 65
    146a:	df 4f       	sbci	r29, 0xFF	; 255
    146c:	39 83       	std	Y+1, r19	; 0x01
    146e:	28 83       	st	Y, r18
    1470:	cf 5b       	subi	r28, 0xBF	; 191
    1472:	d0 40       	sbci	r29, 0x00	; 0
    1474:	c1 54       	subi	r28, 0x41	; 65
    1476:	df 4f       	sbci	r29, 0xFF	; 255
    1478:	88 81       	ld	r24, Y
    147a:	99 81       	ldd	r25, Y+1	; 0x01
    147c:	cf 5b       	subi	r28, 0xBF	; 191
    147e:	d0 40       	sbci	r29, 0x00	; 0
    1480:	82 31       	cpi	r24, 0x12	; 18
    1482:	91 05       	cpc	r25, r1
    1484:	09 f4       	brne	.+2      	; 0x1488 <main+0x23e>
    1486:	7e c7       	rjmp	.+3836   	; 0x2384 <main+0x113a>
    1488:	c1 54       	subi	r28, 0x41	; 65
    148a:	df 4f       	sbci	r29, 0xFF	; 255
    148c:	e8 81       	ld	r30, Y
    148e:	f9 81       	ldd	r31, Y+1	; 0x01
    1490:	cf 5b       	subi	r28, 0xBF	; 191
    1492:	d0 40       	sbci	r29, 0x00	; 0
    1494:	e3 31       	cpi	r30, 0x13	; 19
    1496:	f1 05       	cpc	r31, r1
    1498:	0c f0       	brlt	.+2      	; 0x149c <main+0x252>
    149a:	a4 c0       	rjmp	.+328    	; 0x15e4 <main+0x39a>
    149c:	c1 54       	subi	r28, 0x41	; 65
    149e:	df 4f       	sbci	r29, 0xFF	; 255
    14a0:	28 81       	ld	r18, Y
    14a2:	39 81       	ldd	r19, Y+1	; 0x01
    14a4:	cf 5b       	subi	r28, 0xBF	; 191
    14a6:	d0 40       	sbci	r29, 0x00	; 0
    14a8:	28 30       	cpi	r18, 0x08	; 8
    14aa:	31 05       	cpc	r19, r1
    14ac:	09 f4       	brne	.+2      	; 0x14b0 <main+0x266>
    14ae:	f8 c5       	rjmp	.+3056   	; 0x20a0 <main+0xe56>
    14b0:	c1 54       	subi	r28, 0x41	; 65
    14b2:	df 4f       	sbci	r29, 0xFF	; 255
    14b4:	88 81       	ld	r24, Y
    14b6:	99 81       	ldd	r25, Y+1	; 0x01
    14b8:	cf 5b       	subi	r28, 0xBF	; 191
    14ba:	d0 40       	sbci	r29, 0x00	; 0
    14bc:	89 30       	cpi	r24, 0x09	; 9
    14be:	91 05       	cpc	r25, r1
    14c0:	0c f0       	brlt	.+2      	; 0x14c4 <main+0x27a>
    14c2:	48 c0       	rjmp	.+144    	; 0x1554 <main+0x30a>
    14c4:	c1 54       	subi	r28, 0x41	; 65
    14c6:	df 4f       	sbci	r29, 0xFF	; 255
    14c8:	e8 81       	ld	r30, Y
    14ca:	f9 81       	ldd	r31, Y+1	; 0x01
    14cc:	cf 5b       	subi	r28, 0xBF	; 191
    14ce:	d0 40       	sbci	r29, 0x00	; 0
    14d0:	e4 30       	cpi	r30, 0x04	; 4
    14d2:	f1 05       	cpc	r31, r1
    14d4:	09 f4       	brne	.+2      	; 0x14d8 <main+0x28e>
    14d6:	5c c4       	rjmp	.+2232   	; 0x1d90 <main+0xb46>
    14d8:	c1 54       	subi	r28, 0x41	; 65
    14da:	df 4f       	sbci	r29, 0xFF	; 255
    14dc:	28 81       	ld	r18, Y
    14de:	39 81       	ldd	r19, Y+1	; 0x01
    14e0:	cf 5b       	subi	r28, 0xBF	; 191
    14e2:	d0 40       	sbci	r29, 0x00	; 0
    14e4:	25 30       	cpi	r18, 0x05	; 5
    14e6:	31 05       	cpc	r19, r1
    14e8:	04 f5       	brge	.+64     	; 0x152a <main+0x2e0>
    14ea:	c1 54       	subi	r28, 0x41	; 65
    14ec:	df 4f       	sbci	r29, 0xFF	; 255
    14ee:	88 81       	ld	r24, Y
    14f0:	99 81       	ldd	r25, Y+1	; 0x01
    14f2:	cf 5b       	subi	r28, 0xBF	; 191
    14f4:	d0 40       	sbci	r29, 0x00	; 0
    14f6:	82 30       	cpi	r24, 0x02	; 2
    14f8:	91 05       	cpc	r25, r1
    14fa:	09 f4       	brne	.+2      	; 0x14fe <main+0x2b4>
    14fc:	cd c2       	rjmp	.+1434   	; 0x1a98 <main+0x84e>
    14fe:	c1 54       	subi	r28, 0x41	; 65
    1500:	df 4f       	sbci	r29, 0xFF	; 255
    1502:	e8 81       	ld	r30, Y
    1504:	f9 81       	ldd	r31, Y+1	; 0x01
    1506:	cf 5b       	subi	r28, 0xBF	; 191
    1508:	d0 40       	sbci	r29, 0x00	; 0
    150a:	e3 30       	cpi	r30, 0x03	; 3
    150c:	f1 05       	cpc	r31, r1
    150e:	0c f0       	brlt	.+2      	; 0x1512 <main+0x2c8>
    1510:	81 c3       	rjmp	.+1794   	; 0x1c14 <main+0x9ca>
    1512:	c1 54       	subi	r28, 0x41	; 65
    1514:	df 4f       	sbci	r29, 0xFF	; 255
    1516:	28 81       	ld	r18, Y
    1518:	39 81       	ldd	r19, Y+1	; 0x01
    151a:	cf 5b       	subi	r28, 0xBF	; 191
    151c:	d0 40       	sbci	r29, 0x00	; 0
    151e:	21 30       	cpi	r18, 0x01	; 1
    1520:	31 05       	cpc	r19, r1
    1522:	09 f4       	brne	.+2      	; 0x1526 <main+0x2dc>
    1524:	fb c1       	rjmp	.+1014   	; 0x191c <main+0x6d2>
    1526:	0c 94 f1 13 	jmp	0x27e2	; 0x27e2 <main+0x1598>
    152a:	c1 54       	subi	r28, 0x41	; 65
    152c:	df 4f       	sbci	r29, 0xFF	; 255
    152e:	88 81       	ld	r24, Y
    1530:	99 81       	ldd	r25, Y+1	; 0x01
    1532:	cf 5b       	subi	r28, 0xBF	; 191
    1534:	d0 40       	sbci	r29, 0x00	; 0
    1536:	86 30       	cpi	r24, 0x06	; 6
    1538:	91 05       	cpc	r25, r1
    153a:	09 f4       	brne	.+2      	; 0x153e <main+0x2f4>
    153c:	a5 c5       	rjmp	.+2890   	; 0x2088 <main+0xe3e>
    153e:	c1 54       	subi	r28, 0x41	; 65
    1540:	df 4f       	sbci	r29, 0xFF	; 255
    1542:	e8 81       	ld	r30, Y
    1544:	f9 81       	ldd	r31, Y+1	; 0x01
    1546:	cf 5b       	subi	r28, 0xBF	; 191
    1548:	d0 40       	sbci	r29, 0x00	; 0
    154a:	e7 30       	cpi	r30, 0x07	; 7
    154c:	f1 05       	cpc	r31, r1
    154e:	0c f0       	brlt	.+2      	; 0x1552 <main+0x308>
    1550:	a1 c5       	rjmp	.+2882   	; 0x2094 <main+0xe4a>
    1552:	dc c4       	rjmp	.+2488   	; 0x1f0c <main+0xcc2>
    1554:	c1 54       	subi	r28, 0x41	; 65
    1556:	df 4f       	sbci	r29, 0xFF	; 255
    1558:	28 81       	ld	r18, Y
    155a:	39 81       	ldd	r19, Y+1	; 0x01
    155c:	cf 5b       	subi	r28, 0xBF	; 191
    155e:	d0 40       	sbci	r29, 0x00	; 0
    1560:	2e 30       	cpi	r18, 0x0E	; 14
    1562:	31 05       	cpc	r19, r1
    1564:	09 f4       	brne	.+2      	; 0x1568 <main+0x31e>
    1566:	b4 c5       	rjmp	.+2920   	; 0x20d0 <main+0xe86>
    1568:	c1 54       	subi	r28, 0x41	; 65
    156a:	df 4f       	sbci	r29, 0xFF	; 255
    156c:	88 81       	ld	r24, Y
    156e:	99 81       	ldd	r25, Y+1	; 0x01
    1570:	cf 5b       	subi	r28, 0xBF	; 191
    1572:	d0 40       	sbci	r29, 0x00	; 0
    1574:	8f 30       	cpi	r24, 0x0F	; 15
    1576:	91 05       	cpc	r25, r1
    1578:	04 f5       	brge	.+64     	; 0x15ba <main+0x370>
    157a:	c1 54       	subi	r28, 0x41	; 65
    157c:	df 4f       	sbci	r29, 0xFF	; 255
    157e:	e8 81       	ld	r30, Y
    1580:	f9 81       	ldd	r31, Y+1	; 0x01
    1582:	cf 5b       	subi	r28, 0xBF	; 191
    1584:	d0 40       	sbci	r29, 0x00	; 0
    1586:	ec 30       	cpi	r30, 0x0C	; 12
    1588:	f1 05       	cpc	r31, r1
    158a:	09 f4       	brne	.+2      	; 0x158e <main+0x344>
    158c:	95 c5       	rjmp	.+2858   	; 0x20b8 <main+0xe6e>
    158e:	c1 54       	subi	r28, 0x41	; 65
    1590:	df 4f       	sbci	r29, 0xFF	; 255
    1592:	28 81       	ld	r18, Y
    1594:	39 81       	ldd	r19, Y+1	; 0x01
    1596:	cf 5b       	subi	r28, 0xBF	; 191
    1598:	d0 40       	sbci	r29, 0x00	; 0
    159a:	2d 30       	cpi	r18, 0x0D	; 13
    159c:	31 05       	cpc	r19, r1
    159e:	0c f0       	brlt	.+2      	; 0x15a2 <main+0x358>
    15a0:	91 c5       	rjmp	.+2850   	; 0x20c4 <main+0xe7a>
    15a2:	c1 54       	subi	r28, 0x41	; 65
    15a4:	df 4f       	sbci	r29, 0xFF	; 255
    15a6:	88 81       	ld	r24, Y
    15a8:	99 81       	ldd	r25, Y+1	; 0x01
    15aa:	cf 5b       	subi	r28, 0xBF	; 191
    15ac:	d0 40       	sbci	r29, 0x00	; 0
    15ae:	89 30       	cpi	r24, 0x09	; 9
    15b0:	91 05       	cpc	r25, r1
    15b2:	09 f4       	brne	.+2      	; 0x15b6 <main+0x36c>
    15b4:	7b c5       	rjmp	.+2806   	; 0x20ac <main+0xe62>
    15b6:	0c 94 f1 13 	jmp	0x27e2	; 0x27e2 <main+0x1598>
    15ba:	c1 54       	subi	r28, 0x41	; 65
    15bc:	df 4f       	sbci	r29, 0xFF	; 255
    15be:	e8 81       	ld	r30, Y
    15c0:	f9 81       	ldd	r31, Y+1	; 0x01
    15c2:	cf 5b       	subi	r28, 0xBF	; 191
    15c4:	d0 40       	sbci	r29, 0x00	; 0
    15c6:	e0 31       	cpi	r30, 0x10	; 16
    15c8:	f1 05       	cpc	r31, r1
    15ca:	09 f4       	brne	.+2      	; 0x15ce <main+0x384>
    15cc:	cf c6       	rjmp	.+3486   	; 0x236c <main+0x1122>
    15ce:	c1 54       	subi	r28, 0x41	; 65
    15d0:	df 4f       	sbci	r29, 0xFF	; 255
    15d2:	28 81       	ld	r18, Y
    15d4:	39 81       	ldd	r19, Y+1	; 0x01
    15d6:	cf 5b       	subi	r28, 0xBF	; 191
    15d8:	d0 40       	sbci	r29, 0x00	; 0
    15da:	21 31       	cpi	r18, 0x11	; 17
    15dc:	31 05       	cpc	r19, r1
    15de:	0c f0       	brlt	.+2      	; 0x15e2 <main+0x398>
    15e0:	cb c6       	rjmp	.+3478   	; 0x2378 <main+0x112e>
    15e2:	34 c6       	rjmp	.+3176   	; 0x224c <main+0x1002>
    15e4:	c1 54       	subi	r28, 0x41	; 65
    15e6:	df 4f       	sbci	r29, 0xFF	; 255
    15e8:	88 81       	ld	r24, Y
    15ea:	99 81       	ldd	r25, Y+1	; 0x01
    15ec:	cf 5b       	subi	r28, 0xBF	; 191
    15ee:	d0 40       	sbci	r29, 0x00	; 0
    15f0:	8c 31       	cpi	r24, 0x1C	; 28
    15f2:	91 05       	cpc	r25, r1
    15f4:	11 f4       	brne	.+4      	; 0x15fa <main+0x3b0>
    15f6:	0c 94 e0 12 	jmp	0x25c0	; 0x25c0 <main+0x1376>
    15fa:	c1 54       	subi	r28, 0x41	; 65
    15fc:	df 4f       	sbci	r29, 0xFF	; 255
    15fe:	e8 81       	ld	r30, Y
    1600:	f9 81       	ldd	r31, Y+1	; 0x01
    1602:	cf 5b       	subi	r28, 0xBF	; 191
    1604:	d0 40       	sbci	r29, 0x00	; 0
    1606:	ed 31       	cpi	r30, 0x1D	; 29
    1608:	f1 05       	cpc	r31, r1
    160a:	0c f0       	brlt	.+2      	; 0x160e <main+0x3c4>
    160c:	48 c0       	rjmp	.+144    	; 0x169e <main+0x454>
    160e:	c1 54       	subi	r28, 0x41	; 65
    1610:	df 4f       	sbci	r29, 0xFF	; 255
    1612:	28 81       	ld	r18, Y
    1614:	39 81       	ldd	r19, Y+1	; 0x01
    1616:	cf 5b       	subi	r28, 0xBF	; 191
    1618:	d0 40       	sbci	r29, 0x00	; 0
    161a:	28 31       	cpi	r18, 0x18	; 24
    161c:	31 05       	cpc	r19, r1
    161e:	09 f4       	brne	.+2      	; 0x1622 <main+0x3d8>
    1620:	c9 c6       	rjmp	.+3474   	; 0x23b4 <main+0x116a>
    1622:	c1 54       	subi	r28, 0x41	; 65
    1624:	df 4f       	sbci	r29, 0xFF	; 255
    1626:	88 81       	ld	r24, Y
    1628:	99 81       	ldd	r25, Y+1	; 0x01
    162a:	cf 5b       	subi	r28, 0xBF	; 191
    162c:	d0 40       	sbci	r29, 0x00	; 0
    162e:	89 31       	cpi	r24, 0x19	; 25
    1630:	91 05       	cpc	r25, r1
    1632:	04 f5       	brge	.+64     	; 0x1674 <main+0x42a>
    1634:	c1 54       	subi	r28, 0x41	; 65
    1636:	df 4f       	sbci	r29, 0xFF	; 255
    1638:	e8 81       	ld	r30, Y
    163a:	f9 81       	ldd	r31, Y+1	; 0x01
    163c:	cf 5b       	subi	r28, 0xBF	; 191
    163e:	d0 40       	sbci	r29, 0x00	; 0
    1640:	e6 31       	cpi	r30, 0x16	; 22
    1642:	f1 05       	cpc	r31, r1
    1644:	09 f4       	brne	.+2      	; 0x1648 <main+0x3fe>
    1646:	aa c6       	rjmp	.+3412   	; 0x239c <main+0x1152>
    1648:	c1 54       	subi	r28, 0x41	; 65
    164a:	df 4f       	sbci	r29, 0xFF	; 255
    164c:	28 81       	ld	r18, Y
    164e:	39 81       	ldd	r19, Y+1	; 0x01
    1650:	cf 5b       	subi	r28, 0xBF	; 191
    1652:	d0 40       	sbci	r29, 0x00	; 0
    1654:	27 31       	cpi	r18, 0x17	; 23
    1656:	31 05       	cpc	r19, r1
    1658:	0c f0       	brlt	.+2      	; 0x165c <main+0x412>
    165a:	a6 c6       	rjmp	.+3404   	; 0x23a8 <main+0x115e>
    165c:	c1 54       	subi	r28, 0x41	; 65
    165e:	df 4f       	sbci	r29, 0xFF	; 255
    1660:	88 81       	ld	r24, Y
    1662:	99 81       	ldd	r25, Y+1	; 0x01
    1664:	cf 5b       	subi	r28, 0xBF	; 191
    1666:	d0 40       	sbci	r29, 0x00	; 0
    1668:	83 31       	cpi	r24, 0x13	; 19
    166a:	91 05       	cpc	r25, r1
    166c:	09 f4       	brne	.+2      	; 0x1670 <main+0x426>
    166e:	90 c6       	rjmp	.+3360   	; 0x2390 <main+0x1146>
    1670:	0c 94 f1 13 	jmp	0x27e2	; 0x27e2 <main+0x1598>
    1674:	c1 54       	subi	r28, 0x41	; 65
    1676:	df 4f       	sbci	r29, 0xFF	; 255
    1678:	e8 81       	ld	r30, Y
    167a:	f9 81       	ldd	r31, Y+1	; 0x01
    167c:	cf 5b       	subi	r28, 0xBF	; 191
    167e:	d0 40       	sbci	r29, 0x00	; 0
    1680:	ea 31       	cpi	r30, 0x1A	; 26
    1682:	f1 05       	cpc	r31, r1
    1684:	09 f4       	brne	.+2      	; 0x1688 <main+0x43e>
    1686:	90 c7       	rjmp	.+3872   	; 0x25a8 <main+0x135e>
    1688:	c1 54       	subi	r28, 0x41	; 65
    168a:	df 4f       	sbci	r29, 0xFF	; 255
    168c:	28 81       	ld	r18, Y
    168e:	39 81       	ldd	r19, Y+1	; 0x01
    1690:	cf 5b       	subi	r28, 0xBF	; 191
    1692:	d0 40       	sbci	r29, 0x00	; 0
    1694:	2b 31       	cpi	r18, 0x1B	; 27
    1696:	31 05       	cpc	r19, r1
    1698:	0c f0       	brlt	.+2      	; 0x169c <main+0x452>
    169a:	8c c7       	rjmp	.+3864   	; 0x25b4 <main+0x136a>
    169c:	08 c7       	rjmp	.+3600   	; 0x24ae <main+0x1264>
    169e:	c1 54       	subi	r28, 0x41	; 65
    16a0:	df 4f       	sbci	r29, 0xFF	; 255
    16a2:	88 81       	ld	r24, Y
    16a4:	99 81       	ldd	r25, Y+1	; 0x01
    16a6:	cf 5b       	subi	r28, 0xBF	; 191
    16a8:	d0 40       	sbci	r29, 0x00	; 0
    16aa:	82 32       	cpi	r24, 0x22	; 34
    16ac:	91 05       	cpc	r25, r1
    16ae:	09 f4       	brne	.+2      	; 0x16b2 <main+0x468>
    16b0:	9f c7       	rjmp	.+3902   	; 0x25f0 <main+0x13a6>
    16b2:	c1 54       	subi	r28, 0x41	; 65
    16b4:	df 4f       	sbci	r29, 0xFF	; 255
    16b6:	e8 81       	ld	r30, Y
    16b8:	f9 81       	ldd	r31, Y+1	; 0x01
    16ba:	cf 5b       	subi	r28, 0xBF	; 191
    16bc:	d0 40       	sbci	r29, 0x00	; 0
    16be:	e3 32       	cpi	r30, 0x23	; 35
    16c0:	f1 05       	cpc	r31, r1
    16c2:	04 f5       	brge	.+64     	; 0x1704 <main+0x4ba>
    16c4:	c1 54       	subi	r28, 0x41	; 65
    16c6:	df 4f       	sbci	r29, 0xFF	; 255
    16c8:	28 81       	ld	r18, Y
    16ca:	39 81       	ldd	r19, Y+1	; 0x01
    16cc:	cf 5b       	subi	r28, 0xBF	; 191
    16ce:	d0 40       	sbci	r29, 0x00	; 0
    16d0:	20 32       	cpi	r18, 0x20	; 32
    16d2:	31 05       	cpc	r19, r1
    16d4:	09 f4       	brne	.+2      	; 0x16d8 <main+0x48e>
    16d6:	80 c7       	rjmp	.+3840   	; 0x25d8 <main+0x138e>
    16d8:	c1 54       	subi	r28, 0x41	; 65
    16da:	df 4f       	sbci	r29, 0xFF	; 255
    16dc:	88 81       	ld	r24, Y
    16de:	99 81       	ldd	r25, Y+1	; 0x01
    16e0:	cf 5b       	subi	r28, 0xBF	; 191
    16e2:	d0 40       	sbci	r29, 0x00	; 0
    16e4:	81 32       	cpi	r24, 0x21	; 33
    16e6:	91 05       	cpc	r25, r1
    16e8:	0c f0       	brlt	.+2      	; 0x16ec <main+0x4a2>
    16ea:	7c c7       	rjmp	.+3832   	; 0x25e4 <main+0x139a>
    16ec:	c1 54       	subi	r28, 0x41	; 65
    16ee:	df 4f       	sbci	r29, 0xFF	; 255
    16f0:	e8 81       	ld	r30, Y
    16f2:	f9 81       	ldd	r31, Y+1	; 0x01
    16f4:	cf 5b       	subi	r28, 0xBF	; 191
    16f6:	d0 40       	sbci	r29, 0x00	; 0
    16f8:	ed 31       	cpi	r30, 0x1D	; 29
    16fa:	f1 05       	cpc	r31, r1
    16fc:	09 f4       	brne	.+2      	; 0x1700 <main+0x4b6>
    16fe:	66 c7       	rjmp	.+3788   	; 0x25cc <main+0x1382>
    1700:	0c 94 f1 13 	jmp	0x27e2	; 0x27e2 <main+0x1598>
    1704:	c1 54       	subi	r28, 0x41	; 65
    1706:	df 4f       	sbci	r29, 0xFF	; 255
    1708:	28 81       	ld	r18, Y
    170a:	39 81       	ldd	r19, Y+1	; 0x01
    170c:	cf 5b       	subi	r28, 0xBF	; 191
    170e:	d0 40       	sbci	r29, 0x00	; 0
    1710:	28 32       	cpi	r18, 0x28	; 40
    1712:	31 05       	cpc	r19, r1
    1714:	09 f4       	brne	.+2      	; 0x1718 <main+0x4ce>
    1716:	43 c0       	rjmp	.+134    	; 0x179e <main+0x554>
    1718:	c1 54       	subi	r28, 0x41	; 65
    171a:	df 4f       	sbci	r29, 0xFF	; 255
    171c:	88 81       	ld	r24, Y
    171e:	99 81       	ldd	r25, Y+1	; 0x01
    1720:	cf 5b       	subi	r28, 0xBF	; 191
    1722:	d0 40       	sbci	r29, 0x00	; 0
    1724:	87 33       	cpi	r24, 0x37	; 55
    1726:	91 05       	cpc	r25, r1
    1728:	71 f1       	breq	.+92     	; 0x1786 <main+0x53c>
    172a:	c1 54       	subi	r28, 0x41	; 65
    172c:	df 4f       	sbci	r29, 0xFF	; 255
    172e:	e8 81       	ld	r30, Y
    1730:	f9 81       	ldd	r31, Y+1	; 0x01
    1732:	cf 5b       	subi	r28, 0xBF	; 191
    1734:	d0 40       	sbci	r29, 0x00	; 0
    1736:	e3 32       	cpi	r30, 0x23	; 35
    1738:	f1 05       	cpc	r31, r1
    173a:	11 f4       	brne	.+4      	; 0x1740 <main+0x4f6>
    173c:	0c 94 75 13 	jmp	0x26ea	; 0x26ea <main+0x14a0>
    1740:	0c 94 f1 13 	jmp	0x27e2	; 0x27e2 <main+0x1598>
			//==================KITCHEN=========================
			//===============WaitForOven======================
			case 55:
				while (Local_u8ExitFlag == 0)
				{
					DIO_enuGetPinValue(DIO_u8_PORTD, DIO_u8_PIN1, &Local_u8PinValue1);
    1744:	9e 01       	movw	r18, r28
    1746:	24 54       	subi	r18, 0x44	; 68
    1748:	3f 4f       	sbci	r19, 0xFF	; 255
    174a:	83 e0       	ldi	r24, 0x03	; 3
    174c:	61 e0       	ldi	r22, 0x01	; 1
    174e:	a9 01       	movw	r20, r18
    1750:	0e 94 8e 07 	call	0xf1c	; 0xf1c <DIO_enuGetPinValue>
					if (Local_u8PinValue1 == 0)
    1754:	fe 01       	movw	r30, r28
    1756:	e4 54       	subi	r30, 0x44	; 68
    1758:	ff 4f       	sbci	r31, 0xFF	; 255
    175a:	80 81       	ld	r24, Z
    175c:	88 23       	and	r24, r24
    175e:	99 f4       	brne	.+38     	; 0x1786 <main+0x53c>
					{
						Local_u8SPI_Messege = 36;
    1760:	fe 01       	movw	r30, r28
    1762:	e6 54       	subi	r30, 0x46	; 70
    1764:	ff 4f       	sbci	r31, 0xFF	; 255
    1766:	84 e2       	ldi	r24, 0x24	; 36
    1768:	80 83       	st	Z, r24
						SPI_enuTranscieveAsynch(&Local_u8SPI_Messege);
    176a:	ce 01       	movw	r24, r28
    176c:	86 54       	subi	r24, 0x46	; 70
    176e:	9f 4f       	sbci	r25, 0xFF	; 255
    1770:	0e 94 e8 05 	call	0xbd0	; 0xbd0 <SPI_enuTranscieveAsynch>
						Local_u8ExitFlag++;
    1774:	de 01       	movw	r26, r28
    1776:	a9 54       	subi	r26, 0x49	; 73
    1778:	bf 4f       	sbci	r27, 0xFF	; 255
    177a:	fe 01       	movw	r30, r28
    177c:	e9 54       	subi	r30, 0x49	; 73
    177e:	ff 4f       	sbci	r31, 0xFF	; 255
    1780:	80 81       	ld	r24, Z
    1782:	8f 5f       	subi	r24, 0xFF	; 255
    1784:	8c 93       	st	X, r24
			switch (SPI_u8RecievedValue())
			{
			//==================KITCHEN=========================
			//===============WaitForOven======================
			case 55:
				while (Local_u8ExitFlag == 0)
    1786:	fe 01       	movw	r30, r28
    1788:	e9 54       	subi	r30, 0x49	; 73
    178a:	ff 4f       	sbci	r31, 0xFF	; 255
    178c:	80 81       	ld	r24, Z
    178e:	88 23       	and	r24, r24
    1790:	c9 f2       	breq	.-78     	; 0x1744 <main+0x4fa>
						Local_u8SPI_Messege = 36;
						SPI_enuTranscieveAsynch(&Local_u8SPI_Messege);
						Local_u8ExitFlag++;
					}
				}
				Local_u8ExitFlag = 0;
    1792:	fe 01       	movw	r30, r28
    1794:	e9 54       	subi	r30, 0x49	; 73
    1796:	ff 4f       	sbci	r31, 0xFF	; 255
    1798:	10 82       	st	Z, r1
    179a:	0c 94 f1 13 	jmp	0x27e2	; 0x27e2 <main+0x1598>
				break;
				//=================================DOORS=========================================
				//=============Open DOOR=================
				//=========ROOM 1 DOOR===============
			case 40:
				DIO_enuSetPinValue(DIO_u8_PORTC, DIO_u8_PIN7, DIO_u8_HIGH);
    179e:	82 e0       	ldi	r24, 0x02	; 2
    17a0:	67 e0       	ldi	r22, 0x07	; 7
    17a2:	41 e0       	ldi	r20, 0x01	; 1
    17a4:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    17a8:	fe 01       	movw	r30, r28
    17aa:	eb 55       	subi	r30, 0x5B	; 91
    17ac:	ff 4f       	sbci	r31, 0xFF	; 255
    17ae:	80 e0       	ldi	r24, 0x00	; 0
    17b0:	90 e8       	ldi	r25, 0x80	; 128
    17b2:	ab eb       	ldi	r26, 0xBB	; 187
    17b4:	b4 e4       	ldi	r27, 0x44	; 68
    17b6:	80 83       	st	Z, r24
    17b8:	91 83       	std	Z+1, r25	; 0x01
    17ba:	a2 83       	std	Z+2, r26	; 0x02
    17bc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    17be:	8e 01       	movw	r16, r28
    17c0:	0f 55       	subi	r16, 0x5F	; 95
    17c2:	1f 4f       	sbci	r17, 0xFF	; 255
    17c4:	fe 01       	movw	r30, r28
    17c6:	eb 55       	subi	r30, 0x5B	; 91
    17c8:	ff 4f       	sbci	r31, 0xFF	; 255
    17ca:	60 81       	ld	r22, Z
    17cc:	71 81       	ldd	r23, Z+1	; 0x01
    17ce:	82 81       	ldd	r24, Z+2	; 0x02
    17d0:	93 81       	ldd	r25, Z+3	; 0x03
    17d2:	20 e0       	ldi	r18, 0x00	; 0
    17d4:	30 e0       	ldi	r19, 0x00	; 0
    17d6:	4a e7       	ldi	r20, 0x7A	; 122
    17d8:	55 e4       	ldi	r21, 0x45	; 69
    17da:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    17de:	dc 01       	movw	r26, r24
    17e0:	cb 01       	movw	r24, r22
    17e2:	f8 01       	movw	r30, r16
    17e4:	80 83       	st	Z, r24
    17e6:	91 83       	std	Z+1, r25	; 0x01
    17e8:	a2 83       	std	Z+2, r26	; 0x02
    17ea:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    17ec:	fe 01       	movw	r30, r28
    17ee:	ef 55       	subi	r30, 0x5F	; 95
    17f0:	ff 4f       	sbci	r31, 0xFF	; 255
    17f2:	60 81       	ld	r22, Z
    17f4:	71 81       	ldd	r23, Z+1	; 0x01
    17f6:	82 81       	ldd	r24, Z+2	; 0x02
    17f8:	93 81       	ldd	r25, Z+3	; 0x03
    17fa:	20 e0       	ldi	r18, 0x00	; 0
    17fc:	30 e0       	ldi	r19, 0x00	; 0
    17fe:	40 e8       	ldi	r20, 0x80	; 128
    1800:	5f e3       	ldi	r21, 0x3F	; 63
    1802:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1806:	88 23       	and	r24, r24
    1808:	44 f4       	brge	.+16     	; 0x181a <main+0x5d0>
		__ticks = 1;
    180a:	fe 01       	movw	r30, r28
    180c:	e1 56       	subi	r30, 0x61	; 97
    180e:	ff 4f       	sbci	r31, 0xFF	; 255
    1810:	81 e0       	ldi	r24, 0x01	; 1
    1812:	90 e0       	ldi	r25, 0x00	; 0
    1814:	91 83       	std	Z+1, r25	; 0x01
    1816:	80 83       	st	Z, r24
    1818:	64 c0       	rjmp	.+200    	; 0x18e2 <main+0x698>
	else if (__tmp > 65535)
    181a:	fe 01       	movw	r30, r28
    181c:	ef 55       	subi	r30, 0x5F	; 95
    181e:	ff 4f       	sbci	r31, 0xFF	; 255
    1820:	60 81       	ld	r22, Z
    1822:	71 81       	ldd	r23, Z+1	; 0x01
    1824:	82 81       	ldd	r24, Z+2	; 0x02
    1826:	93 81       	ldd	r25, Z+3	; 0x03
    1828:	20 e0       	ldi	r18, 0x00	; 0
    182a:	3f ef       	ldi	r19, 0xFF	; 255
    182c:	4f e7       	ldi	r20, 0x7F	; 127
    182e:	57 e4       	ldi	r21, 0x47	; 71
    1830:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1834:	18 16       	cp	r1, r24
    1836:	0c f0       	brlt	.+2      	; 0x183a <main+0x5f0>
    1838:	43 c0       	rjmp	.+134    	; 0x18c0 <main+0x676>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    183a:	fe 01       	movw	r30, r28
    183c:	eb 55       	subi	r30, 0x5B	; 91
    183e:	ff 4f       	sbci	r31, 0xFF	; 255
    1840:	60 81       	ld	r22, Z
    1842:	71 81       	ldd	r23, Z+1	; 0x01
    1844:	82 81       	ldd	r24, Z+2	; 0x02
    1846:	93 81       	ldd	r25, Z+3	; 0x03
    1848:	20 e0       	ldi	r18, 0x00	; 0
    184a:	30 e0       	ldi	r19, 0x00	; 0
    184c:	40 e2       	ldi	r20, 0x20	; 32
    184e:	51 e4       	ldi	r21, 0x41	; 65
    1850:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1854:	dc 01       	movw	r26, r24
    1856:	cb 01       	movw	r24, r22
    1858:	8e 01       	movw	r16, r28
    185a:	01 56       	subi	r16, 0x61	; 97
    185c:	1f 4f       	sbci	r17, 0xFF	; 255
    185e:	bc 01       	movw	r22, r24
    1860:	cd 01       	movw	r24, r26
    1862:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1866:	dc 01       	movw	r26, r24
    1868:	cb 01       	movw	r24, r22
    186a:	f8 01       	movw	r30, r16
    186c:	91 83       	std	Z+1, r25	; 0x01
    186e:	80 83       	st	Z, r24
    1870:	1f c0       	rjmp	.+62     	; 0x18b0 <main+0x666>
    1872:	fe 01       	movw	r30, r28
    1874:	e3 56       	subi	r30, 0x63	; 99
    1876:	ff 4f       	sbci	r31, 0xFF	; 255
    1878:	80 e9       	ldi	r24, 0x90	; 144
    187a:	91 e0       	ldi	r25, 0x01	; 1
    187c:	91 83       	std	Z+1, r25	; 0x01
    187e:	80 83       	st	Z, r24
    1880:	fe 01       	movw	r30, r28
    1882:	e3 56       	subi	r30, 0x63	; 99
    1884:	ff 4f       	sbci	r31, 0xFF	; 255
    1886:	80 81       	ld	r24, Z
    1888:	91 81       	ldd	r25, Z+1	; 0x01
    188a:	01 97       	sbiw	r24, 0x01	; 1
    188c:	f1 f7       	brne	.-4      	; 0x188a <main+0x640>
    188e:	fe 01       	movw	r30, r28
    1890:	e3 56       	subi	r30, 0x63	; 99
    1892:	ff 4f       	sbci	r31, 0xFF	; 255
    1894:	91 83       	std	Z+1, r25	; 0x01
    1896:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1898:	de 01       	movw	r26, r28
    189a:	a1 56       	subi	r26, 0x61	; 97
    189c:	bf 4f       	sbci	r27, 0xFF	; 255
    189e:	fe 01       	movw	r30, r28
    18a0:	e1 56       	subi	r30, 0x61	; 97
    18a2:	ff 4f       	sbci	r31, 0xFF	; 255
    18a4:	80 81       	ld	r24, Z
    18a6:	91 81       	ldd	r25, Z+1	; 0x01
    18a8:	01 97       	sbiw	r24, 0x01	; 1
    18aa:	11 96       	adiw	r26, 0x01	; 1
    18ac:	9c 93       	st	X, r25
    18ae:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    18b0:	fe 01       	movw	r30, r28
    18b2:	e1 56       	subi	r30, 0x61	; 97
    18b4:	ff 4f       	sbci	r31, 0xFF	; 255
    18b6:	80 81       	ld	r24, Z
    18b8:	91 81       	ldd	r25, Z+1	; 0x01
    18ba:	00 97       	sbiw	r24, 0x00	; 0
    18bc:	d1 f6       	brne	.-76     	; 0x1872 <main+0x628>
    18be:	27 c0       	rjmp	.+78     	; 0x190e <main+0x6c4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    18c0:	8e 01       	movw	r16, r28
    18c2:	01 56       	subi	r16, 0x61	; 97
    18c4:	1f 4f       	sbci	r17, 0xFF	; 255
    18c6:	fe 01       	movw	r30, r28
    18c8:	ef 55       	subi	r30, 0x5F	; 95
    18ca:	ff 4f       	sbci	r31, 0xFF	; 255
    18cc:	60 81       	ld	r22, Z
    18ce:	71 81       	ldd	r23, Z+1	; 0x01
    18d0:	82 81       	ldd	r24, Z+2	; 0x02
    18d2:	93 81       	ldd	r25, Z+3	; 0x03
    18d4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    18d8:	dc 01       	movw	r26, r24
    18da:	cb 01       	movw	r24, r22
    18dc:	f8 01       	movw	r30, r16
    18de:	91 83       	std	Z+1, r25	; 0x01
    18e0:	80 83       	st	Z, r24
    18e2:	de 01       	movw	r26, r28
    18e4:	a5 56       	subi	r26, 0x65	; 101
    18e6:	bf 4f       	sbci	r27, 0xFF	; 255
    18e8:	fe 01       	movw	r30, r28
    18ea:	e1 56       	subi	r30, 0x61	; 97
    18ec:	ff 4f       	sbci	r31, 0xFF	; 255
    18ee:	80 81       	ld	r24, Z
    18f0:	91 81       	ldd	r25, Z+1	; 0x01
    18f2:	8d 93       	st	X+, r24
    18f4:	9c 93       	st	X, r25
    18f6:	fe 01       	movw	r30, r28
    18f8:	e5 56       	subi	r30, 0x65	; 101
    18fa:	ff 4f       	sbci	r31, 0xFF	; 255
    18fc:	80 81       	ld	r24, Z
    18fe:	91 81       	ldd	r25, Z+1	; 0x01
    1900:	01 97       	sbiw	r24, 0x01	; 1
    1902:	f1 f7       	brne	.-4      	; 0x1900 <main+0x6b6>
    1904:	fe 01       	movw	r30, r28
    1906:	e5 56       	subi	r30, 0x65	; 101
    1908:	ff 4f       	sbci	r31, 0xFF	; 255
    190a:	91 83       	std	Z+1, r25	; 0x01
    190c:	80 83       	st	Z, r24
				_delay_ms(1500);
				DIO_enuSetPinValue(DIO_u8_PORTC, DIO_u8_PIN7, DIO_u8_LOW);
    190e:	82 e0       	ldi	r24, 0x02	; 2
    1910:	67 e0       	ldi	r22, 0x07	; 7
    1912:	40 e0       	ldi	r20, 0x00	; 0
    1914:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    1918:	0c 94 f1 13 	jmp	0x27e2	; 0x27e2 <main+0x1598>
				break;
				//=========ROOM 2 DOOR===============
			case 1:
				DIO_enuSetPinValue(DIO_u8_PORTD, DIO_u8_PIN3, DIO_u8_HIGH);
    191c:	83 e0       	ldi	r24, 0x03	; 3
    191e:	63 e0       	ldi	r22, 0x03	; 3
    1920:	41 e0       	ldi	r20, 0x01	; 1
    1922:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    1926:	fe 01       	movw	r30, r28
    1928:	e9 56       	subi	r30, 0x69	; 105
    192a:	ff 4f       	sbci	r31, 0xFF	; 255
    192c:	80 e0       	ldi	r24, 0x00	; 0
    192e:	90 e8       	ldi	r25, 0x80	; 128
    1930:	ab eb       	ldi	r26, 0xBB	; 187
    1932:	b4 e4       	ldi	r27, 0x44	; 68
    1934:	80 83       	st	Z, r24
    1936:	91 83       	std	Z+1, r25	; 0x01
    1938:	a2 83       	std	Z+2, r26	; 0x02
    193a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    193c:	8e 01       	movw	r16, r28
    193e:	0d 56       	subi	r16, 0x6D	; 109
    1940:	1f 4f       	sbci	r17, 0xFF	; 255
    1942:	fe 01       	movw	r30, r28
    1944:	e9 56       	subi	r30, 0x69	; 105
    1946:	ff 4f       	sbci	r31, 0xFF	; 255
    1948:	60 81       	ld	r22, Z
    194a:	71 81       	ldd	r23, Z+1	; 0x01
    194c:	82 81       	ldd	r24, Z+2	; 0x02
    194e:	93 81       	ldd	r25, Z+3	; 0x03
    1950:	20 e0       	ldi	r18, 0x00	; 0
    1952:	30 e0       	ldi	r19, 0x00	; 0
    1954:	4a e7       	ldi	r20, 0x7A	; 122
    1956:	55 e4       	ldi	r21, 0x45	; 69
    1958:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    195c:	dc 01       	movw	r26, r24
    195e:	cb 01       	movw	r24, r22
    1960:	f8 01       	movw	r30, r16
    1962:	80 83       	st	Z, r24
    1964:	91 83       	std	Z+1, r25	; 0x01
    1966:	a2 83       	std	Z+2, r26	; 0x02
    1968:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    196a:	fe 01       	movw	r30, r28
    196c:	ed 56       	subi	r30, 0x6D	; 109
    196e:	ff 4f       	sbci	r31, 0xFF	; 255
    1970:	60 81       	ld	r22, Z
    1972:	71 81       	ldd	r23, Z+1	; 0x01
    1974:	82 81       	ldd	r24, Z+2	; 0x02
    1976:	93 81       	ldd	r25, Z+3	; 0x03
    1978:	20 e0       	ldi	r18, 0x00	; 0
    197a:	30 e0       	ldi	r19, 0x00	; 0
    197c:	40 e8       	ldi	r20, 0x80	; 128
    197e:	5f e3       	ldi	r21, 0x3F	; 63
    1980:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1984:	88 23       	and	r24, r24
    1986:	44 f4       	brge	.+16     	; 0x1998 <main+0x74e>
		__ticks = 1;
    1988:	fe 01       	movw	r30, r28
    198a:	ef 56       	subi	r30, 0x6F	; 111
    198c:	ff 4f       	sbci	r31, 0xFF	; 255
    198e:	81 e0       	ldi	r24, 0x01	; 1
    1990:	90 e0       	ldi	r25, 0x00	; 0
    1992:	91 83       	std	Z+1, r25	; 0x01
    1994:	80 83       	st	Z, r24
    1996:	64 c0       	rjmp	.+200    	; 0x1a60 <main+0x816>
	else if (__tmp > 65535)
    1998:	fe 01       	movw	r30, r28
    199a:	ed 56       	subi	r30, 0x6D	; 109
    199c:	ff 4f       	sbci	r31, 0xFF	; 255
    199e:	60 81       	ld	r22, Z
    19a0:	71 81       	ldd	r23, Z+1	; 0x01
    19a2:	82 81       	ldd	r24, Z+2	; 0x02
    19a4:	93 81       	ldd	r25, Z+3	; 0x03
    19a6:	20 e0       	ldi	r18, 0x00	; 0
    19a8:	3f ef       	ldi	r19, 0xFF	; 255
    19aa:	4f e7       	ldi	r20, 0x7F	; 127
    19ac:	57 e4       	ldi	r21, 0x47	; 71
    19ae:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    19b2:	18 16       	cp	r1, r24
    19b4:	0c f0       	brlt	.+2      	; 0x19b8 <main+0x76e>
    19b6:	43 c0       	rjmp	.+134    	; 0x1a3e <main+0x7f4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    19b8:	fe 01       	movw	r30, r28
    19ba:	e9 56       	subi	r30, 0x69	; 105
    19bc:	ff 4f       	sbci	r31, 0xFF	; 255
    19be:	60 81       	ld	r22, Z
    19c0:	71 81       	ldd	r23, Z+1	; 0x01
    19c2:	82 81       	ldd	r24, Z+2	; 0x02
    19c4:	93 81       	ldd	r25, Z+3	; 0x03
    19c6:	20 e0       	ldi	r18, 0x00	; 0
    19c8:	30 e0       	ldi	r19, 0x00	; 0
    19ca:	40 e2       	ldi	r20, 0x20	; 32
    19cc:	51 e4       	ldi	r21, 0x41	; 65
    19ce:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    19d2:	dc 01       	movw	r26, r24
    19d4:	cb 01       	movw	r24, r22
    19d6:	8e 01       	movw	r16, r28
    19d8:	0f 56       	subi	r16, 0x6F	; 111
    19da:	1f 4f       	sbci	r17, 0xFF	; 255
    19dc:	bc 01       	movw	r22, r24
    19de:	cd 01       	movw	r24, r26
    19e0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    19e4:	dc 01       	movw	r26, r24
    19e6:	cb 01       	movw	r24, r22
    19e8:	f8 01       	movw	r30, r16
    19ea:	91 83       	std	Z+1, r25	; 0x01
    19ec:	80 83       	st	Z, r24
    19ee:	1f c0       	rjmp	.+62     	; 0x1a2e <main+0x7e4>
    19f0:	fe 01       	movw	r30, r28
    19f2:	e1 57       	subi	r30, 0x71	; 113
    19f4:	ff 4f       	sbci	r31, 0xFF	; 255
    19f6:	80 e9       	ldi	r24, 0x90	; 144
    19f8:	91 e0       	ldi	r25, 0x01	; 1
    19fa:	91 83       	std	Z+1, r25	; 0x01
    19fc:	80 83       	st	Z, r24
    19fe:	fe 01       	movw	r30, r28
    1a00:	e1 57       	subi	r30, 0x71	; 113
    1a02:	ff 4f       	sbci	r31, 0xFF	; 255
    1a04:	80 81       	ld	r24, Z
    1a06:	91 81       	ldd	r25, Z+1	; 0x01
    1a08:	01 97       	sbiw	r24, 0x01	; 1
    1a0a:	f1 f7       	brne	.-4      	; 0x1a08 <main+0x7be>
    1a0c:	fe 01       	movw	r30, r28
    1a0e:	e1 57       	subi	r30, 0x71	; 113
    1a10:	ff 4f       	sbci	r31, 0xFF	; 255
    1a12:	91 83       	std	Z+1, r25	; 0x01
    1a14:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a16:	de 01       	movw	r26, r28
    1a18:	af 56       	subi	r26, 0x6F	; 111
    1a1a:	bf 4f       	sbci	r27, 0xFF	; 255
    1a1c:	fe 01       	movw	r30, r28
    1a1e:	ef 56       	subi	r30, 0x6F	; 111
    1a20:	ff 4f       	sbci	r31, 0xFF	; 255
    1a22:	80 81       	ld	r24, Z
    1a24:	91 81       	ldd	r25, Z+1	; 0x01
    1a26:	01 97       	sbiw	r24, 0x01	; 1
    1a28:	11 96       	adiw	r26, 0x01	; 1
    1a2a:	9c 93       	st	X, r25
    1a2c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a2e:	fe 01       	movw	r30, r28
    1a30:	ef 56       	subi	r30, 0x6F	; 111
    1a32:	ff 4f       	sbci	r31, 0xFF	; 255
    1a34:	80 81       	ld	r24, Z
    1a36:	91 81       	ldd	r25, Z+1	; 0x01
    1a38:	00 97       	sbiw	r24, 0x00	; 0
    1a3a:	d1 f6       	brne	.-76     	; 0x19f0 <main+0x7a6>
    1a3c:	27 c0       	rjmp	.+78     	; 0x1a8c <main+0x842>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a3e:	8e 01       	movw	r16, r28
    1a40:	0f 56       	subi	r16, 0x6F	; 111
    1a42:	1f 4f       	sbci	r17, 0xFF	; 255
    1a44:	fe 01       	movw	r30, r28
    1a46:	ed 56       	subi	r30, 0x6D	; 109
    1a48:	ff 4f       	sbci	r31, 0xFF	; 255
    1a4a:	60 81       	ld	r22, Z
    1a4c:	71 81       	ldd	r23, Z+1	; 0x01
    1a4e:	82 81       	ldd	r24, Z+2	; 0x02
    1a50:	93 81       	ldd	r25, Z+3	; 0x03
    1a52:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1a56:	dc 01       	movw	r26, r24
    1a58:	cb 01       	movw	r24, r22
    1a5a:	f8 01       	movw	r30, r16
    1a5c:	91 83       	std	Z+1, r25	; 0x01
    1a5e:	80 83       	st	Z, r24
    1a60:	de 01       	movw	r26, r28
    1a62:	a3 57       	subi	r26, 0x73	; 115
    1a64:	bf 4f       	sbci	r27, 0xFF	; 255
    1a66:	fe 01       	movw	r30, r28
    1a68:	ef 56       	subi	r30, 0x6F	; 111
    1a6a:	ff 4f       	sbci	r31, 0xFF	; 255
    1a6c:	80 81       	ld	r24, Z
    1a6e:	91 81       	ldd	r25, Z+1	; 0x01
    1a70:	8d 93       	st	X+, r24
    1a72:	9c 93       	st	X, r25
    1a74:	fe 01       	movw	r30, r28
    1a76:	e3 57       	subi	r30, 0x73	; 115
    1a78:	ff 4f       	sbci	r31, 0xFF	; 255
    1a7a:	80 81       	ld	r24, Z
    1a7c:	91 81       	ldd	r25, Z+1	; 0x01
    1a7e:	01 97       	sbiw	r24, 0x01	; 1
    1a80:	f1 f7       	brne	.-4      	; 0x1a7e <main+0x834>
    1a82:	fe 01       	movw	r30, r28
    1a84:	e3 57       	subi	r30, 0x73	; 115
    1a86:	ff 4f       	sbci	r31, 0xFF	; 255
    1a88:	91 83       	std	Z+1, r25	; 0x01
    1a8a:	80 83       	st	Z, r24
				_delay_ms(1500);
				DIO_enuSetPinValue(DIO_u8_PORTD, DIO_u8_PIN3, DIO_u8_LOW);
    1a8c:	83 e0       	ldi	r24, 0x03	; 3
    1a8e:	63 e0       	ldi	r22, 0x03	; 3
    1a90:	40 e0       	ldi	r20, 0x00	; 0
    1a92:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    1a96:	a5 c6       	rjmp	.+3402   	; 0x27e2 <main+0x1598>
				break;
				//=========ROOM 3 DOOR===============
			case 2:
				DIO_enuSetPinValue(DIO_u8_PORTD, DIO_u8_PIN4, DIO_u8_HIGH);
    1a98:	83 e0       	ldi	r24, 0x03	; 3
    1a9a:	64 e0       	ldi	r22, 0x04	; 4
    1a9c:	41 e0       	ldi	r20, 0x01	; 1
    1a9e:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    1aa2:	fe 01       	movw	r30, r28
    1aa4:	e7 57       	subi	r30, 0x77	; 119
    1aa6:	ff 4f       	sbci	r31, 0xFF	; 255
    1aa8:	80 e0       	ldi	r24, 0x00	; 0
    1aaa:	90 e8       	ldi	r25, 0x80	; 128
    1aac:	ab eb       	ldi	r26, 0xBB	; 187
    1aae:	b4 e4       	ldi	r27, 0x44	; 68
    1ab0:	80 83       	st	Z, r24
    1ab2:	91 83       	std	Z+1, r25	; 0x01
    1ab4:	a2 83       	std	Z+2, r26	; 0x02
    1ab6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1ab8:	8e 01       	movw	r16, r28
    1aba:	0b 57       	subi	r16, 0x7B	; 123
    1abc:	1f 4f       	sbci	r17, 0xFF	; 255
    1abe:	fe 01       	movw	r30, r28
    1ac0:	e7 57       	subi	r30, 0x77	; 119
    1ac2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ac4:	60 81       	ld	r22, Z
    1ac6:	71 81       	ldd	r23, Z+1	; 0x01
    1ac8:	82 81       	ldd	r24, Z+2	; 0x02
    1aca:	93 81       	ldd	r25, Z+3	; 0x03
    1acc:	20 e0       	ldi	r18, 0x00	; 0
    1ace:	30 e0       	ldi	r19, 0x00	; 0
    1ad0:	4a e7       	ldi	r20, 0x7A	; 122
    1ad2:	55 e4       	ldi	r21, 0x45	; 69
    1ad4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1ad8:	dc 01       	movw	r26, r24
    1ada:	cb 01       	movw	r24, r22
    1adc:	f8 01       	movw	r30, r16
    1ade:	80 83       	st	Z, r24
    1ae0:	91 83       	std	Z+1, r25	; 0x01
    1ae2:	a2 83       	std	Z+2, r26	; 0x02
    1ae4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1ae6:	fe 01       	movw	r30, r28
    1ae8:	eb 57       	subi	r30, 0x7B	; 123
    1aea:	ff 4f       	sbci	r31, 0xFF	; 255
    1aec:	60 81       	ld	r22, Z
    1aee:	71 81       	ldd	r23, Z+1	; 0x01
    1af0:	82 81       	ldd	r24, Z+2	; 0x02
    1af2:	93 81       	ldd	r25, Z+3	; 0x03
    1af4:	20 e0       	ldi	r18, 0x00	; 0
    1af6:	30 e0       	ldi	r19, 0x00	; 0
    1af8:	40 e8       	ldi	r20, 0x80	; 128
    1afa:	5f e3       	ldi	r21, 0x3F	; 63
    1afc:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1b00:	88 23       	and	r24, r24
    1b02:	44 f4       	brge	.+16     	; 0x1b14 <main+0x8ca>
		__ticks = 1;
    1b04:	fe 01       	movw	r30, r28
    1b06:	ed 57       	subi	r30, 0x7D	; 125
    1b08:	ff 4f       	sbci	r31, 0xFF	; 255
    1b0a:	81 e0       	ldi	r24, 0x01	; 1
    1b0c:	90 e0       	ldi	r25, 0x00	; 0
    1b0e:	91 83       	std	Z+1, r25	; 0x01
    1b10:	80 83       	st	Z, r24
    1b12:	64 c0       	rjmp	.+200    	; 0x1bdc <main+0x992>
	else if (__tmp > 65535)
    1b14:	fe 01       	movw	r30, r28
    1b16:	eb 57       	subi	r30, 0x7B	; 123
    1b18:	ff 4f       	sbci	r31, 0xFF	; 255
    1b1a:	60 81       	ld	r22, Z
    1b1c:	71 81       	ldd	r23, Z+1	; 0x01
    1b1e:	82 81       	ldd	r24, Z+2	; 0x02
    1b20:	93 81       	ldd	r25, Z+3	; 0x03
    1b22:	20 e0       	ldi	r18, 0x00	; 0
    1b24:	3f ef       	ldi	r19, 0xFF	; 255
    1b26:	4f e7       	ldi	r20, 0x7F	; 127
    1b28:	57 e4       	ldi	r21, 0x47	; 71
    1b2a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1b2e:	18 16       	cp	r1, r24
    1b30:	0c f0       	brlt	.+2      	; 0x1b34 <main+0x8ea>
    1b32:	43 c0       	rjmp	.+134    	; 0x1bba <main+0x970>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b34:	fe 01       	movw	r30, r28
    1b36:	e7 57       	subi	r30, 0x77	; 119
    1b38:	ff 4f       	sbci	r31, 0xFF	; 255
    1b3a:	60 81       	ld	r22, Z
    1b3c:	71 81       	ldd	r23, Z+1	; 0x01
    1b3e:	82 81       	ldd	r24, Z+2	; 0x02
    1b40:	93 81       	ldd	r25, Z+3	; 0x03
    1b42:	20 e0       	ldi	r18, 0x00	; 0
    1b44:	30 e0       	ldi	r19, 0x00	; 0
    1b46:	40 e2       	ldi	r20, 0x20	; 32
    1b48:	51 e4       	ldi	r21, 0x41	; 65
    1b4a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1b4e:	dc 01       	movw	r26, r24
    1b50:	cb 01       	movw	r24, r22
    1b52:	8e 01       	movw	r16, r28
    1b54:	0d 57       	subi	r16, 0x7D	; 125
    1b56:	1f 4f       	sbci	r17, 0xFF	; 255
    1b58:	bc 01       	movw	r22, r24
    1b5a:	cd 01       	movw	r24, r26
    1b5c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1b60:	dc 01       	movw	r26, r24
    1b62:	cb 01       	movw	r24, r22
    1b64:	f8 01       	movw	r30, r16
    1b66:	91 83       	std	Z+1, r25	; 0x01
    1b68:	80 83       	st	Z, r24
    1b6a:	1f c0       	rjmp	.+62     	; 0x1baa <main+0x960>
    1b6c:	fe 01       	movw	r30, r28
    1b6e:	ef 57       	subi	r30, 0x7F	; 127
    1b70:	ff 4f       	sbci	r31, 0xFF	; 255
    1b72:	80 e9       	ldi	r24, 0x90	; 144
    1b74:	91 e0       	ldi	r25, 0x01	; 1
    1b76:	91 83       	std	Z+1, r25	; 0x01
    1b78:	80 83       	st	Z, r24
    1b7a:	fe 01       	movw	r30, r28
    1b7c:	ef 57       	subi	r30, 0x7F	; 127
    1b7e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b80:	80 81       	ld	r24, Z
    1b82:	91 81       	ldd	r25, Z+1	; 0x01
    1b84:	01 97       	sbiw	r24, 0x01	; 1
    1b86:	f1 f7       	brne	.-4      	; 0x1b84 <main+0x93a>
    1b88:	fe 01       	movw	r30, r28
    1b8a:	ef 57       	subi	r30, 0x7F	; 127
    1b8c:	ff 4f       	sbci	r31, 0xFF	; 255
    1b8e:	91 83       	std	Z+1, r25	; 0x01
    1b90:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b92:	de 01       	movw	r26, r28
    1b94:	ad 57       	subi	r26, 0x7D	; 125
    1b96:	bf 4f       	sbci	r27, 0xFF	; 255
    1b98:	fe 01       	movw	r30, r28
    1b9a:	ed 57       	subi	r30, 0x7D	; 125
    1b9c:	ff 4f       	sbci	r31, 0xFF	; 255
    1b9e:	80 81       	ld	r24, Z
    1ba0:	91 81       	ldd	r25, Z+1	; 0x01
    1ba2:	01 97       	sbiw	r24, 0x01	; 1
    1ba4:	11 96       	adiw	r26, 0x01	; 1
    1ba6:	9c 93       	st	X, r25
    1ba8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1baa:	fe 01       	movw	r30, r28
    1bac:	ed 57       	subi	r30, 0x7D	; 125
    1bae:	ff 4f       	sbci	r31, 0xFF	; 255
    1bb0:	80 81       	ld	r24, Z
    1bb2:	91 81       	ldd	r25, Z+1	; 0x01
    1bb4:	00 97       	sbiw	r24, 0x00	; 0
    1bb6:	d1 f6       	brne	.-76     	; 0x1b6c <main+0x922>
    1bb8:	27 c0       	rjmp	.+78     	; 0x1c08 <main+0x9be>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1bba:	8e 01       	movw	r16, r28
    1bbc:	0d 57       	subi	r16, 0x7D	; 125
    1bbe:	1f 4f       	sbci	r17, 0xFF	; 255
    1bc0:	fe 01       	movw	r30, r28
    1bc2:	eb 57       	subi	r30, 0x7B	; 123
    1bc4:	ff 4f       	sbci	r31, 0xFF	; 255
    1bc6:	60 81       	ld	r22, Z
    1bc8:	71 81       	ldd	r23, Z+1	; 0x01
    1bca:	82 81       	ldd	r24, Z+2	; 0x02
    1bcc:	93 81       	ldd	r25, Z+3	; 0x03
    1bce:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1bd2:	dc 01       	movw	r26, r24
    1bd4:	cb 01       	movw	r24, r22
    1bd6:	f8 01       	movw	r30, r16
    1bd8:	91 83       	std	Z+1, r25	; 0x01
    1bda:	80 83       	st	Z, r24
    1bdc:	de 01       	movw	r26, r28
    1bde:	a1 58       	subi	r26, 0x81	; 129
    1be0:	bf 4f       	sbci	r27, 0xFF	; 255
    1be2:	fe 01       	movw	r30, r28
    1be4:	ed 57       	subi	r30, 0x7D	; 125
    1be6:	ff 4f       	sbci	r31, 0xFF	; 255
    1be8:	80 81       	ld	r24, Z
    1bea:	91 81       	ldd	r25, Z+1	; 0x01
    1bec:	8d 93       	st	X+, r24
    1bee:	9c 93       	st	X, r25
    1bf0:	fe 01       	movw	r30, r28
    1bf2:	e1 58       	subi	r30, 0x81	; 129
    1bf4:	ff 4f       	sbci	r31, 0xFF	; 255
    1bf6:	80 81       	ld	r24, Z
    1bf8:	91 81       	ldd	r25, Z+1	; 0x01
    1bfa:	01 97       	sbiw	r24, 0x01	; 1
    1bfc:	f1 f7       	brne	.-4      	; 0x1bfa <main+0x9b0>
    1bfe:	fe 01       	movw	r30, r28
    1c00:	e1 58       	subi	r30, 0x81	; 129
    1c02:	ff 4f       	sbci	r31, 0xFF	; 255
    1c04:	91 83       	std	Z+1, r25	; 0x01
    1c06:	80 83       	st	Z, r24
				_delay_ms(1500);
				DIO_enuSetPinValue(DIO_u8_PORTD, DIO_u8_PIN4, DIO_u8_LOW);
    1c08:	83 e0       	ldi	r24, 0x03	; 3
    1c0a:	64 e0       	ldi	r22, 0x04	; 4
    1c0c:	40 e0       	ldi	r20, 0x00	; 0
    1c0e:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    1c12:	e7 c5       	rjmp	.+3022   	; 0x27e2 <main+0x1598>
				break;

				//=============CLOSE DOOR=================
				//=========ROOM 1 DOOR===============
			case 3:
				DIO_enuSetPinValue(DIO_u8_PORTD, DIO_u8_PIN5, DIO_u8_HIGH);
    1c14:	83 e0       	ldi	r24, 0x03	; 3
    1c16:	65 e0       	ldi	r22, 0x05	; 5
    1c18:	41 e0       	ldi	r20, 0x01	; 1
    1c1a:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    1c1e:	fe 01       	movw	r30, r28
    1c20:	e5 58       	subi	r30, 0x85	; 133
    1c22:	ff 4f       	sbci	r31, 0xFF	; 255
    1c24:	80 e0       	ldi	r24, 0x00	; 0
    1c26:	90 e8       	ldi	r25, 0x80	; 128
    1c28:	ab eb       	ldi	r26, 0xBB	; 187
    1c2a:	b4 e4       	ldi	r27, 0x44	; 68
    1c2c:	80 83       	st	Z, r24
    1c2e:	91 83       	std	Z+1, r25	; 0x01
    1c30:	a2 83       	std	Z+2, r26	; 0x02
    1c32:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c34:	8e 01       	movw	r16, r28
    1c36:	09 58       	subi	r16, 0x89	; 137
    1c38:	1f 4f       	sbci	r17, 0xFF	; 255
    1c3a:	fe 01       	movw	r30, r28
    1c3c:	e5 58       	subi	r30, 0x85	; 133
    1c3e:	ff 4f       	sbci	r31, 0xFF	; 255
    1c40:	60 81       	ld	r22, Z
    1c42:	71 81       	ldd	r23, Z+1	; 0x01
    1c44:	82 81       	ldd	r24, Z+2	; 0x02
    1c46:	93 81       	ldd	r25, Z+3	; 0x03
    1c48:	20 e0       	ldi	r18, 0x00	; 0
    1c4a:	30 e0       	ldi	r19, 0x00	; 0
    1c4c:	4a e7       	ldi	r20, 0x7A	; 122
    1c4e:	55 e4       	ldi	r21, 0x45	; 69
    1c50:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1c54:	dc 01       	movw	r26, r24
    1c56:	cb 01       	movw	r24, r22
    1c58:	f8 01       	movw	r30, r16
    1c5a:	80 83       	st	Z, r24
    1c5c:	91 83       	std	Z+1, r25	; 0x01
    1c5e:	a2 83       	std	Z+2, r26	; 0x02
    1c60:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1c62:	fe 01       	movw	r30, r28
    1c64:	e9 58       	subi	r30, 0x89	; 137
    1c66:	ff 4f       	sbci	r31, 0xFF	; 255
    1c68:	60 81       	ld	r22, Z
    1c6a:	71 81       	ldd	r23, Z+1	; 0x01
    1c6c:	82 81       	ldd	r24, Z+2	; 0x02
    1c6e:	93 81       	ldd	r25, Z+3	; 0x03
    1c70:	20 e0       	ldi	r18, 0x00	; 0
    1c72:	30 e0       	ldi	r19, 0x00	; 0
    1c74:	40 e8       	ldi	r20, 0x80	; 128
    1c76:	5f e3       	ldi	r21, 0x3F	; 63
    1c78:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1c7c:	88 23       	and	r24, r24
    1c7e:	44 f4       	brge	.+16     	; 0x1c90 <main+0xa46>
		__ticks = 1;
    1c80:	fe 01       	movw	r30, r28
    1c82:	eb 58       	subi	r30, 0x8B	; 139
    1c84:	ff 4f       	sbci	r31, 0xFF	; 255
    1c86:	81 e0       	ldi	r24, 0x01	; 1
    1c88:	90 e0       	ldi	r25, 0x00	; 0
    1c8a:	91 83       	std	Z+1, r25	; 0x01
    1c8c:	80 83       	st	Z, r24
    1c8e:	64 c0       	rjmp	.+200    	; 0x1d58 <main+0xb0e>
	else if (__tmp > 65535)
    1c90:	fe 01       	movw	r30, r28
    1c92:	e9 58       	subi	r30, 0x89	; 137
    1c94:	ff 4f       	sbci	r31, 0xFF	; 255
    1c96:	60 81       	ld	r22, Z
    1c98:	71 81       	ldd	r23, Z+1	; 0x01
    1c9a:	82 81       	ldd	r24, Z+2	; 0x02
    1c9c:	93 81       	ldd	r25, Z+3	; 0x03
    1c9e:	20 e0       	ldi	r18, 0x00	; 0
    1ca0:	3f ef       	ldi	r19, 0xFF	; 255
    1ca2:	4f e7       	ldi	r20, 0x7F	; 127
    1ca4:	57 e4       	ldi	r21, 0x47	; 71
    1ca6:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1caa:	18 16       	cp	r1, r24
    1cac:	0c f0       	brlt	.+2      	; 0x1cb0 <main+0xa66>
    1cae:	43 c0       	rjmp	.+134    	; 0x1d36 <main+0xaec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1cb0:	fe 01       	movw	r30, r28
    1cb2:	e5 58       	subi	r30, 0x85	; 133
    1cb4:	ff 4f       	sbci	r31, 0xFF	; 255
    1cb6:	60 81       	ld	r22, Z
    1cb8:	71 81       	ldd	r23, Z+1	; 0x01
    1cba:	82 81       	ldd	r24, Z+2	; 0x02
    1cbc:	93 81       	ldd	r25, Z+3	; 0x03
    1cbe:	20 e0       	ldi	r18, 0x00	; 0
    1cc0:	30 e0       	ldi	r19, 0x00	; 0
    1cc2:	40 e2       	ldi	r20, 0x20	; 32
    1cc4:	51 e4       	ldi	r21, 0x41	; 65
    1cc6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1cca:	dc 01       	movw	r26, r24
    1ccc:	cb 01       	movw	r24, r22
    1cce:	8e 01       	movw	r16, r28
    1cd0:	0b 58       	subi	r16, 0x8B	; 139
    1cd2:	1f 4f       	sbci	r17, 0xFF	; 255
    1cd4:	bc 01       	movw	r22, r24
    1cd6:	cd 01       	movw	r24, r26
    1cd8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1cdc:	dc 01       	movw	r26, r24
    1cde:	cb 01       	movw	r24, r22
    1ce0:	f8 01       	movw	r30, r16
    1ce2:	91 83       	std	Z+1, r25	; 0x01
    1ce4:	80 83       	st	Z, r24
    1ce6:	1f c0       	rjmp	.+62     	; 0x1d26 <main+0xadc>
    1ce8:	fe 01       	movw	r30, r28
    1cea:	ed 58       	subi	r30, 0x8D	; 141
    1cec:	ff 4f       	sbci	r31, 0xFF	; 255
    1cee:	80 e9       	ldi	r24, 0x90	; 144
    1cf0:	91 e0       	ldi	r25, 0x01	; 1
    1cf2:	91 83       	std	Z+1, r25	; 0x01
    1cf4:	80 83       	st	Z, r24
    1cf6:	fe 01       	movw	r30, r28
    1cf8:	ed 58       	subi	r30, 0x8D	; 141
    1cfa:	ff 4f       	sbci	r31, 0xFF	; 255
    1cfc:	80 81       	ld	r24, Z
    1cfe:	91 81       	ldd	r25, Z+1	; 0x01
    1d00:	01 97       	sbiw	r24, 0x01	; 1
    1d02:	f1 f7       	brne	.-4      	; 0x1d00 <main+0xab6>
    1d04:	fe 01       	movw	r30, r28
    1d06:	ed 58       	subi	r30, 0x8D	; 141
    1d08:	ff 4f       	sbci	r31, 0xFF	; 255
    1d0a:	91 83       	std	Z+1, r25	; 0x01
    1d0c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d0e:	de 01       	movw	r26, r28
    1d10:	ab 58       	subi	r26, 0x8B	; 139
    1d12:	bf 4f       	sbci	r27, 0xFF	; 255
    1d14:	fe 01       	movw	r30, r28
    1d16:	eb 58       	subi	r30, 0x8B	; 139
    1d18:	ff 4f       	sbci	r31, 0xFF	; 255
    1d1a:	80 81       	ld	r24, Z
    1d1c:	91 81       	ldd	r25, Z+1	; 0x01
    1d1e:	01 97       	sbiw	r24, 0x01	; 1
    1d20:	11 96       	adiw	r26, 0x01	; 1
    1d22:	9c 93       	st	X, r25
    1d24:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d26:	fe 01       	movw	r30, r28
    1d28:	eb 58       	subi	r30, 0x8B	; 139
    1d2a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d2c:	80 81       	ld	r24, Z
    1d2e:	91 81       	ldd	r25, Z+1	; 0x01
    1d30:	00 97       	sbiw	r24, 0x00	; 0
    1d32:	d1 f6       	brne	.-76     	; 0x1ce8 <main+0xa9e>
    1d34:	27 c0       	rjmp	.+78     	; 0x1d84 <main+0xb3a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d36:	8e 01       	movw	r16, r28
    1d38:	0b 58       	subi	r16, 0x8B	; 139
    1d3a:	1f 4f       	sbci	r17, 0xFF	; 255
    1d3c:	fe 01       	movw	r30, r28
    1d3e:	e9 58       	subi	r30, 0x89	; 137
    1d40:	ff 4f       	sbci	r31, 0xFF	; 255
    1d42:	60 81       	ld	r22, Z
    1d44:	71 81       	ldd	r23, Z+1	; 0x01
    1d46:	82 81       	ldd	r24, Z+2	; 0x02
    1d48:	93 81       	ldd	r25, Z+3	; 0x03
    1d4a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1d4e:	dc 01       	movw	r26, r24
    1d50:	cb 01       	movw	r24, r22
    1d52:	f8 01       	movw	r30, r16
    1d54:	91 83       	std	Z+1, r25	; 0x01
    1d56:	80 83       	st	Z, r24
    1d58:	de 01       	movw	r26, r28
    1d5a:	af 58       	subi	r26, 0x8F	; 143
    1d5c:	bf 4f       	sbci	r27, 0xFF	; 255
    1d5e:	fe 01       	movw	r30, r28
    1d60:	eb 58       	subi	r30, 0x8B	; 139
    1d62:	ff 4f       	sbci	r31, 0xFF	; 255
    1d64:	80 81       	ld	r24, Z
    1d66:	91 81       	ldd	r25, Z+1	; 0x01
    1d68:	8d 93       	st	X+, r24
    1d6a:	9c 93       	st	X, r25
    1d6c:	fe 01       	movw	r30, r28
    1d6e:	ef 58       	subi	r30, 0x8F	; 143
    1d70:	ff 4f       	sbci	r31, 0xFF	; 255
    1d72:	80 81       	ld	r24, Z
    1d74:	91 81       	ldd	r25, Z+1	; 0x01
    1d76:	01 97       	sbiw	r24, 0x01	; 1
    1d78:	f1 f7       	brne	.-4      	; 0x1d76 <main+0xb2c>
    1d7a:	fe 01       	movw	r30, r28
    1d7c:	ef 58       	subi	r30, 0x8F	; 143
    1d7e:	ff 4f       	sbci	r31, 0xFF	; 255
    1d80:	91 83       	std	Z+1, r25	; 0x01
    1d82:	80 83       	st	Z, r24
				_delay_ms(1500);
				DIO_enuSetPinValue(DIO_u8_PORTD, DIO_u8_PIN5, DIO_u8_LOW);
    1d84:	83 e0       	ldi	r24, 0x03	; 3
    1d86:	65 e0       	ldi	r22, 0x05	; 5
    1d88:	40 e0       	ldi	r20, 0x00	; 0
    1d8a:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    1d8e:	29 c5       	rjmp	.+2642   	; 0x27e2 <main+0x1598>
				break;
				//=========ROOM 2 DOOR===============
			case 4:
				DIO_enuSetPinValue(DIO_u8_PORTD, DIO_u8_PIN6, DIO_u8_HIGH);
    1d90:	83 e0       	ldi	r24, 0x03	; 3
    1d92:	66 e0       	ldi	r22, 0x06	; 6
    1d94:	41 e0       	ldi	r20, 0x01	; 1
    1d96:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    1d9a:	fe 01       	movw	r30, r28
    1d9c:	e3 59       	subi	r30, 0x93	; 147
    1d9e:	ff 4f       	sbci	r31, 0xFF	; 255
    1da0:	80 e0       	ldi	r24, 0x00	; 0
    1da2:	90 e8       	ldi	r25, 0x80	; 128
    1da4:	ab eb       	ldi	r26, 0xBB	; 187
    1da6:	b4 e4       	ldi	r27, 0x44	; 68
    1da8:	80 83       	st	Z, r24
    1daa:	91 83       	std	Z+1, r25	; 0x01
    1dac:	a2 83       	std	Z+2, r26	; 0x02
    1dae:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1db0:	8e 01       	movw	r16, r28
    1db2:	07 59       	subi	r16, 0x97	; 151
    1db4:	1f 4f       	sbci	r17, 0xFF	; 255
    1db6:	fe 01       	movw	r30, r28
    1db8:	e3 59       	subi	r30, 0x93	; 147
    1dba:	ff 4f       	sbci	r31, 0xFF	; 255
    1dbc:	60 81       	ld	r22, Z
    1dbe:	71 81       	ldd	r23, Z+1	; 0x01
    1dc0:	82 81       	ldd	r24, Z+2	; 0x02
    1dc2:	93 81       	ldd	r25, Z+3	; 0x03
    1dc4:	20 e0       	ldi	r18, 0x00	; 0
    1dc6:	30 e0       	ldi	r19, 0x00	; 0
    1dc8:	4a e7       	ldi	r20, 0x7A	; 122
    1dca:	55 e4       	ldi	r21, 0x45	; 69
    1dcc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1dd0:	dc 01       	movw	r26, r24
    1dd2:	cb 01       	movw	r24, r22
    1dd4:	f8 01       	movw	r30, r16
    1dd6:	80 83       	st	Z, r24
    1dd8:	91 83       	std	Z+1, r25	; 0x01
    1dda:	a2 83       	std	Z+2, r26	; 0x02
    1ddc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1dde:	fe 01       	movw	r30, r28
    1de0:	e7 59       	subi	r30, 0x97	; 151
    1de2:	ff 4f       	sbci	r31, 0xFF	; 255
    1de4:	60 81       	ld	r22, Z
    1de6:	71 81       	ldd	r23, Z+1	; 0x01
    1de8:	82 81       	ldd	r24, Z+2	; 0x02
    1dea:	93 81       	ldd	r25, Z+3	; 0x03
    1dec:	20 e0       	ldi	r18, 0x00	; 0
    1dee:	30 e0       	ldi	r19, 0x00	; 0
    1df0:	40 e8       	ldi	r20, 0x80	; 128
    1df2:	5f e3       	ldi	r21, 0x3F	; 63
    1df4:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1df8:	88 23       	and	r24, r24
    1dfa:	44 f4       	brge	.+16     	; 0x1e0c <main+0xbc2>
		__ticks = 1;
    1dfc:	fe 01       	movw	r30, r28
    1dfe:	e9 59       	subi	r30, 0x99	; 153
    1e00:	ff 4f       	sbci	r31, 0xFF	; 255
    1e02:	81 e0       	ldi	r24, 0x01	; 1
    1e04:	90 e0       	ldi	r25, 0x00	; 0
    1e06:	91 83       	std	Z+1, r25	; 0x01
    1e08:	80 83       	st	Z, r24
    1e0a:	64 c0       	rjmp	.+200    	; 0x1ed4 <main+0xc8a>
	else if (__tmp > 65535)
    1e0c:	fe 01       	movw	r30, r28
    1e0e:	e7 59       	subi	r30, 0x97	; 151
    1e10:	ff 4f       	sbci	r31, 0xFF	; 255
    1e12:	60 81       	ld	r22, Z
    1e14:	71 81       	ldd	r23, Z+1	; 0x01
    1e16:	82 81       	ldd	r24, Z+2	; 0x02
    1e18:	93 81       	ldd	r25, Z+3	; 0x03
    1e1a:	20 e0       	ldi	r18, 0x00	; 0
    1e1c:	3f ef       	ldi	r19, 0xFF	; 255
    1e1e:	4f e7       	ldi	r20, 0x7F	; 127
    1e20:	57 e4       	ldi	r21, 0x47	; 71
    1e22:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1e26:	18 16       	cp	r1, r24
    1e28:	0c f0       	brlt	.+2      	; 0x1e2c <main+0xbe2>
    1e2a:	43 c0       	rjmp	.+134    	; 0x1eb2 <main+0xc68>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e2c:	fe 01       	movw	r30, r28
    1e2e:	e3 59       	subi	r30, 0x93	; 147
    1e30:	ff 4f       	sbci	r31, 0xFF	; 255
    1e32:	60 81       	ld	r22, Z
    1e34:	71 81       	ldd	r23, Z+1	; 0x01
    1e36:	82 81       	ldd	r24, Z+2	; 0x02
    1e38:	93 81       	ldd	r25, Z+3	; 0x03
    1e3a:	20 e0       	ldi	r18, 0x00	; 0
    1e3c:	30 e0       	ldi	r19, 0x00	; 0
    1e3e:	40 e2       	ldi	r20, 0x20	; 32
    1e40:	51 e4       	ldi	r21, 0x41	; 65
    1e42:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1e46:	dc 01       	movw	r26, r24
    1e48:	cb 01       	movw	r24, r22
    1e4a:	8e 01       	movw	r16, r28
    1e4c:	09 59       	subi	r16, 0x99	; 153
    1e4e:	1f 4f       	sbci	r17, 0xFF	; 255
    1e50:	bc 01       	movw	r22, r24
    1e52:	cd 01       	movw	r24, r26
    1e54:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1e58:	dc 01       	movw	r26, r24
    1e5a:	cb 01       	movw	r24, r22
    1e5c:	f8 01       	movw	r30, r16
    1e5e:	91 83       	std	Z+1, r25	; 0x01
    1e60:	80 83       	st	Z, r24
    1e62:	1f c0       	rjmp	.+62     	; 0x1ea2 <main+0xc58>
    1e64:	fe 01       	movw	r30, r28
    1e66:	eb 59       	subi	r30, 0x9B	; 155
    1e68:	ff 4f       	sbci	r31, 0xFF	; 255
    1e6a:	80 e9       	ldi	r24, 0x90	; 144
    1e6c:	91 e0       	ldi	r25, 0x01	; 1
    1e6e:	91 83       	std	Z+1, r25	; 0x01
    1e70:	80 83       	st	Z, r24
    1e72:	fe 01       	movw	r30, r28
    1e74:	eb 59       	subi	r30, 0x9B	; 155
    1e76:	ff 4f       	sbci	r31, 0xFF	; 255
    1e78:	80 81       	ld	r24, Z
    1e7a:	91 81       	ldd	r25, Z+1	; 0x01
    1e7c:	01 97       	sbiw	r24, 0x01	; 1
    1e7e:	f1 f7       	brne	.-4      	; 0x1e7c <main+0xc32>
    1e80:	fe 01       	movw	r30, r28
    1e82:	eb 59       	subi	r30, 0x9B	; 155
    1e84:	ff 4f       	sbci	r31, 0xFF	; 255
    1e86:	91 83       	std	Z+1, r25	; 0x01
    1e88:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e8a:	de 01       	movw	r26, r28
    1e8c:	a9 59       	subi	r26, 0x99	; 153
    1e8e:	bf 4f       	sbci	r27, 0xFF	; 255
    1e90:	fe 01       	movw	r30, r28
    1e92:	e9 59       	subi	r30, 0x99	; 153
    1e94:	ff 4f       	sbci	r31, 0xFF	; 255
    1e96:	80 81       	ld	r24, Z
    1e98:	91 81       	ldd	r25, Z+1	; 0x01
    1e9a:	01 97       	sbiw	r24, 0x01	; 1
    1e9c:	11 96       	adiw	r26, 0x01	; 1
    1e9e:	9c 93       	st	X, r25
    1ea0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ea2:	fe 01       	movw	r30, r28
    1ea4:	e9 59       	subi	r30, 0x99	; 153
    1ea6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ea8:	80 81       	ld	r24, Z
    1eaa:	91 81       	ldd	r25, Z+1	; 0x01
    1eac:	00 97       	sbiw	r24, 0x00	; 0
    1eae:	d1 f6       	brne	.-76     	; 0x1e64 <main+0xc1a>
    1eb0:	27 c0       	rjmp	.+78     	; 0x1f00 <main+0xcb6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1eb2:	8e 01       	movw	r16, r28
    1eb4:	09 59       	subi	r16, 0x99	; 153
    1eb6:	1f 4f       	sbci	r17, 0xFF	; 255
    1eb8:	fe 01       	movw	r30, r28
    1eba:	e7 59       	subi	r30, 0x97	; 151
    1ebc:	ff 4f       	sbci	r31, 0xFF	; 255
    1ebe:	60 81       	ld	r22, Z
    1ec0:	71 81       	ldd	r23, Z+1	; 0x01
    1ec2:	82 81       	ldd	r24, Z+2	; 0x02
    1ec4:	93 81       	ldd	r25, Z+3	; 0x03
    1ec6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1eca:	dc 01       	movw	r26, r24
    1ecc:	cb 01       	movw	r24, r22
    1ece:	f8 01       	movw	r30, r16
    1ed0:	91 83       	std	Z+1, r25	; 0x01
    1ed2:	80 83       	st	Z, r24
    1ed4:	de 01       	movw	r26, r28
    1ed6:	ad 59       	subi	r26, 0x9D	; 157
    1ed8:	bf 4f       	sbci	r27, 0xFF	; 255
    1eda:	fe 01       	movw	r30, r28
    1edc:	e9 59       	subi	r30, 0x99	; 153
    1ede:	ff 4f       	sbci	r31, 0xFF	; 255
    1ee0:	80 81       	ld	r24, Z
    1ee2:	91 81       	ldd	r25, Z+1	; 0x01
    1ee4:	8d 93       	st	X+, r24
    1ee6:	9c 93       	st	X, r25
    1ee8:	fe 01       	movw	r30, r28
    1eea:	ed 59       	subi	r30, 0x9D	; 157
    1eec:	ff 4f       	sbci	r31, 0xFF	; 255
    1eee:	80 81       	ld	r24, Z
    1ef0:	91 81       	ldd	r25, Z+1	; 0x01
    1ef2:	01 97       	sbiw	r24, 0x01	; 1
    1ef4:	f1 f7       	brne	.-4      	; 0x1ef2 <main+0xca8>
    1ef6:	fe 01       	movw	r30, r28
    1ef8:	ed 59       	subi	r30, 0x9D	; 157
    1efa:	ff 4f       	sbci	r31, 0xFF	; 255
    1efc:	91 83       	std	Z+1, r25	; 0x01
    1efe:	80 83       	st	Z, r24
				_delay_ms(1500);
				DIO_enuSetPinValue(DIO_u8_PORTD, DIO_u8_PIN6, DIO_u8_LOW);
    1f00:	83 e0       	ldi	r24, 0x03	; 3
    1f02:	66 e0       	ldi	r22, 0x06	; 6
    1f04:	40 e0       	ldi	r20, 0x00	; 0
    1f06:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    1f0a:	6b c4       	rjmp	.+2262   	; 0x27e2 <main+0x1598>
				break;
				//=========ROOM 3 DOOR===============
			case 5:
				DIO_enuSetPinValue(DIO_u8_PORTD, DIO_u8_PIN7, DIO_u8_HIGH);
    1f0c:	83 e0       	ldi	r24, 0x03	; 3
    1f0e:	67 e0       	ldi	r22, 0x07	; 7
    1f10:	41 e0       	ldi	r20, 0x01	; 1
    1f12:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    1f16:	fe 01       	movw	r30, r28
    1f18:	e1 5a       	subi	r30, 0xA1	; 161
    1f1a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f1c:	80 e0       	ldi	r24, 0x00	; 0
    1f1e:	90 e8       	ldi	r25, 0x80	; 128
    1f20:	ab eb       	ldi	r26, 0xBB	; 187
    1f22:	b4 e4       	ldi	r27, 0x44	; 68
    1f24:	80 83       	st	Z, r24
    1f26:	91 83       	std	Z+1, r25	; 0x01
    1f28:	a2 83       	std	Z+2, r26	; 0x02
    1f2a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f2c:	8e 01       	movw	r16, r28
    1f2e:	05 5a       	subi	r16, 0xA5	; 165
    1f30:	1f 4f       	sbci	r17, 0xFF	; 255
    1f32:	fe 01       	movw	r30, r28
    1f34:	e1 5a       	subi	r30, 0xA1	; 161
    1f36:	ff 4f       	sbci	r31, 0xFF	; 255
    1f38:	60 81       	ld	r22, Z
    1f3a:	71 81       	ldd	r23, Z+1	; 0x01
    1f3c:	82 81       	ldd	r24, Z+2	; 0x02
    1f3e:	93 81       	ldd	r25, Z+3	; 0x03
    1f40:	20 e0       	ldi	r18, 0x00	; 0
    1f42:	30 e0       	ldi	r19, 0x00	; 0
    1f44:	4a e7       	ldi	r20, 0x7A	; 122
    1f46:	55 e4       	ldi	r21, 0x45	; 69
    1f48:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1f4c:	dc 01       	movw	r26, r24
    1f4e:	cb 01       	movw	r24, r22
    1f50:	f8 01       	movw	r30, r16
    1f52:	80 83       	st	Z, r24
    1f54:	91 83       	std	Z+1, r25	; 0x01
    1f56:	a2 83       	std	Z+2, r26	; 0x02
    1f58:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1f5a:	fe 01       	movw	r30, r28
    1f5c:	e5 5a       	subi	r30, 0xA5	; 165
    1f5e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f60:	60 81       	ld	r22, Z
    1f62:	71 81       	ldd	r23, Z+1	; 0x01
    1f64:	82 81       	ldd	r24, Z+2	; 0x02
    1f66:	93 81       	ldd	r25, Z+3	; 0x03
    1f68:	20 e0       	ldi	r18, 0x00	; 0
    1f6a:	30 e0       	ldi	r19, 0x00	; 0
    1f6c:	40 e8       	ldi	r20, 0x80	; 128
    1f6e:	5f e3       	ldi	r21, 0x3F	; 63
    1f70:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1f74:	88 23       	and	r24, r24
    1f76:	44 f4       	brge	.+16     	; 0x1f88 <main+0xd3e>
		__ticks = 1;
    1f78:	fe 01       	movw	r30, r28
    1f7a:	e7 5a       	subi	r30, 0xA7	; 167
    1f7c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f7e:	81 e0       	ldi	r24, 0x01	; 1
    1f80:	90 e0       	ldi	r25, 0x00	; 0
    1f82:	91 83       	std	Z+1, r25	; 0x01
    1f84:	80 83       	st	Z, r24
    1f86:	64 c0       	rjmp	.+200    	; 0x2050 <main+0xe06>
	else if (__tmp > 65535)
    1f88:	fe 01       	movw	r30, r28
    1f8a:	e5 5a       	subi	r30, 0xA5	; 165
    1f8c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f8e:	60 81       	ld	r22, Z
    1f90:	71 81       	ldd	r23, Z+1	; 0x01
    1f92:	82 81       	ldd	r24, Z+2	; 0x02
    1f94:	93 81       	ldd	r25, Z+3	; 0x03
    1f96:	20 e0       	ldi	r18, 0x00	; 0
    1f98:	3f ef       	ldi	r19, 0xFF	; 255
    1f9a:	4f e7       	ldi	r20, 0x7F	; 127
    1f9c:	57 e4       	ldi	r21, 0x47	; 71
    1f9e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1fa2:	18 16       	cp	r1, r24
    1fa4:	0c f0       	brlt	.+2      	; 0x1fa8 <main+0xd5e>
    1fa6:	43 c0       	rjmp	.+134    	; 0x202e <main+0xde4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1fa8:	fe 01       	movw	r30, r28
    1faa:	e1 5a       	subi	r30, 0xA1	; 161
    1fac:	ff 4f       	sbci	r31, 0xFF	; 255
    1fae:	60 81       	ld	r22, Z
    1fb0:	71 81       	ldd	r23, Z+1	; 0x01
    1fb2:	82 81       	ldd	r24, Z+2	; 0x02
    1fb4:	93 81       	ldd	r25, Z+3	; 0x03
    1fb6:	20 e0       	ldi	r18, 0x00	; 0
    1fb8:	30 e0       	ldi	r19, 0x00	; 0
    1fba:	40 e2       	ldi	r20, 0x20	; 32
    1fbc:	51 e4       	ldi	r21, 0x41	; 65
    1fbe:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1fc2:	dc 01       	movw	r26, r24
    1fc4:	cb 01       	movw	r24, r22
    1fc6:	8e 01       	movw	r16, r28
    1fc8:	07 5a       	subi	r16, 0xA7	; 167
    1fca:	1f 4f       	sbci	r17, 0xFF	; 255
    1fcc:	bc 01       	movw	r22, r24
    1fce:	cd 01       	movw	r24, r26
    1fd0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1fd4:	dc 01       	movw	r26, r24
    1fd6:	cb 01       	movw	r24, r22
    1fd8:	f8 01       	movw	r30, r16
    1fda:	91 83       	std	Z+1, r25	; 0x01
    1fdc:	80 83       	st	Z, r24
    1fde:	1f c0       	rjmp	.+62     	; 0x201e <main+0xdd4>
    1fe0:	fe 01       	movw	r30, r28
    1fe2:	e9 5a       	subi	r30, 0xA9	; 169
    1fe4:	ff 4f       	sbci	r31, 0xFF	; 255
    1fe6:	80 e9       	ldi	r24, 0x90	; 144
    1fe8:	91 e0       	ldi	r25, 0x01	; 1
    1fea:	91 83       	std	Z+1, r25	; 0x01
    1fec:	80 83       	st	Z, r24
    1fee:	fe 01       	movw	r30, r28
    1ff0:	e9 5a       	subi	r30, 0xA9	; 169
    1ff2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ff4:	80 81       	ld	r24, Z
    1ff6:	91 81       	ldd	r25, Z+1	; 0x01
    1ff8:	01 97       	sbiw	r24, 0x01	; 1
    1ffa:	f1 f7       	brne	.-4      	; 0x1ff8 <main+0xdae>
    1ffc:	fe 01       	movw	r30, r28
    1ffe:	e9 5a       	subi	r30, 0xA9	; 169
    2000:	ff 4f       	sbci	r31, 0xFF	; 255
    2002:	91 83       	std	Z+1, r25	; 0x01
    2004:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2006:	de 01       	movw	r26, r28
    2008:	a7 5a       	subi	r26, 0xA7	; 167
    200a:	bf 4f       	sbci	r27, 0xFF	; 255
    200c:	fe 01       	movw	r30, r28
    200e:	e7 5a       	subi	r30, 0xA7	; 167
    2010:	ff 4f       	sbci	r31, 0xFF	; 255
    2012:	80 81       	ld	r24, Z
    2014:	91 81       	ldd	r25, Z+1	; 0x01
    2016:	01 97       	sbiw	r24, 0x01	; 1
    2018:	11 96       	adiw	r26, 0x01	; 1
    201a:	9c 93       	st	X, r25
    201c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    201e:	fe 01       	movw	r30, r28
    2020:	e7 5a       	subi	r30, 0xA7	; 167
    2022:	ff 4f       	sbci	r31, 0xFF	; 255
    2024:	80 81       	ld	r24, Z
    2026:	91 81       	ldd	r25, Z+1	; 0x01
    2028:	00 97       	sbiw	r24, 0x00	; 0
    202a:	d1 f6       	brne	.-76     	; 0x1fe0 <main+0xd96>
    202c:	27 c0       	rjmp	.+78     	; 0x207c <main+0xe32>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    202e:	8e 01       	movw	r16, r28
    2030:	07 5a       	subi	r16, 0xA7	; 167
    2032:	1f 4f       	sbci	r17, 0xFF	; 255
    2034:	fe 01       	movw	r30, r28
    2036:	e5 5a       	subi	r30, 0xA5	; 165
    2038:	ff 4f       	sbci	r31, 0xFF	; 255
    203a:	60 81       	ld	r22, Z
    203c:	71 81       	ldd	r23, Z+1	; 0x01
    203e:	82 81       	ldd	r24, Z+2	; 0x02
    2040:	93 81       	ldd	r25, Z+3	; 0x03
    2042:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2046:	dc 01       	movw	r26, r24
    2048:	cb 01       	movw	r24, r22
    204a:	f8 01       	movw	r30, r16
    204c:	91 83       	std	Z+1, r25	; 0x01
    204e:	80 83       	st	Z, r24
    2050:	de 01       	movw	r26, r28
    2052:	ab 5a       	subi	r26, 0xAB	; 171
    2054:	bf 4f       	sbci	r27, 0xFF	; 255
    2056:	fe 01       	movw	r30, r28
    2058:	e7 5a       	subi	r30, 0xA7	; 167
    205a:	ff 4f       	sbci	r31, 0xFF	; 255
    205c:	80 81       	ld	r24, Z
    205e:	91 81       	ldd	r25, Z+1	; 0x01
    2060:	8d 93       	st	X+, r24
    2062:	9c 93       	st	X, r25
    2064:	fe 01       	movw	r30, r28
    2066:	eb 5a       	subi	r30, 0xAB	; 171
    2068:	ff 4f       	sbci	r31, 0xFF	; 255
    206a:	80 81       	ld	r24, Z
    206c:	91 81       	ldd	r25, Z+1	; 0x01
    206e:	01 97       	sbiw	r24, 0x01	; 1
    2070:	f1 f7       	brne	.-4      	; 0x206e <main+0xe24>
    2072:	fe 01       	movw	r30, r28
    2074:	eb 5a       	subi	r30, 0xAB	; 171
    2076:	ff 4f       	sbci	r31, 0xFF	; 255
    2078:	91 83       	std	Z+1, r25	; 0x01
    207a:	80 83       	st	Z, r24
				_delay_ms(1500);
				DIO_enuSetPinValue(DIO_u8_PORTD, DIO_u8_PIN7, DIO_u8_LOW);
    207c:	83 e0       	ldi	r24, 0x03	; 3
    207e:	67 e0       	ldi	r22, 0x07	; 7
    2080:	40 e0       	ldi	r20, 0x00	; 0
    2082:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    2086:	ad c3       	rjmp	.+1882   	; 0x27e2 <main+0x1598>
				break;
				//=================================ROOMS=========================================
				//=========Room 1===============
				// lights on
			case 6:
				DIO_enuSetPinValue(DIO_u8_PORTD, DIO_u8_PIN0, DIO_u8_HIGH);
    2088:	83 e0       	ldi	r24, 0x03	; 3
    208a:	60 e0       	ldi	r22, 0x00	; 0
    208c:	41 e0       	ldi	r20, 0x01	; 1
    208e:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    2092:	a7 c3       	rjmp	.+1870   	; 0x27e2 <main+0x1598>
				break;
				// lights off
			case 7:
				DIO_enuSetPinValue(DIO_u8_PORTD, DIO_u8_PIN0, DIO_u8_LOW);
    2094:	83 e0       	ldi	r24, 0x03	; 3
    2096:	60 e0       	ldi	r22, 0x00	; 0
    2098:	40 e0       	ldi	r20, 0x00	; 0
    209a:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    209e:	a1 c3       	rjmp	.+1858   	; 0x27e2 <main+0x1598>
				break;
				// conditioner on
			case 8:
				DIO_enuSetPinValue(DIO_u8_PORTA, DIO_u8_PIN2, DIO_u8_HIGH);
    20a0:	80 e0       	ldi	r24, 0x00	; 0
    20a2:	62 e0       	ldi	r22, 0x02	; 2
    20a4:	41 e0       	ldi	r20, 0x01	; 1
    20a6:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    20aa:	9b c3       	rjmp	.+1846   	; 0x27e2 <main+0x1598>
				break;
				// conditioner off
			case 9:
				DIO_enuSetPinValue(DIO_u8_PORTA, DIO_u8_PIN2, DIO_u8_LOW);
    20ac:	80 e0       	ldi	r24, 0x00	; 0
    20ae:	62 e0       	ldi	r22, 0x02	; 2
    20b0:	40 e0       	ldi	r20, 0x00	; 0
    20b2:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    20b6:	95 c3       	rjmp	.+1834   	; 0x27e2 <main+0x1598>
				break;
				// tv on
			case 12:
				DIO_enuSetPinValue(DIO_u8_PORTA, DIO_u8_PIN1, DIO_u8_HIGH);
    20b8:	80 e0       	ldi	r24, 0x00	; 0
    20ba:	61 e0       	ldi	r22, 0x01	; 1
    20bc:	41 e0       	ldi	r20, 0x01	; 1
    20be:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    20c2:	8f c3       	rjmp	.+1822   	; 0x27e2 <main+0x1598>
				break;
				// tv off
			case 13:
				DIO_enuSetPinValue(DIO_u8_PORTA, DIO_u8_PIN1, DIO_u8_LOW);
    20c4:	80 e0       	ldi	r24, 0x00	; 0
    20c6:	61 e0       	ldi	r22, 0x01	; 1
    20c8:	40 e0       	ldi	r20, 0x00	; 0
    20ca:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    20ce:	89 c3       	rjmp	.+1810   	; 0x27e2 <main+0x1598>
				break;
				// wondow on
			case 14:
				DIO_enuSetPinValue(DIO_u8_PORTA, DIO_u8_PIN3, DIO_u8_HIGH);
    20d0:	80 e0       	ldi	r24, 0x00	; 0
    20d2:	63 e0       	ldi	r22, 0x03	; 3
    20d4:	41 e0       	ldi	r20, 0x01	; 1
    20d6:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    20da:	fe 01       	movw	r30, r28
    20dc:	ef 5a       	subi	r30, 0xAF	; 175
    20de:	ff 4f       	sbci	r31, 0xFF	; 255
    20e0:	80 e0       	ldi	r24, 0x00	; 0
    20e2:	90 e8       	ldi	r25, 0x80	; 128
    20e4:	ab eb       	ldi	r26, 0xBB	; 187
    20e6:	b4 e4       	ldi	r27, 0x44	; 68
    20e8:	80 83       	st	Z, r24
    20ea:	91 83       	std	Z+1, r25	; 0x01
    20ec:	a2 83       	std	Z+2, r26	; 0x02
    20ee:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    20f0:	8e 01       	movw	r16, r28
    20f2:	03 5b       	subi	r16, 0xB3	; 179
    20f4:	1f 4f       	sbci	r17, 0xFF	; 255
    20f6:	fe 01       	movw	r30, r28
    20f8:	ef 5a       	subi	r30, 0xAF	; 175
    20fa:	ff 4f       	sbci	r31, 0xFF	; 255
    20fc:	60 81       	ld	r22, Z
    20fe:	71 81       	ldd	r23, Z+1	; 0x01
    2100:	82 81       	ldd	r24, Z+2	; 0x02
    2102:	93 81       	ldd	r25, Z+3	; 0x03
    2104:	20 e0       	ldi	r18, 0x00	; 0
    2106:	30 e0       	ldi	r19, 0x00	; 0
    2108:	4a e7       	ldi	r20, 0x7A	; 122
    210a:	55 e4       	ldi	r21, 0x45	; 69
    210c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2110:	dc 01       	movw	r26, r24
    2112:	cb 01       	movw	r24, r22
    2114:	f8 01       	movw	r30, r16
    2116:	80 83       	st	Z, r24
    2118:	91 83       	std	Z+1, r25	; 0x01
    211a:	a2 83       	std	Z+2, r26	; 0x02
    211c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    211e:	fe 01       	movw	r30, r28
    2120:	e3 5b       	subi	r30, 0xB3	; 179
    2122:	ff 4f       	sbci	r31, 0xFF	; 255
    2124:	60 81       	ld	r22, Z
    2126:	71 81       	ldd	r23, Z+1	; 0x01
    2128:	82 81       	ldd	r24, Z+2	; 0x02
    212a:	93 81       	ldd	r25, Z+3	; 0x03
    212c:	20 e0       	ldi	r18, 0x00	; 0
    212e:	30 e0       	ldi	r19, 0x00	; 0
    2130:	40 e8       	ldi	r20, 0x80	; 128
    2132:	5f e3       	ldi	r21, 0x3F	; 63
    2134:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2138:	88 23       	and	r24, r24
    213a:	44 f4       	brge	.+16     	; 0x214c <main+0xf02>
		__ticks = 1;
    213c:	fe 01       	movw	r30, r28
    213e:	e5 5b       	subi	r30, 0xB5	; 181
    2140:	ff 4f       	sbci	r31, 0xFF	; 255
    2142:	81 e0       	ldi	r24, 0x01	; 1
    2144:	90 e0       	ldi	r25, 0x00	; 0
    2146:	91 83       	std	Z+1, r25	; 0x01
    2148:	80 83       	st	Z, r24
    214a:	64 c0       	rjmp	.+200    	; 0x2214 <main+0xfca>
	else if (__tmp > 65535)
    214c:	fe 01       	movw	r30, r28
    214e:	e3 5b       	subi	r30, 0xB3	; 179
    2150:	ff 4f       	sbci	r31, 0xFF	; 255
    2152:	60 81       	ld	r22, Z
    2154:	71 81       	ldd	r23, Z+1	; 0x01
    2156:	82 81       	ldd	r24, Z+2	; 0x02
    2158:	93 81       	ldd	r25, Z+3	; 0x03
    215a:	20 e0       	ldi	r18, 0x00	; 0
    215c:	3f ef       	ldi	r19, 0xFF	; 255
    215e:	4f e7       	ldi	r20, 0x7F	; 127
    2160:	57 e4       	ldi	r21, 0x47	; 71
    2162:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2166:	18 16       	cp	r1, r24
    2168:	0c f0       	brlt	.+2      	; 0x216c <main+0xf22>
    216a:	43 c0       	rjmp	.+134    	; 0x21f2 <main+0xfa8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    216c:	fe 01       	movw	r30, r28
    216e:	ef 5a       	subi	r30, 0xAF	; 175
    2170:	ff 4f       	sbci	r31, 0xFF	; 255
    2172:	60 81       	ld	r22, Z
    2174:	71 81       	ldd	r23, Z+1	; 0x01
    2176:	82 81       	ldd	r24, Z+2	; 0x02
    2178:	93 81       	ldd	r25, Z+3	; 0x03
    217a:	20 e0       	ldi	r18, 0x00	; 0
    217c:	30 e0       	ldi	r19, 0x00	; 0
    217e:	40 e2       	ldi	r20, 0x20	; 32
    2180:	51 e4       	ldi	r21, 0x41	; 65
    2182:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2186:	dc 01       	movw	r26, r24
    2188:	cb 01       	movw	r24, r22
    218a:	8e 01       	movw	r16, r28
    218c:	05 5b       	subi	r16, 0xB5	; 181
    218e:	1f 4f       	sbci	r17, 0xFF	; 255
    2190:	bc 01       	movw	r22, r24
    2192:	cd 01       	movw	r24, r26
    2194:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2198:	dc 01       	movw	r26, r24
    219a:	cb 01       	movw	r24, r22
    219c:	f8 01       	movw	r30, r16
    219e:	91 83       	std	Z+1, r25	; 0x01
    21a0:	80 83       	st	Z, r24
    21a2:	1f c0       	rjmp	.+62     	; 0x21e2 <main+0xf98>
    21a4:	fe 01       	movw	r30, r28
    21a6:	e7 5b       	subi	r30, 0xB7	; 183
    21a8:	ff 4f       	sbci	r31, 0xFF	; 255
    21aa:	80 e9       	ldi	r24, 0x90	; 144
    21ac:	91 e0       	ldi	r25, 0x01	; 1
    21ae:	91 83       	std	Z+1, r25	; 0x01
    21b0:	80 83       	st	Z, r24
    21b2:	fe 01       	movw	r30, r28
    21b4:	e7 5b       	subi	r30, 0xB7	; 183
    21b6:	ff 4f       	sbci	r31, 0xFF	; 255
    21b8:	80 81       	ld	r24, Z
    21ba:	91 81       	ldd	r25, Z+1	; 0x01
    21bc:	01 97       	sbiw	r24, 0x01	; 1
    21be:	f1 f7       	brne	.-4      	; 0x21bc <main+0xf72>
    21c0:	fe 01       	movw	r30, r28
    21c2:	e7 5b       	subi	r30, 0xB7	; 183
    21c4:	ff 4f       	sbci	r31, 0xFF	; 255
    21c6:	91 83       	std	Z+1, r25	; 0x01
    21c8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    21ca:	de 01       	movw	r26, r28
    21cc:	a5 5b       	subi	r26, 0xB5	; 181
    21ce:	bf 4f       	sbci	r27, 0xFF	; 255
    21d0:	fe 01       	movw	r30, r28
    21d2:	e5 5b       	subi	r30, 0xB5	; 181
    21d4:	ff 4f       	sbci	r31, 0xFF	; 255
    21d6:	80 81       	ld	r24, Z
    21d8:	91 81       	ldd	r25, Z+1	; 0x01
    21da:	01 97       	sbiw	r24, 0x01	; 1
    21dc:	11 96       	adiw	r26, 0x01	; 1
    21de:	9c 93       	st	X, r25
    21e0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    21e2:	fe 01       	movw	r30, r28
    21e4:	e5 5b       	subi	r30, 0xB5	; 181
    21e6:	ff 4f       	sbci	r31, 0xFF	; 255
    21e8:	80 81       	ld	r24, Z
    21ea:	91 81       	ldd	r25, Z+1	; 0x01
    21ec:	00 97       	sbiw	r24, 0x00	; 0
    21ee:	d1 f6       	brne	.-76     	; 0x21a4 <main+0xf5a>
    21f0:	27 c0       	rjmp	.+78     	; 0x2240 <main+0xff6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    21f2:	8e 01       	movw	r16, r28
    21f4:	05 5b       	subi	r16, 0xB5	; 181
    21f6:	1f 4f       	sbci	r17, 0xFF	; 255
    21f8:	fe 01       	movw	r30, r28
    21fa:	e3 5b       	subi	r30, 0xB3	; 179
    21fc:	ff 4f       	sbci	r31, 0xFF	; 255
    21fe:	60 81       	ld	r22, Z
    2200:	71 81       	ldd	r23, Z+1	; 0x01
    2202:	82 81       	ldd	r24, Z+2	; 0x02
    2204:	93 81       	ldd	r25, Z+3	; 0x03
    2206:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    220a:	dc 01       	movw	r26, r24
    220c:	cb 01       	movw	r24, r22
    220e:	f8 01       	movw	r30, r16
    2210:	91 83       	std	Z+1, r25	; 0x01
    2212:	80 83       	st	Z, r24
    2214:	de 01       	movw	r26, r28
    2216:	a9 5b       	subi	r26, 0xB9	; 185
    2218:	bf 4f       	sbci	r27, 0xFF	; 255
    221a:	fe 01       	movw	r30, r28
    221c:	e5 5b       	subi	r30, 0xB5	; 181
    221e:	ff 4f       	sbci	r31, 0xFF	; 255
    2220:	80 81       	ld	r24, Z
    2222:	91 81       	ldd	r25, Z+1	; 0x01
    2224:	8d 93       	st	X+, r24
    2226:	9c 93       	st	X, r25
    2228:	fe 01       	movw	r30, r28
    222a:	e9 5b       	subi	r30, 0xB9	; 185
    222c:	ff 4f       	sbci	r31, 0xFF	; 255
    222e:	80 81       	ld	r24, Z
    2230:	91 81       	ldd	r25, Z+1	; 0x01
    2232:	01 97       	sbiw	r24, 0x01	; 1
    2234:	f1 f7       	brne	.-4      	; 0x2232 <main+0xfe8>
    2236:	fe 01       	movw	r30, r28
    2238:	e9 5b       	subi	r30, 0xB9	; 185
    223a:	ff 4f       	sbci	r31, 0xFF	; 255
    223c:	91 83       	std	Z+1, r25	; 0x01
    223e:	80 83       	st	Z, r24
				_delay_ms(1500);
				DIO_enuSetPinValue(DIO_u8_PORTA, DIO_u8_PIN3, DIO_u8_LOW);
    2240:	80 e0       	ldi	r24, 0x00	; 0
    2242:	63 e0       	ldi	r22, 0x03	; 3
    2244:	40 e0       	ldi	r20, 0x00	; 0
    2246:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    224a:	cb c2       	rjmp	.+1430   	; 0x27e2 <main+0x1598>
				break;
				// wondow off
			case 15:
				DIO_enuSetPinValue(DIO_u8_PORTA, DIO_u8_PIN4, DIO_u8_HIGH);
    224c:	80 e0       	ldi	r24, 0x00	; 0
    224e:	64 e0       	ldi	r22, 0x04	; 4
    2250:	41 e0       	ldi	r20, 0x01	; 1
    2252:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    2256:	fe 01       	movw	r30, r28
    2258:	ed 5b       	subi	r30, 0xBD	; 189
    225a:	ff 4f       	sbci	r31, 0xFF	; 255
    225c:	80 e0       	ldi	r24, 0x00	; 0
    225e:	90 e8       	ldi	r25, 0x80	; 128
    2260:	ab eb       	ldi	r26, 0xBB	; 187
    2262:	b4 e4       	ldi	r27, 0x44	; 68
    2264:	80 83       	st	Z, r24
    2266:	91 83       	std	Z+1, r25	; 0x01
    2268:	a2 83       	std	Z+2, r26	; 0x02
    226a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    226c:	8e 01       	movw	r16, r28
    226e:	01 5c       	subi	r16, 0xC1	; 193
    2270:	1f 4f       	sbci	r17, 0xFF	; 255
    2272:	fe 01       	movw	r30, r28
    2274:	ed 5b       	subi	r30, 0xBD	; 189
    2276:	ff 4f       	sbci	r31, 0xFF	; 255
    2278:	60 81       	ld	r22, Z
    227a:	71 81       	ldd	r23, Z+1	; 0x01
    227c:	82 81       	ldd	r24, Z+2	; 0x02
    227e:	93 81       	ldd	r25, Z+3	; 0x03
    2280:	20 e0       	ldi	r18, 0x00	; 0
    2282:	30 e0       	ldi	r19, 0x00	; 0
    2284:	4a e7       	ldi	r20, 0x7A	; 122
    2286:	55 e4       	ldi	r21, 0x45	; 69
    2288:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    228c:	dc 01       	movw	r26, r24
    228e:	cb 01       	movw	r24, r22
    2290:	f8 01       	movw	r30, r16
    2292:	80 83       	st	Z, r24
    2294:	91 83       	std	Z+1, r25	; 0x01
    2296:	a2 83       	std	Z+2, r26	; 0x02
    2298:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    229a:	fe 01       	movw	r30, r28
    229c:	ff 96       	adiw	r30, 0x3f	; 63
    229e:	60 81       	ld	r22, Z
    22a0:	71 81       	ldd	r23, Z+1	; 0x01
    22a2:	82 81       	ldd	r24, Z+2	; 0x02
    22a4:	93 81       	ldd	r25, Z+3	; 0x03
    22a6:	20 e0       	ldi	r18, 0x00	; 0
    22a8:	30 e0       	ldi	r19, 0x00	; 0
    22aa:	40 e8       	ldi	r20, 0x80	; 128
    22ac:	5f e3       	ldi	r21, 0x3F	; 63
    22ae:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    22b2:	88 23       	and	r24, r24
    22b4:	2c f4       	brge	.+10     	; 0x22c0 <main+0x1076>
		__ticks = 1;
    22b6:	81 e0       	ldi	r24, 0x01	; 1
    22b8:	90 e0       	ldi	r25, 0x00	; 0
    22ba:	9e af       	std	Y+62, r25	; 0x3e
    22bc:	8d af       	std	Y+61, r24	; 0x3d
    22be:	46 c0       	rjmp	.+140    	; 0x234c <main+0x1102>
	else if (__tmp > 65535)
    22c0:	fe 01       	movw	r30, r28
    22c2:	ff 96       	adiw	r30, 0x3f	; 63
    22c4:	60 81       	ld	r22, Z
    22c6:	71 81       	ldd	r23, Z+1	; 0x01
    22c8:	82 81       	ldd	r24, Z+2	; 0x02
    22ca:	93 81       	ldd	r25, Z+3	; 0x03
    22cc:	20 e0       	ldi	r18, 0x00	; 0
    22ce:	3f ef       	ldi	r19, 0xFF	; 255
    22d0:	4f e7       	ldi	r20, 0x7F	; 127
    22d2:	57 e4       	ldi	r21, 0x47	; 71
    22d4:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    22d8:	18 16       	cp	r1, r24
    22da:	64 f5       	brge	.+88     	; 0x2334 <main+0x10ea>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    22dc:	fe 01       	movw	r30, r28
    22de:	ed 5b       	subi	r30, 0xBD	; 189
    22e0:	ff 4f       	sbci	r31, 0xFF	; 255
    22e2:	60 81       	ld	r22, Z
    22e4:	71 81       	ldd	r23, Z+1	; 0x01
    22e6:	82 81       	ldd	r24, Z+2	; 0x02
    22e8:	93 81       	ldd	r25, Z+3	; 0x03
    22ea:	20 e0       	ldi	r18, 0x00	; 0
    22ec:	30 e0       	ldi	r19, 0x00	; 0
    22ee:	40 e2       	ldi	r20, 0x20	; 32
    22f0:	51 e4       	ldi	r21, 0x41	; 65
    22f2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    22f6:	dc 01       	movw	r26, r24
    22f8:	cb 01       	movw	r24, r22
    22fa:	bc 01       	movw	r22, r24
    22fc:	cd 01       	movw	r24, r26
    22fe:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2302:	dc 01       	movw	r26, r24
    2304:	cb 01       	movw	r24, r22
    2306:	9e af       	std	Y+62, r25	; 0x3e
    2308:	8d af       	std	Y+61, r24	; 0x3d
    230a:	0f c0       	rjmp	.+30     	; 0x232a <main+0x10e0>
    230c:	80 e9       	ldi	r24, 0x90	; 144
    230e:	91 e0       	ldi	r25, 0x01	; 1
    2310:	9c af       	std	Y+60, r25	; 0x3c
    2312:	8b af       	std	Y+59, r24	; 0x3b
    2314:	8b ad       	ldd	r24, Y+59	; 0x3b
    2316:	9c ad       	ldd	r25, Y+60	; 0x3c
    2318:	01 97       	sbiw	r24, 0x01	; 1
    231a:	f1 f7       	brne	.-4      	; 0x2318 <main+0x10ce>
    231c:	9c af       	std	Y+60, r25	; 0x3c
    231e:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2320:	8d ad       	ldd	r24, Y+61	; 0x3d
    2322:	9e ad       	ldd	r25, Y+62	; 0x3e
    2324:	01 97       	sbiw	r24, 0x01	; 1
    2326:	9e af       	std	Y+62, r25	; 0x3e
    2328:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    232a:	8d ad       	ldd	r24, Y+61	; 0x3d
    232c:	9e ad       	ldd	r25, Y+62	; 0x3e
    232e:	00 97       	sbiw	r24, 0x00	; 0
    2330:	69 f7       	brne	.-38     	; 0x230c <main+0x10c2>
    2332:	16 c0       	rjmp	.+44     	; 0x2360 <main+0x1116>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2334:	fe 01       	movw	r30, r28
    2336:	ff 96       	adiw	r30, 0x3f	; 63
    2338:	60 81       	ld	r22, Z
    233a:	71 81       	ldd	r23, Z+1	; 0x01
    233c:	82 81       	ldd	r24, Z+2	; 0x02
    233e:	93 81       	ldd	r25, Z+3	; 0x03
    2340:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2344:	dc 01       	movw	r26, r24
    2346:	cb 01       	movw	r24, r22
    2348:	9e af       	std	Y+62, r25	; 0x3e
    234a:	8d af       	std	Y+61, r24	; 0x3d
    234c:	8d ad       	ldd	r24, Y+61	; 0x3d
    234e:	9e ad       	ldd	r25, Y+62	; 0x3e
    2350:	9a af       	std	Y+58, r25	; 0x3a
    2352:	89 af       	std	Y+57, r24	; 0x39
    2354:	89 ad       	ldd	r24, Y+57	; 0x39
    2356:	9a ad       	ldd	r25, Y+58	; 0x3a
    2358:	01 97       	sbiw	r24, 0x01	; 1
    235a:	f1 f7       	brne	.-4      	; 0x2358 <main+0x110e>
    235c:	9a af       	std	Y+58, r25	; 0x3a
    235e:	89 af       	std	Y+57, r24	; 0x39
				_delay_ms(1500);
				DIO_enuSetPinValue(DIO_u8_PORTA, DIO_u8_PIN4, DIO_u8_LOW);
    2360:	80 e0       	ldi	r24, 0x00	; 0
    2362:	64 e0       	ldi	r22, 0x04	; 4
    2364:	40 e0       	ldi	r20, 0x00	; 0
    2366:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    236a:	3b c2       	rjmp	.+1142   	; 0x27e2 <main+0x1598>
				break;

				//=========Room 2===============
				// lights on
			case 16:
				DIO_enuSetPinValue(DIO_u8_PORTA, DIO_u8_PIN5, DIO_u8_HIGH);
    236c:	80 e0       	ldi	r24, 0x00	; 0
    236e:	65 e0       	ldi	r22, 0x05	; 5
    2370:	41 e0       	ldi	r20, 0x01	; 1
    2372:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    2376:	35 c2       	rjmp	.+1130   	; 0x27e2 <main+0x1598>
				break;
				// lights off
			case 17:
				DIO_enuSetPinValue(DIO_u8_PORTA, DIO_u8_PIN5, DIO_u8_LOW);
    2378:	80 e0       	ldi	r24, 0x00	; 0
    237a:	65 e0       	ldi	r22, 0x05	; 5
    237c:	40 e0       	ldi	r20, 0x00	; 0
    237e:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    2382:	2f c2       	rjmp	.+1118   	; 0x27e2 <main+0x1598>
				break;
				// conditioner on
			case 18:
				DIO_enuSetPinValue(DIO_u8_PORTA, DIO_u8_PIN6, DIO_u8_HIGH);
    2384:	80 e0       	ldi	r24, 0x00	; 0
    2386:	66 e0       	ldi	r22, 0x06	; 6
    2388:	41 e0       	ldi	r20, 0x01	; 1
    238a:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    238e:	29 c2       	rjmp	.+1106   	; 0x27e2 <main+0x1598>
				break;
				// conditioner off
			case 19:
				DIO_enuSetPinValue(DIO_u8_PORTA, DIO_u8_PIN6, DIO_u8_LOW);
    2390:	80 e0       	ldi	r24, 0x00	; 0
    2392:	66 e0       	ldi	r22, 0x06	; 6
    2394:	40 e0       	ldi	r20, 0x00	; 0
    2396:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    239a:	23 c2       	rjmp	.+1094   	; 0x27e2 <main+0x1598>
				break;
				// tv on
			case 22:
				DIO_enuSetPinValue(DIO_u8_PORTB, DIO_u8_PIN0, DIO_u8_HIGH);
    239c:	81 e0       	ldi	r24, 0x01	; 1
    239e:	60 e0       	ldi	r22, 0x00	; 0
    23a0:	41 e0       	ldi	r20, 0x01	; 1
    23a2:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    23a6:	1d c2       	rjmp	.+1082   	; 0x27e2 <main+0x1598>
				break;
				// tv off
			case 23:
				DIO_enuSetPinValue(DIO_u8_PORTB, DIO_u8_PIN0, DIO_u8_LOW);
    23a8:	81 e0       	ldi	r24, 0x01	; 1
    23aa:	60 e0       	ldi	r22, 0x00	; 0
    23ac:	40 e0       	ldi	r20, 0x00	; 0
    23ae:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    23b2:	17 c2       	rjmp	.+1070   	; 0x27e2 <main+0x1598>
				break;
				// wondow on
			case 24:
				DIO_enuSetPinValue(DIO_u8_PORTB, DIO_u8_PIN1, DIO_u8_HIGH);
    23b4:	81 e0       	ldi	r24, 0x01	; 1
    23b6:	61 e0       	ldi	r22, 0x01	; 1
    23b8:	41 e0       	ldi	r20, 0x01	; 1
    23ba:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    23be:	80 e0       	ldi	r24, 0x00	; 0
    23c0:	90 e8       	ldi	r25, 0x80	; 128
    23c2:	ab eb       	ldi	r26, 0xBB	; 187
    23c4:	b4 e4       	ldi	r27, 0x44	; 68
    23c6:	8d ab       	std	Y+53, r24	; 0x35
    23c8:	9e ab       	std	Y+54, r25	; 0x36
    23ca:	af ab       	std	Y+55, r26	; 0x37
    23cc:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    23ce:	6d a9       	ldd	r22, Y+53	; 0x35
    23d0:	7e a9       	ldd	r23, Y+54	; 0x36
    23d2:	8f a9       	ldd	r24, Y+55	; 0x37
    23d4:	98 ad       	ldd	r25, Y+56	; 0x38
    23d6:	20 e0       	ldi	r18, 0x00	; 0
    23d8:	30 e0       	ldi	r19, 0x00	; 0
    23da:	4a e7       	ldi	r20, 0x7A	; 122
    23dc:	55 e4       	ldi	r21, 0x45	; 69
    23de:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    23e2:	dc 01       	movw	r26, r24
    23e4:	cb 01       	movw	r24, r22
    23e6:	89 ab       	std	Y+49, r24	; 0x31
    23e8:	9a ab       	std	Y+50, r25	; 0x32
    23ea:	ab ab       	std	Y+51, r26	; 0x33
    23ec:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    23ee:	69 a9       	ldd	r22, Y+49	; 0x31
    23f0:	7a a9       	ldd	r23, Y+50	; 0x32
    23f2:	8b a9       	ldd	r24, Y+51	; 0x33
    23f4:	9c a9       	ldd	r25, Y+52	; 0x34
    23f6:	20 e0       	ldi	r18, 0x00	; 0
    23f8:	30 e0       	ldi	r19, 0x00	; 0
    23fa:	40 e8       	ldi	r20, 0x80	; 128
    23fc:	5f e3       	ldi	r21, 0x3F	; 63
    23fe:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2402:	88 23       	and	r24, r24
    2404:	2c f4       	brge	.+10     	; 0x2410 <main+0x11c6>
		__ticks = 1;
    2406:	81 e0       	ldi	r24, 0x01	; 1
    2408:	90 e0       	ldi	r25, 0x00	; 0
    240a:	98 ab       	std	Y+48, r25	; 0x30
    240c:	8f a7       	std	Y+47, r24	; 0x2f
    240e:	3f c0       	rjmp	.+126    	; 0x248e <main+0x1244>
	else if (__tmp > 65535)
    2410:	69 a9       	ldd	r22, Y+49	; 0x31
    2412:	7a a9       	ldd	r23, Y+50	; 0x32
    2414:	8b a9       	ldd	r24, Y+51	; 0x33
    2416:	9c a9       	ldd	r25, Y+52	; 0x34
    2418:	20 e0       	ldi	r18, 0x00	; 0
    241a:	3f ef       	ldi	r19, 0xFF	; 255
    241c:	4f e7       	ldi	r20, 0x7F	; 127
    241e:	57 e4       	ldi	r21, 0x47	; 71
    2420:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2424:	18 16       	cp	r1, r24
    2426:	4c f5       	brge	.+82     	; 0x247a <main+0x1230>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2428:	6d a9       	ldd	r22, Y+53	; 0x35
    242a:	7e a9       	ldd	r23, Y+54	; 0x36
    242c:	8f a9       	ldd	r24, Y+55	; 0x37
    242e:	98 ad       	ldd	r25, Y+56	; 0x38
    2430:	20 e0       	ldi	r18, 0x00	; 0
    2432:	30 e0       	ldi	r19, 0x00	; 0
    2434:	40 e2       	ldi	r20, 0x20	; 32
    2436:	51 e4       	ldi	r21, 0x41	; 65
    2438:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    243c:	dc 01       	movw	r26, r24
    243e:	cb 01       	movw	r24, r22
    2440:	bc 01       	movw	r22, r24
    2442:	cd 01       	movw	r24, r26
    2444:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2448:	dc 01       	movw	r26, r24
    244a:	cb 01       	movw	r24, r22
    244c:	98 ab       	std	Y+48, r25	; 0x30
    244e:	8f a7       	std	Y+47, r24	; 0x2f
    2450:	0f c0       	rjmp	.+30     	; 0x2470 <main+0x1226>
    2452:	80 e9       	ldi	r24, 0x90	; 144
    2454:	91 e0       	ldi	r25, 0x01	; 1
    2456:	9e a7       	std	Y+46, r25	; 0x2e
    2458:	8d a7       	std	Y+45, r24	; 0x2d
    245a:	8d a5       	ldd	r24, Y+45	; 0x2d
    245c:	9e a5       	ldd	r25, Y+46	; 0x2e
    245e:	01 97       	sbiw	r24, 0x01	; 1
    2460:	f1 f7       	brne	.-4      	; 0x245e <main+0x1214>
    2462:	9e a7       	std	Y+46, r25	; 0x2e
    2464:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2466:	8f a5       	ldd	r24, Y+47	; 0x2f
    2468:	98 a9       	ldd	r25, Y+48	; 0x30
    246a:	01 97       	sbiw	r24, 0x01	; 1
    246c:	98 ab       	std	Y+48, r25	; 0x30
    246e:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2470:	8f a5       	ldd	r24, Y+47	; 0x2f
    2472:	98 a9       	ldd	r25, Y+48	; 0x30
    2474:	00 97       	sbiw	r24, 0x00	; 0
    2476:	69 f7       	brne	.-38     	; 0x2452 <main+0x1208>
    2478:	14 c0       	rjmp	.+40     	; 0x24a2 <main+0x1258>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    247a:	69 a9       	ldd	r22, Y+49	; 0x31
    247c:	7a a9       	ldd	r23, Y+50	; 0x32
    247e:	8b a9       	ldd	r24, Y+51	; 0x33
    2480:	9c a9       	ldd	r25, Y+52	; 0x34
    2482:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2486:	dc 01       	movw	r26, r24
    2488:	cb 01       	movw	r24, r22
    248a:	98 ab       	std	Y+48, r25	; 0x30
    248c:	8f a7       	std	Y+47, r24	; 0x2f
    248e:	8f a5       	ldd	r24, Y+47	; 0x2f
    2490:	98 a9       	ldd	r25, Y+48	; 0x30
    2492:	9c a7       	std	Y+44, r25	; 0x2c
    2494:	8b a7       	std	Y+43, r24	; 0x2b
    2496:	8b a5       	ldd	r24, Y+43	; 0x2b
    2498:	9c a5       	ldd	r25, Y+44	; 0x2c
    249a:	01 97       	sbiw	r24, 0x01	; 1
    249c:	f1 f7       	brne	.-4      	; 0x249a <main+0x1250>
    249e:	9c a7       	std	Y+44, r25	; 0x2c
    24a0:	8b a7       	std	Y+43, r24	; 0x2b
				_delay_ms(1500);
				DIO_enuSetPinValue(DIO_u8_PORTB, DIO_u8_PIN1, DIO_u8_LOW);
    24a2:	81 e0       	ldi	r24, 0x01	; 1
    24a4:	61 e0       	ldi	r22, 0x01	; 1
    24a6:	40 e0       	ldi	r20, 0x00	; 0
    24a8:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    24ac:	9a c1       	rjmp	.+820    	; 0x27e2 <main+0x1598>
				break;
				// wondow off
			case 25:
				DIO_enuSetPinValue(DIO_u8_PORTB, DIO_u8_PIN2, DIO_u8_HIGH);
    24ae:	81 e0       	ldi	r24, 0x01	; 1
    24b0:	62 e0       	ldi	r22, 0x02	; 2
    24b2:	41 e0       	ldi	r20, 0x01	; 1
    24b4:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    24b8:	80 e0       	ldi	r24, 0x00	; 0
    24ba:	90 e8       	ldi	r25, 0x80	; 128
    24bc:	ab eb       	ldi	r26, 0xBB	; 187
    24be:	b4 e4       	ldi	r27, 0x44	; 68
    24c0:	8f a3       	std	Y+39, r24	; 0x27
    24c2:	98 a7       	std	Y+40, r25	; 0x28
    24c4:	a9 a7       	std	Y+41, r26	; 0x29
    24c6:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    24c8:	6f a1       	ldd	r22, Y+39	; 0x27
    24ca:	78 a5       	ldd	r23, Y+40	; 0x28
    24cc:	89 a5       	ldd	r24, Y+41	; 0x29
    24ce:	9a a5       	ldd	r25, Y+42	; 0x2a
    24d0:	20 e0       	ldi	r18, 0x00	; 0
    24d2:	30 e0       	ldi	r19, 0x00	; 0
    24d4:	4a e7       	ldi	r20, 0x7A	; 122
    24d6:	55 e4       	ldi	r21, 0x45	; 69
    24d8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    24dc:	dc 01       	movw	r26, r24
    24de:	cb 01       	movw	r24, r22
    24e0:	8b a3       	std	Y+35, r24	; 0x23
    24e2:	9c a3       	std	Y+36, r25	; 0x24
    24e4:	ad a3       	std	Y+37, r26	; 0x25
    24e6:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    24e8:	6b a1       	ldd	r22, Y+35	; 0x23
    24ea:	7c a1       	ldd	r23, Y+36	; 0x24
    24ec:	8d a1       	ldd	r24, Y+37	; 0x25
    24ee:	9e a1       	ldd	r25, Y+38	; 0x26
    24f0:	20 e0       	ldi	r18, 0x00	; 0
    24f2:	30 e0       	ldi	r19, 0x00	; 0
    24f4:	40 e8       	ldi	r20, 0x80	; 128
    24f6:	5f e3       	ldi	r21, 0x3F	; 63
    24f8:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    24fc:	88 23       	and	r24, r24
    24fe:	2c f4       	brge	.+10     	; 0x250a <main+0x12c0>
		__ticks = 1;
    2500:	81 e0       	ldi	r24, 0x01	; 1
    2502:	90 e0       	ldi	r25, 0x00	; 0
    2504:	9a a3       	std	Y+34, r25	; 0x22
    2506:	89 a3       	std	Y+33, r24	; 0x21
    2508:	3f c0       	rjmp	.+126    	; 0x2588 <main+0x133e>
	else if (__tmp > 65535)
    250a:	6b a1       	ldd	r22, Y+35	; 0x23
    250c:	7c a1       	ldd	r23, Y+36	; 0x24
    250e:	8d a1       	ldd	r24, Y+37	; 0x25
    2510:	9e a1       	ldd	r25, Y+38	; 0x26
    2512:	20 e0       	ldi	r18, 0x00	; 0
    2514:	3f ef       	ldi	r19, 0xFF	; 255
    2516:	4f e7       	ldi	r20, 0x7F	; 127
    2518:	57 e4       	ldi	r21, 0x47	; 71
    251a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    251e:	18 16       	cp	r1, r24
    2520:	4c f5       	brge	.+82     	; 0x2574 <main+0x132a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2522:	6f a1       	ldd	r22, Y+39	; 0x27
    2524:	78 a5       	ldd	r23, Y+40	; 0x28
    2526:	89 a5       	ldd	r24, Y+41	; 0x29
    2528:	9a a5       	ldd	r25, Y+42	; 0x2a
    252a:	20 e0       	ldi	r18, 0x00	; 0
    252c:	30 e0       	ldi	r19, 0x00	; 0
    252e:	40 e2       	ldi	r20, 0x20	; 32
    2530:	51 e4       	ldi	r21, 0x41	; 65
    2532:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2536:	dc 01       	movw	r26, r24
    2538:	cb 01       	movw	r24, r22
    253a:	bc 01       	movw	r22, r24
    253c:	cd 01       	movw	r24, r26
    253e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2542:	dc 01       	movw	r26, r24
    2544:	cb 01       	movw	r24, r22
    2546:	9a a3       	std	Y+34, r25	; 0x22
    2548:	89 a3       	std	Y+33, r24	; 0x21
    254a:	0f c0       	rjmp	.+30     	; 0x256a <main+0x1320>
    254c:	80 e9       	ldi	r24, 0x90	; 144
    254e:	91 e0       	ldi	r25, 0x01	; 1
    2550:	98 a3       	std	Y+32, r25	; 0x20
    2552:	8f 8f       	std	Y+31, r24	; 0x1f
    2554:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2556:	98 a1       	ldd	r25, Y+32	; 0x20
    2558:	01 97       	sbiw	r24, 0x01	; 1
    255a:	f1 f7       	brne	.-4      	; 0x2558 <main+0x130e>
    255c:	98 a3       	std	Y+32, r25	; 0x20
    255e:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2560:	89 a1       	ldd	r24, Y+33	; 0x21
    2562:	9a a1       	ldd	r25, Y+34	; 0x22
    2564:	01 97       	sbiw	r24, 0x01	; 1
    2566:	9a a3       	std	Y+34, r25	; 0x22
    2568:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    256a:	89 a1       	ldd	r24, Y+33	; 0x21
    256c:	9a a1       	ldd	r25, Y+34	; 0x22
    256e:	00 97       	sbiw	r24, 0x00	; 0
    2570:	69 f7       	brne	.-38     	; 0x254c <main+0x1302>
    2572:	14 c0       	rjmp	.+40     	; 0x259c <main+0x1352>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2574:	6b a1       	ldd	r22, Y+35	; 0x23
    2576:	7c a1       	ldd	r23, Y+36	; 0x24
    2578:	8d a1       	ldd	r24, Y+37	; 0x25
    257a:	9e a1       	ldd	r25, Y+38	; 0x26
    257c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2580:	dc 01       	movw	r26, r24
    2582:	cb 01       	movw	r24, r22
    2584:	9a a3       	std	Y+34, r25	; 0x22
    2586:	89 a3       	std	Y+33, r24	; 0x21
    2588:	89 a1       	ldd	r24, Y+33	; 0x21
    258a:	9a a1       	ldd	r25, Y+34	; 0x22
    258c:	9e 8f       	std	Y+30, r25	; 0x1e
    258e:	8d 8f       	std	Y+29, r24	; 0x1d
    2590:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2592:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2594:	01 97       	sbiw	r24, 0x01	; 1
    2596:	f1 f7       	brne	.-4      	; 0x2594 <main+0x134a>
    2598:	9e 8f       	std	Y+30, r25	; 0x1e
    259a:	8d 8f       	std	Y+29, r24	; 0x1d
				_delay_ms(1500);
				DIO_enuSetPinValue(DIO_u8_PORTB, DIO_u8_PIN2, DIO_u8_LOW);
    259c:	81 e0       	ldi	r24, 0x01	; 1
    259e:	62 e0       	ldi	r22, 0x02	; 2
    25a0:	40 e0       	ldi	r20, 0x00	; 0
    25a2:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    25a6:	1d c1       	rjmp	.+570    	; 0x27e2 <main+0x1598>
				break;

				//=========Room 3===============
				// lights on
			case 26:
				DIO_enuSetPinValue(DIO_u8_PORTB, DIO_u8_PIN3, DIO_u8_HIGH);
    25a8:	81 e0       	ldi	r24, 0x01	; 1
    25aa:	63 e0       	ldi	r22, 0x03	; 3
    25ac:	41 e0       	ldi	r20, 0x01	; 1
    25ae:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    25b2:	17 c1       	rjmp	.+558    	; 0x27e2 <main+0x1598>
				break;
				// lights off
			case 27:
				DIO_enuSetPinValue(DIO_u8_PORTB, DIO_u8_PIN3, DIO_u8_LOW);
    25b4:	81 e0       	ldi	r24, 0x01	; 1
    25b6:	63 e0       	ldi	r22, 0x03	; 3
    25b8:	40 e0       	ldi	r20, 0x00	; 0
    25ba:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    25be:	11 c1       	rjmp	.+546    	; 0x27e2 <main+0x1598>
				break;
				// conditioner on
			case 28:
				DIO_enuSetPinValue(DIO_u8_PORTC, DIO_u8_PIN0, DIO_u8_HIGH);
    25c0:	82 e0       	ldi	r24, 0x02	; 2
    25c2:	60 e0       	ldi	r22, 0x00	; 0
    25c4:	41 e0       	ldi	r20, 0x01	; 1
    25c6:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    25ca:	0b c1       	rjmp	.+534    	; 0x27e2 <main+0x1598>
				break;
				// conditioner off
			case 29:
				DIO_enuSetPinValue(DIO_u8_PORTC, DIO_u8_PIN0, DIO_u8_LOW);
    25cc:	82 e0       	ldi	r24, 0x02	; 2
    25ce:	60 e0       	ldi	r22, 0x00	; 0
    25d0:	40 e0       	ldi	r20, 0x00	; 0
    25d2:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    25d6:	05 c1       	rjmp	.+522    	; 0x27e2 <main+0x1598>
				break;
				// tv on
			case 32:
				DIO_enuSetPinValue(DIO_u8_PORTC, DIO_u8_PIN1, DIO_u8_HIGH);
    25d8:	82 e0       	ldi	r24, 0x02	; 2
    25da:	61 e0       	ldi	r22, 0x01	; 1
    25dc:	41 e0       	ldi	r20, 0x01	; 1
    25de:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    25e2:	ff c0       	rjmp	.+510    	; 0x27e2 <main+0x1598>
				break;
				// tv off
			case 33:
				DIO_enuSetPinValue(DIO_u8_PORTC, DIO_u8_PIN1, DIO_u8_LOW);
    25e4:	82 e0       	ldi	r24, 0x02	; 2
    25e6:	61 e0       	ldi	r22, 0x01	; 1
    25e8:	40 e0       	ldi	r20, 0x00	; 0
    25ea:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    25ee:	f9 c0       	rjmp	.+498    	; 0x27e2 <main+0x1598>
				break;
				// wondow on
			case 34:
				DIO_enuSetPinValue(DIO_u8_PORTC, DIO_u8_PIN2, DIO_u8_HIGH);
    25f0:	82 e0       	ldi	r24, 0x02	; 2
    25f2:	62 e0       	ldi	r22, 0x02	; 2
    25f4:	41 e0       	ldi	r20, 0x01	; 1
    25f6:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    25fa:	80 e0       	ldi	r24, 0x00	; 0
    25fc:	90 e8       	ldi	r25, 0x80	; 128
    25fe:	ab eb       	ldi	r26, 0xBB	; 187
    2600:	b4 e4       	ldi	r27, 0x44	; 68
    2602:	89 8f       	std	Y+25, r24	; 0x19
    2604:	9a 8f       	std	Y+26, r25	; 0x1a
    2606:	ab 8f       	std	Y+27, r26	; 0x1b
    2608:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    260a:	69 8d       	ldd	r22, Y+25	; 0x19
    260c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    260e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2610:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2612:	20 e0       	ldi	r18, 0x00	; 0
    2614:	30 e0       	ldi	r19, 0x00	; 0
    2616:	4a e7       	ldi	r20, 0x7A	; 122
    2618:	55 e4       	ldi	r21, 0x45	; 69
    261a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    261e:	dc 01       	movw	r26, r24
    2620:	cb 01       	movw	r24, r22
    2622:	8d 8b       	std	Y+21, r24	; 0x15
    2624:	9e 8b       	std	Y+22, r25	; 0x16
    2626:	af 8b       	std	Y+23, r26	; 0x17
    2628:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    262a:	6d 89       	ldd	r22, Y+21	; 0x15
    262c:	7e 89       	ldd	r23, Y+22	; 0x16
    262e:	8f 89       	ldd	r24, Y+23	; 0x17
    2630:	98 8d       	ldd	r25, Y+24	; 0x18
    2632:	20 e0       	ldi	r18, 0x00	; 0
    2634:	30 e0       	ldi	r19, 0x00	; 0
    2636:	40 e8       	ldi	r20, 0x80	; 128
    2638:	5f e3       	ldi	r21, 0x3F	; 63
    263a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    263e:	88 23       	and	r24, r24
    2640:	2c f4       	brge	.+10     	; 0x264c <main+0x1402>
		__ticks = 1;
    2642:	81 e0       	ldi	r24, 0x01	; 1
    2644:	90 e0       	ldi	r25, 0x00	; 0
    2646:	9c 8b       	std	Y+20, r25	; 0x14
    2648:	8b 8b       	std	Y+19, r24	; 0x13
    264a:	3f c0       	rjmp	.+126    	; 0x26ca <main+0x1480>
	else if (__tmp > 65535)
    264c:	6d 89       	ldd	r22, Y+21	; 0x15
    264e:	7e 89       	ldd	r23, Y+22	; 0x16
    2650:	8f 89       	ldd	r24, Y+23	; 0x17
    2652:	98 8d       	ldd	r25, Y+24	; 0x18
    2654:	20 e0       	ldi	r18, 0x00	; 0
    2656:	3f ef       	ldi	r19, 0xFF	; 255
    2658:	4f e7       	ldi	r20, 0x7F	; 127
    265a:	57 e4       	ldi	r21, 0x47	; 71
    265c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2660:	18 16       	cp	r1, r24
    2662:	4c f5       	brge	.+82     	; 0x26b6 <main+0x146c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2664:	69 8d       	ldd	r22, Y+25	; 0x19
    2666:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2668:	8b 8d       	ldd	r24, Y+27	; 0x1b
    266a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    266c:	20 e0       	ldi	r18, 0x00	; 0
    266e:	30 e0       	ldi	r19, 0x00	; 0
    2670:	40 e2       	ldi	r20, 0x20	; 32
    2672:	51 e4       	ldi	r21, 0x41	; 65
    2674:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2678:	dc 01       	movw	r26, r24
    267a:	cb 01       	movw	r24, r22
    267c:	bc 01       	movw	r22, r24
    267e:	cd 01       	movw	r24, r26
    2680:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2684:	dc 01       	movw	r26, r24
    2686:	cb 01       	movw	r24, r22
    2688:	9c 8b       	std	Y+20, r25	; 0x14
    268a:	8b 8b       	std	Y+19, r24	; 0x13
    268c:	0f c0       	rjmp	.+30     	; 0x26ac <main+0x1462>
    268e:	80 e9       	ldi	r24, 0x90	; 144
    2690:	91 e0       	ldi	r25, 0x01	; 1
    2692:	9a 8b       	std	Y+18, r25	; 0x12
    2694:	89 8b       	std	Y+17, r24	; 0x11
    2696:	89 89       	ldd	r24, Y+17	; 0x11
    2698:	9a 89       	ldd	r25, Y+18	; 0x12
    269a:	01 97       	sbiw	r24, 0x01	; 1
    269c:	f1 f7       	brne	.-4      	; 0x269a <main+0x1450>
    269e:	9a 8b       	std	Y+18, r25	; 0x12
    26a0:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    26a2:	8b 89       	ldd	r24, Y+19	; 0x13
    26a4:	9c 89       	ldd	r25, Y+20	; 0x14
    26a6:	01 97       	sbiw	r24, 0x01	; 1
    26a8:	9c 8b       	std	Y+20, r25	; 0x14
    26aa:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    26ac:	8b 89       	ldd	r24, Y+19	; 0x13
    26ae:	9c 89       	ldd	r25, Y+20	; 0x14
    26b0:	00 97       	sbiw	r24, 0x00	; 0
    26b2:	69 f7       	brne	.-38     	; 0x268e <main+0x1444>
    26b4:	14 c0       	rjmp	.+40     	; 0x26de <main+0x1494>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    26b6:	6d 89       	ldd	r22, Y+21	; 0x15
    26b8:	7e 89       	ldd	r23, Y+22	; 0x16
    26ba:	8f 89       	ldd	r24, Y+23	; 0x17
    26bc:	98 8d       	ldd	r25, Y+24	; 0x18
    26be:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    26c2:	dc 01       	movw	r26, r24
    26c4:	cb 01       	movw	r24, r22
    26c6:	9c 8b       	std	Y+20, r25	; 0x14
    26c8:	8b 8b       	std	Y+19, r24	; 0x13
    26ca:	8b 89       	ldd	r24, Y+19	; 0x13
    26cc:	9c 89       	ldd	r25, Y+20	; 0x14
    26ce:	98 8b       	std	Y+16, r25	; 0x10
    26d0:	8f 87       	std	Y+15, r24	; 0x0f
    26d2:	8f 85       	ldd	r24, Y+15	; 0x0f
    26d4:	98 89       	ldd	r25, Y+16	; 0x10
    26d6:	01 97       	sbiw	r24, 0x01	; 1
    26d8:	f1 f7       	brne	.-4      	; 0x26d6 <main+0x148c>
    26da:	98 8b       	std	Y+16, r25	; 0x10
    26dc:	8f 87       	std	Y+15, r24	; 0x0f
				_delay_ms(1500);
				DIO_enuSetPinValue(DIO_u8_PORTC, DIO_u8_PIN2, DIO_u8_LOW);
    26de:	82 e0       	ldi	r24, 0x02	; 2
    26e0:	62 e0       	ldi	r22, 0x02	; 2
    26e2:	40 e0       	ldi	r20, 0x00	; 0
    26e4:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    26e8:	7c c0       	rjmp	.+248    	; 0x27e2 <main+0x1598>
				break;
				// wondow off
			case 35:
				DIO_enuSetPinValue(DIO_u8_PORTC, DIO_u8_PIN3, DIO_u8_HIGH);
    26ea:	82 e0       	ldi	r24, 0x02	; 2
    26ec:	63 e0       	ldi	r22, 0x03	; 3
    26ee:	41 e0       	ldi	r20, 0x01	; 1
    26f0:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
    26f4:	80 e0       	ldi	r24, 0x00	; 0
    26f6:	90 e8       	ldi	r25, 0x80	; 128
    26f8:	ab eb       	ldi	r26, 0xBB	; 187
    26fa:	b4 e4       	ldi	r27, 0x44	; 68
    26fc:	8b 87       	std	Y+11, r24	; 0x0b
    26fe:	9c 87       	std	Y+12, r25	; 0x0c
    2700:	ad 87       	std	Y+13, r26	; 0x0d
    2702:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2704:	6b 85       	ldd	r22, Y+11	; 0x0b
    2706:	7c 85       	ldd	r23, Y+12	; 0x0c
    2708:	8d 85       	ldd	r24, Y+13	; 0x0d
    270a:	9e 85       	ldd	r25, Y+14	; 0x0e
    270c:	20 e0       	ldi	r18, 0x00	; 0
    270e:	30 e0       	ldi	r19, 0x00	; 0
    2710:	4a e7       	ldi	r20, 0x7A	; 122
    2712:	55 e4       	ldi	r21, 0x45	; 69
    2714:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2718:	dc 01       	movw	r26, r24
    271a:	cb 01       	movw	r24, r22
    271c:	8f 83       	std	Y+7, r24	; 0x07
    271e:	98 87       	std	Y+8, r25	; 0x08
    2720:	a9 87       	std	Y+9, r26	; 0x09
    2722:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2724:	6f 81       	ldd	r22, Y+7	; 0x07
    2726:	78 85       	ldd	r23, Y+8	; 0x08
    2728:	89 85       	ldd	r24, Y+9	; 0x09
    272a:	9a 85       	ldd	r25, Y+10	; 0x0a
    272c:	20 e0       	ldi	r18, 0x00	; 0
    272e:	30 e0       	ldi	r19, 0x00	; 0
    2730:	40 e8       	ldi	r20, 0x80	; 128
    2732:	5f e3       	ldi	r21, 0x3F	; 63
    2734:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2738:	88 23       	and	r24, r24
    273a:	2c f4       	brge	.+10     	; 0x2746 <main+0x14fc>
		__ticks = 1;
    273c:	81 e0       	ldi	r24, 0x01	; 1
    273e:	90 e0       	ldi	r25, 0x00	; 0
    2740:	9e 83       	std	Y+6, r25	; 0x06
    2742:	8d 83       	std	Y+5, r24	; 0x05
    2744:	3f c0       	rjmp	.+126    	; 0x27c4 <main+0x157a>
	else if (__tmp > 65535)
    2746:	6f 81       	ldd	r22, Y+7	; 0x07
    2748:	78 85       	ldd	r23, Y+8	; 0x08
    274a:	89 85       	ldd	r24, Y+9	; 0x09
    274c:	9a 85       	ldd	r25, Y+10	; 0x0a
    274e:	20 e0       	ldi	r18, 0x00	; 0
    2750:	3f ef       	ldi	r19, 0xFF	; 255
    2752:	4f e7       	ldi	r20, 0x7F	; 127
    2754:	57 e4       	ldi	r21, 0x47	; 71
    2756:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    275a:	18 16       	cp	r1, r24
    275c:	4c f5       	brge	.+82     	; 0x27b0 <main+0x1566>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    275e:	6b 85       	ldd	r22, Y+11	; 0x0b
    2760:	7c 85       	ldd	r23, Y+12	; 0x0c
    2762:	8d 85       	ldd	r24, Y+13	; 0x0d
    2764:	9e 85       	ldd	r25, Y+14	; 0x0e
    2766:	20 e0       	ldi	r18, 0x00	; 0
    2768:	30 e0       	ldi	r19, 0x00	; 0
    276a:	40 e2       	ldi	r20, 0x20	; 32
    276c:	51 e4       	ldi	r21, 0x41	; 65
    276e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2772:	dc 01       	movw	r26, r24
    2774:	cb 01       	movw	r24, r22
    2776:	bc 01       	movw	r22, r24
    2778:	cd 01       	movw	r24, r26
    277a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    277e:	dc 01       	movw	r26, r24
    2780:	cb 01       	movw	r24, r22
    2782:	9e 83       	std	Y+6, r25	; 0x06
    2784:	8d 83       	std	Y+5, r24	; 0x05
    2786:	0f c0       	rjmp	.+30     	; 0x27a6 <main+0x155c>
    2788:	80 e9       	ldi	r24, 0x90	; 144
    278a:	91 e0       	ldi	r25, 0x01	; 1
    278c:	9c 83       	std	Y+4, r25	; 0x04
    278e:	8b 83       	std	Y+3, r24	; 0x03
    2790:	8b 81       	ldd	r24, Y+3	; 0x03
    2792:	9c 81       	ldd	r25, Y+4	; 0x04
    2794:	01 97       	sbiw	r24, 0x01	; 1
    2796:	f1 f7       	brne	.-4      	; 0x2794 <main+0x154a>
    2798:	9c 83       	std	Y+4, r25	; 0x04
    279a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    279c:	8d 81       	ldd	r24, Y+5	; 0x05
    279e:	9e 81       	ldd	r25, Y+6	; 0x06
    27a0:	01 97       	sbiw	r24, 0x01	; 1
    27a2:	9e 83       	std	Y+6, r25	; 0x06
    27a4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    27a6:	8d 81       	ldd	r24, Y+5	; 0x05
    27a8:	9e 81       	ldd	r25, Y+6	; 0x06
    27aa:	00 97       	sbiw	r24, 0x00	; 0
    27ac:	69 f7       	brne	.-38     	; 0x2788 <main+0x153e>
    27ae:	14 c0       	rjmp	.+40     	; 0x27d8 <main+0x158e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    27b0:	6f 81       	ldd	r22, Y+7	; 0x07
    27b2:	78 85       	ldd	r23, Y+8	; 0x08
    27b4:	89 85       	ldd	r24, Y+9	; 0x09
    27b6:	9a 85       	ldd	r25, Y+10	; 0x0a
    27b8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    27bc:	dc 01       	movw	r26, r24
    27be:	cb 01       	movw	r24, r22
    27c0:	9e 83       	std	Y+6, r25	; 0x06
    27c2:	8d 83       	std	Y+5, r24	; 0x05
    27c4:	8d 81       	ldd	r24, Y+5	; 0x05
    27c6:	9e 81       	ldd	r25, Y+6	; 0x06
    27c8:	9a 83       	std	Y+2, r25	; 0x02
    27ca:	89 83       	std	Y+1, r24	; 0x01
    27cc:	89 81       	ldd	r24, Y+1	; 0x01
    27ce:	9a 81       	ldd	r25, Y+2	; 0x02
    27d0:	01 97       	sbiw	r24, 0x01	; 1
    27d2:	f1 f7       	brne	.-4      	; 0x27d0 <main+0x1586>
    27d4:	9a 83       	std	Y+2, r25	; 0x02
    27d6:	89 83       	std	Y+1, r24	; 0x01
				_delay_ms(1500);
				DIO_enuSetPinValue(DIO_u8_PORTC, DIO_u8_PIN3, DIO_u8_LOW);
    27d8:	82 e0       	ldi	r24, 0x02	; 2
    27da:	63 e0       	ldi	r22, 0x03	; 3
    27dc:	40 e0       	ldi	r20, 0x00	; 0
    27de:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_enuSetPinValue>
				break;
			}

			Local_u8SPI_PREVIOUSMessege = SPI_u8RecievedValue();
    27e2:	0e 94 20 06 	call	0xc40	; 0xc40 <SPI_u8RecievedValue>
    27e6:	fe 01       	movw	r30, r28
    27e8:	e7 54       	subi	r30, 0x47	; 71
    27ea:	ff 4f       	sbci	r31, 0xFF	; 255
    27ec:	80 83       	st	Z, r24
    27ee:	0c 94 3d 09 	jmp	0x127a	; 0x127a <main+0x30>

000027f2 <__prologue_saves__>:
    27f2:	2f 92       	push	r2
    27f4:	3f 92       	push	r3
    27f6:	4f 92       	push	r4
    27f8:	5f 92       	push	r5
    27fa:	6f 92       	push	r6
    27fc:	7f 92       	push	r7
    27fe:	8f 92       	push	r8
    2800:	9f 92       	push	r9
    2802:	af 92       	push	r10
    2804:	bf 92       	push	r11
    2806:	cf 92       	push	r12
    2808:	df 92       	push	r13
    280a:	ef 92       	push	r14
    280c:	ff 92       	push	r15
    280e:	0f 93       	push	r16
    2810:	1f 93       	push	r17
    2812:	cf 93       	push	r28
    2814:	df 93       	push	r29
    2816:	cd b7       	in	r28, 0x3d	; 61
    2818:	de b7       	in	r29, 0x3e	; 62
    281a:	ca 1b       	sub	r28, r26
    281c:	db 0b       	sbc	r29, r27
    281e:	0f b6       	in	r0, 0x3f	; 63
    2820:	f8 94       	cli
    2822:	de bf       	out	0x3e, r29	; 62
    2824:	0f be       	out	0x3f, r0	; 63
    2826:	cd bf       	out	0x3d, r28	; 61
    2828:	09 94       	ijmp

0000282a <__epilogue_restores__>:
    282a:	2a 88       	ldd	r2, Y+18	; 0x12
    282c:	39 88       	ldd	r3, Y+17	; 0x11
    282e:	48 88       	ldd	r4, Y+16	; 0x10
    2830:	5f 84       	ldd	r5, Y+15	; 0x0f
    2832:	6e 84       	ldd	r6, Y+14	; 0x0e
    2834:	7d 84       	ldd	r7, Y+13	; 0x0d
    2836:	8c 84       	ldd	r8, Y+12	; 0x0c
    2838:	9b 84       	ldd	r9, Y+11	; 0x0b
    283a:	aa 84       	ldd	r10, Y+10	; 0x0a
    283c:	b9 84       	ldd	r11, Y+9	; 0x09
    283e:	c8 84       	ldd	r12, Y+8	; 0x08
    2840:	df 80       	ldd	r13, Y+7	; 0x07
    2842:	ee 80       	ldd	r14, Y+6	; 0x06
    2844:	fd 80       	ldd	r15, Y+5	; 0x05
    2846:	0c 81       	ldd	r16, Y+4	; 0x04
    2848:	1b 81       	ldd	r17, Y+3	; 0x03
    284a:	aa 81       	ldd	r26, Y+2	; 0x02
    284c:	b9 81       	ldd	r27, Y+1	; 0x01
    284e:	ce 0f       	add	r28, r30
    2850:	d1 1d       	adc	r29, r1
    2852:	0f b6       	in	r0, 0x3f	; 63
    2854:	f8 94       	cli
    2856:	de bf       	out	0x3e, r29	; 62
    2858:	0f be       	out	0x3f, r0	; 63
    285a:	cd bf       	out	0x3d, r28	; 61
    285c:	ed 01       	movw	r28, r26
    285e:	08 95       	ret

00002860 <_exit>:
    2860:	f8 94       	cli

00002862 <__stop_program>:
    2862:	ff cf       	rjmp	.-2      	; 0x2862 <__stop_program>
